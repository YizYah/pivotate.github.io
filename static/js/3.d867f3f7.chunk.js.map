{"version":3,"sources":["components/EditInstanceForm/index.js","components/DeleteInstanceMenu/index.js","actions/index.js","flattenData/index.js","components/AppSpec/AppCreationForm/index.js","components/AppSpec/DescriptionCreationForm/index.js","components/source-props/appSpec.js","components/AppSpec/UserTypeCreationForm/index.js","components/AppSpec/ScreenCreationForm/index.js","components/AppSpec/InfoTypeCreationForm/index.js","components/AppSpec/InfoType/index.js","components/AppSpec/InfoTypes/index.js","components/AppSpec/Screen/index.js","components/AppSpec/Screens/index.js","components/AppSpec/UserType/index.js","components/AppSpec/UserTypes/index.js","components/AppSpec/App/index.js","components/AppSpec/Description/index.js","components/AppSpec/Descriptions/index.js"],"names":["Button","styled","button","props","hoverColor","EditInstanceForm","id","label","value","onChange","onSave","onCancel","disabled","htmlFor","type","onClick","Container","div","DeleteInstanceMenu","onDelete","increment","decrement","currentUser","flattenData","element","flatData","instance","children","length","filter","child","map","typeId","instances","flattenChildData","compose","graphql","EXECUTE","name","customerId","createApp","refetchQueries","useState","appValue","updateAppValue","loading","updateLoading","dispatch","useHistory","useSelector","state","counter","useDispatch","useRef","handleSubmit","e","a","async","preventDefault","variables","actionId","CREATE_APP_FOR_APP_SPEC_ACTION_ID","executionParameters","JSON","stringify","parentInstanceId","unrestricted","createAppResponse","newAppData","parse","data","Execute","current","wrappedInstance","yell","className","style","maxWidth","margin","placeholder","target","onKeyPress","charCode","ref","marginTop","display","marginLeft","DescriptionCreationForm","forwardRef","useImperativeHandle","param","createDescription","descriptionValue","updateDescriptionValue","CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","instanceId","createDescriptionResponse","ExecuteAction","EXECUTE_ACTION","withRef","SOURCE_APP_SPEC_QUERY","gql","APP_SPEC_RELATIONSHIPS","app","userType","screen","infoType","description","parentId","createUserType","userTypeValue","updateUserTypeValue","console","log","CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","createUserTypeResponse","createScreen","screenValue","updateScreenValue","CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID","createScreenResponse","createInfoType","infoTypeValue","updateInfoTypeValue","CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","createInfoTypeResponse","InfoTypeStyleWrapper","selected","isDeleting","updateInstance","deleteInstance","saveInstance","onSelect","isEditMode","updateIsEditMode","isSaving","updateIsSaving","isDeleteMode","updateIsDeleteMode","updateIsDeleting","UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","ADD_HAS_PARENT_FOR_PARENT_ACTION_ID","InfoTypes","selectedInfoTypeId","wrapperRef","createRef","handleClick","node","contains","setState","handleSelect","document","addEventListener","this","removeEventListener","screenId","infoTypes","onUpdate","key","v4","Component","ScreenStyleWrapper","infoTypeData","find","TYPE_INFO_TYPE_ID","DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID","Screens","selectedScreenId","userTypeId","screens","UserTypeStyleWrapper","screenData","TYPE_SCREEN_ID","UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","mapDispatchToProps","UserTypes","selectedUserTypeId","appId","userTypes","connect","userTypeData","TYPE_USER_TYPE_ID","descriptionData","TYPE_DESCRIPTION_ID","descriptions","UPDATE_APP_FOR_APP_SPEC_ACTION_ID","DELETE_APP_FOR_APP_SPEC_ACTION_ID","width","Descriptions","DescriptionStyleWrapper","UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","selectedDescriptionId"],"mappings":"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","file":"static/js/3.d867f3f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${props => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nfunction EditInstanceForm({\r\n  id,\r\n  label,\r\n  value,\r\n  onChange,\r\n  onSave,\r\n  onCancel,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>\r\n        {label}\r\n        <input\r\n          id={id}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n        />\r\n      </label>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#00FF00\"\r\n        onClick={onSave}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#FF0000\"\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditInstanceForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${props => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  color: red;\r\n  margin: 1em;\r\n  padding: 1em;\r\n  border: 1px solid #eeeeee;\r\n`;\r\n\r\nfunction DeleteInstanceMenu({\r\n  onDelete,\r\n  onCancel,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <Container>\r\n      Delete?\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#00FF00\"\r\n        onClick={onDelete}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#FF0000\"\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DeleteInstanceMenu;\r\n","export const increment = () => {\r\n  return {\r\n    type: \"INCREMENT\",\r\n  };\r\n};\r\n\r\nexport const decrement = () => {\r\n  return {\r\n    type: \"DECREMENT\",\r\n  };\r\n};\r\n\r\nexport const currentUser = () => {\r\n  return {\r\n    type: \"CURRENT_USER\",\r\n  };\r\n};\r\n","export function flattenChildData(element) {\r\n  const flatData ={\r\n    typeId: element.typeId,\r\n    instances: []\r\n  };\r\n\r\n  if (element.instances && element.instances.length > 0) {\r\n    flatData.instances = element.instances.filter(child => !!child).map(\r\n      instance => flattenData(instance)\r\n    );\r\n  }\r\n\r\n  return flatData;\r\n};\r\n\r\nexport function flattenData(element) {\r\n  const flatData = {\r\n    ...element.instance,\r\n    children: []\r\n  };\r\n\r\n  if (element.children && element.children.length > 0) {\r\n    flatData.children = element.children.filter(child => !!child).map(\r\n      child => flattenChildData(child)\r\n    );\r\n  }\r\n\r\n  return flatData;\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport DescriptionCreationForm from \"../DescriptionCreationForm\";\r\nimport Descriptions from \"../Descriptions\";\r\nimport { CREATE_APP_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nfunction AppCreationForm({ customerId, createApp, refetchQueries }) {\r\n  const [appValue, updateAppValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n  const history = useHistory();\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n  const child = useRef();\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!appValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createAppResponse = await createApp({\r\n      variables: {\r\n        actionId: CREATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: customerId,\r\n          value: appValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n    const newAppData = JSON.parse(createAppResponse.data.Execute);\r\n\r\n    await child.current.wrappedInstance.yell(newAppData);\r\n\r\n    updateAppValue(\"\");\r\n    // child.current.wrappedInstance.handleSubmit();\r\n    updateLoading(false);\r\n\r\n    dispatch(increment());\r\n\r\n    // history.push(\"/meeting-step/create-user-type\");\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <div\r\n          className=\"text-center\"\r\n          style={{ maxWidth: \"350px\", margin: \"1em auto 2em auto\" }}\r\n        >\r\n          <strong>Tell us more about what you want in your web app! </strong>\r\n        </div>\r\n        <form>\r\n          <label htmlFor=\"app-value\">\r\n            <input\r\n              className=\"input\"\r\n              placeholder=\"Create Name\"\r\n              id=\"app-value\"\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              onKeyPress={handleKeyPress}\r\n              value={appValue}\r\n              disabled={loading}\r\n            />\r\n\r\n            <DescriptionCreationForm\r\n              parentInstanceId\r\n              ref={child}\r\n              refetchQueries={refetchQueries}\r\n            >\r\n              {\" \"}\r\n            </DescriptionCreationForm>\r\n          </label>\r\n        </form>\r\n      </div>\r\n      <div style={{ marginTop: \"1em\" }}>\r\n        <button\r\n          style={{ display: \"block\", marginLeft: \"auto\" }}\r\n          className=\"button button--yellow\"\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          onClick={handleSubmit}\r\n        >\r\n          {loading ? \"Creating App...\" : \"Create App\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createApp\" }))(\r\n  AppCreationForm\r\n);\r\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nconst DescriptionCreationForm = forwardRef((props, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    handleSubmit,\r\n    yell: (param) => handleSubmit(param),\r\n  }));\r\n\r\n  const parentId = props.parentInstanceId;\r\n  const createDescription = props.createDescription;\r\n  const refetchQueries = props.refetchQueries;\r\n  const parentInstanceId = props.parentInstanceId;\r\n  const [descriptionValue, updateDescriptionValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(param) {\r\n    if (!descriptionValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createDescriptionResponse = await createDescription({\r\n      variables: {\r\n        actionId: CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: param.instanceId,\r\n          value: descriptionValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newDescriptionData = JSON.parse(\r\n      createDescriptionResponse.data.ExecuteAction\r\n    );\r\n\r\n    updateDescriptionValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  // function handleKeyPress(e) {\r\n  //   if (e.charCode === 13) {\r\n  //     handleSubmit(e);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        placeholder=\"Description\"\r\n        className=\"input\"\r\n        id=\"description-value\"\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        // onKeyPress={handleKeyPress}\r\n        value={descriptionValue}\r\n        disabled={loading}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default compose(\r\n  graphql(EXECUTE_ACTION, { name: \"createDescription\", withRef: true })\r\n)(DescriptionCreationForm);\r\n","import gql from 'graphql-tag';\r\n\r\n  export const SOURCE_APP_SPEC_QUERY = gql`\r\n  query UNIT(\r\n    $id: ID!\r\n    $typeRelationships: String!\r\n    $parameters: String\r\n  ) {\r\n    unitData(\r\n      unitId: $id\r\n      typeRelationships: $typeRelationships\r\n      parameters: $parameters\r\n    )\r\n    {\r\n      \r\n        instance {\r\n            id\r\n            value\r\n        }\r\n        children {\r\n            typeId\r\n            instances {\r\n                \r\n\t\tinstance {\r\n\t\t    id\r\n\t\t    value\r\n\t\t}\r\n\t\tchildren {\r\n\t\t    typeId\r\n\t\t    instances {\r\n\t\t        \r\n\t\t\tinstance {\r\n\t\t\t    id\r\n\t\t\t    value\r\n\t\t\t}\r\n\t\t\tchildren {\r\n\t\t\t    typeId\r\n\t\t\t    instances {\r\n\t\t\t        \r\n\t\t\t\tinstance {\r\n\t\t\t\t    id\r\n\t\t\t\t    value\r\n\t\t\t\t}\r\n\t\t\t    }\r\n\t\t\t}\r\n\t\t    }\r\n\t\t}\r\n            }\r\n        }\r\n    \r\n    }\r\n  }\r\n`;\r\n\r\nexport const APP_SPEC_RELATIONSHIPS = {\r\n   app: {\r\n        userType: {\r\n        screen: {\r\n        infoType: null\r\n    }\r\n    }, description: null\r\n    },\r\n};","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\nimport { CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction UserTypeCreationForm({ parentId, createUserType, refetchQueries }) {\r\n  const [userTypeValue, updateUserTypeValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n  function handleChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!userTypeValue) {\r\n      return;\r\n    }\r\n    console.log(parentId);\r\n\r\n    updateLoading(true);\r\n\r\n    const createUserTypeResponse = await createUserType({\r\n      variables: {\r\n        actionId: CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: userTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n    dispatch(increment());\r\n\r\n    const newUserTypeData = JSON.parse(createUserTypeResponse.data.Execute);\r\n\r\n    updateUserTypeValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"userType-value\">\r\n        <input\r\n          placeholder=\"New User Type\"\r\n          className=\"input\"\r\n          id=\"userType-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={userTypeValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating UserType...\" : \"Create UserType\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createUserType\" }))(\r\n  UserTypeCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction ScreenCreationForm({ parentId, createScreen, refetchQueries }) {\r\n  const [screenValue, updateScreenValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(parentId);\r\n\r\n    if (!screenValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createScreenResponse = await createScreen({\r\n      variables: {\r\n        actionId: CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: screenValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newScreenData = JSON.parse(createScreenResponse.data.Execute);\r\n\r\n    updateScreenValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"screen-value\">\r\n        <input\r\n          placeholder=\"New Screen\"\r\n          className=\"input\"\r\n          id=\"screen-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={screenValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating Screen...\" : \"Create Screen\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createScreen\" }))(\r\n  ScreenCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction InfoTypeCreationForm({ parentId, createInfoType, refetchQueries }) {\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(parentId);\r\n    if (!infoTypeValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createInfoTypeResponse = await createInfoType({\r\n      variables: {\r\n        actionId: CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: infoTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newInfoTypeData = JSON.parse(createInfoTypeResponse.data.Execute);\r\n\r\n    updateInfoTypeValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"infoType-value\">\r\n        <input\r\n          className=\"input\"\r\n          placeholder=\"New Type of Info\"\r\n          id=\"infoType-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={infoTypeValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating InfoType...\" : \"Create InfoType\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createInfoType\" }))(\r\n  InfoTypeCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\n// add styling here\r\nconst InfoTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction InfoType({\r\n  infoType,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  saveInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(infoType.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <InfoTypeStyleWrapper onClick={() => onSelect(infoType.id)}>\r\n  //       { infoTypeValue }\r\n  //     </InfoTypeStyleWrapper>\r\n  //   );k\r\n  // }\r\n\r\n  function handleInfoTypeValueChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleInfoTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: infoType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={infoType.id}\r\n          label=\"InfoType Value:\"\r\n          value={infoTypeValue}\r\n          onChange={handleInfoTypeValueChange}\r\n          onSave={handleInfoTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: infoType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    try {\r\n      await saveInstance({\r\n        variables: {\r\n          actionId: ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            value: \"Clarkkkkkk\",\r\n          }),\r\n          unrestricted: false,\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"box box--small\" selected={selected}>\r\n      <span> {infoTypeValue} </span>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <button type=\"button\" onClick={handleSubmit}>\r\n        {\" \"}\r\n        test{\" \"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" }),\r\n  graphql(EXECUTE, { name: \"saveInstance\" })\r\n)(InfoType);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport InfoTypeCreationForm from \"../InfoTypeCreationForm\";\r\nimport InfoType from \"../InfoType\";\r\n\r\n// np__added_start unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nconst InfoTypesStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nclass InfoTypes extends Component {\r\n  state = {\r\n    selectedInfoTypeId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedInfoTypeId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedInfoTypeId: id });\r\n\r\n  render() {\r\n    const { screenId, infoTypes, refetchQueries, onUpdate } = this.props;\r\n    const { selectedInfoTypeId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {infoTypes.map((infoType) => (\r\n          <InfoType\r\n            key={v4()}\r\n            infoType={infoType}\r\n            selected={infoType.id === selectedInfoTypeId}\r\n            onUpdate={onUpdate}\r\n            parentId={screenId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        <br></br>\r\n        <InfoTypeCreationForm\r\n          parentId={screenId}\r\n          refetchQueries={refetchQueries}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoTypes;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_INFO_TYPE_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport InfoTypes from \"../InfoTypes\";\r\n\r\n// add styling here\r\nconst ScreenStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction Screen({\r\n  screen,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [screenValue, updateScreenValue] = useState(screen.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const infoTypeData =\r\n    screen.children &&\r\n    screen.children.find((child) => child.typeId === TYPE_INFO_TYPE_ID);\r\n  const infoTypes = infoTypeData ? infoTypeData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <ScreenStyleWrapper onClick={() => onSelect(screen.id)}>\r\n  //       {screenValue}\r\n  //     </ScreenStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleScreenValueChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleScreenValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: screenValue,\r\n          instanceId: screen.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  // if (isEditMode) {\r\n  //   return (\r\n  //     <ScreenStyleWrapper>\r\n  //       <EditInstanceForm\r\n  //         id={ screen.id }\r\n  //         label=\"Screen Value:\"\r\n  //         value={ screenValue }\r\n  //         onChange={handleScreenValueChange}\r\n  //         onSave={handleScreenValueSave}\r\n  //         onCancel={handleCancelEdit}\r\n  //         disabled={isSaving}\r\n  //       />\r\n  //     </ScreenStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: screen.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <ScreenStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {screenValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </ScreenStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"box\" selected={selected}>\r\n      <strong> {screenValue} </strong>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <InfoTypes\r\n        infoTypes={infoTypes}\r\n        screenId={screen.id}\r\n        label=\"InfoType?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(Screen);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport ScreenCreationForm from \"../ScreenCreationForm\";\r\nimport Screen from \"../Screen\";\r\n\r\n// np__added_start unit: appSpec, comp: Screens, loc: styling\r\n\r\nconst ScreensStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: Screens, loc: styling\r\n\r\nclass Screens extends Component {\r\n  state = {\r\n    selectedScreenId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedScreenId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedScreenId: id });\r\n\r\n  render() {\r\n    const { userTypeId, screens, refetchQueries, onUpdate } = this.props;\r\n    const { selectedScreenId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: Screens, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: Screens, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {screens.map((screen) => (\r\n          <Screen\r\n            key={v4()}\r\n            screen={screen}\r\n            selected={screen.id === selectedScreenId}\r\n            onUpdate={onUpdate}\r\n            parentId={userTypeId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        <br></br>\r\n        <ScreenCreationForm\r\n          parentId={userTypeId}\r\n          refetchQueries={refetchQueries}\r\n        />\r\n\r\n        {/* np__added_start unit: appSpec, comp: Screens, loc: renderEnding */}\r\n        {/* np__added_end unit: appSpec, comp: Screens, loc: renderEnding */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Screens;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_SCREEN_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport Screens from \"../Screens\";\r\n\r\n// add styling here\r\nconst UserTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction UserType({\r\n  userType,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [userTypeValue, updateUserTypeValue] = useState(userType.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const screenData =\r\n    userType.children &&\r\n    userType.children.find((child) => child.typeId === TYPE_SCREEN_ID);\r\n  const screens = screenData ? screenData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <UserTypeStyleWrapper onClick={() => onSelect(userType.id)}>\r\n  //       { userTypeValue }\r\n  //     </UserTypeStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleUserTypeValueChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleUserTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: userTypeValue,\r\n          instanceId: userType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <UserTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={userType.id}\r\n          label=\"UserType Value:\"\r\n          value={userTypeValue}\r\n          onChange={handleUserTypeValueChange}\r\n          onSave={handleUserTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: userType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <UserTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {userTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"box\" selected={selected}>\r\n      <strong> {userTypeValue} </strong>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <Screens\r\n        screens={screens}\r\n        userTypeId={userType.id}\r\n        label=\"Screen?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(UserType);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport UserTypeCreationForm from \"../UserTypeCreationForm\";\r\nimport UserType from \"../UserType\";\r\nimport { connect } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    counter: state.counter,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  increment,\r\n  decrement,\r\n};\r\n\r\nclass UserTypes extends Component {\r\n  state = {\r\n    selectedUserTypeId: null,\r\n  };\r\n  wrapperRef = createRef();\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedUserTypeId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedUserTypeId: id });\r\n\r\n  render() {\r\n    const { appId, userTypes, refetchQueries, onUpdate } = this.props;\r\n    const { selectedUserTypeId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: UserTypes, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: UserTypes, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n          <div>\r\n            {userTypes.map((userType) => (\r\n              <UserType\r\n                key={v4()}\r\n                userType={userType}\r\n                selected={userType.id === selectedUserTypeId}\r\n                onUpdate={onUpdate}\r\n                parentId={appId}\r\n                refetchQueries={refetchQueries}\r\n                onSelect={this.handleSelect}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          <br></br>\r\n\r\n          <UserTypeCreationForm\r\n            parentId={appId}\r\n            refetchQueries={refetchQueries}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTypes);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_USER_TYPE_ID,\r\n  TYPE_DESCRIPTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport UserTypes from \"../UserTypes\";\r\nimport Descriptions from \"../Descriptions\";\r\n\r\n// add styling here\r\nconst div = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction App({\r\n  app,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [appValue, updateAppValue] = useState(app.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const userTypeData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_USER_TYPE_ID);\r\n  const userTypes = userTypeData ? userTypeData.instances : [];\r\n  const descriptionData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_DESCRIPTION_ID);\r\n  const descriptions = descriptionData ? descriptionData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <div onClick={() => onSelect(app.id)}>\r\n  //       {appValue}\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  function handleAppValueChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n\r\n  async function handleAppValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: appValue,\r\n          instanceId: app.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <div>\r\n        <EditInstanceForm\r\n          id={app.id}\r\n          label=\"App Value:\"\r\n          value={appValue}\r\n          onChange={handleAppValueChange}\r\n          onSave={handleAppValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: app.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <div selected={selected} isDeleting={isDeleting}>\r\n        {appValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div selected={selected} className=\"box\" style={{ width: \"100%\" }}>\r\n      <div className=\"flex justify-between\">\r\n        <strong> {appValue} </strong>\r\n        <div>\r\n          <Descriptions\r\n            descriptions={descriptions}\r\n            appId={app.id}\r\n            label=\"Description?\"\r\n            refetchQueries={refetchQueries}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <UserTypes\r\n        userTypes={userTypes}\r\n        appId={app.id}\r\n        label=\"UserType?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(App);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\n// add styling here\r\nconst DescriptionStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction Description({\r\n  description,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [descriptionValue, updateDescriptionValue] = useState(\r\n    description.value\r\n  );\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  if (!selected) {\r\n    return <div> {descriptionValue} </div>;\r\n  }\r\n\r\n  function handleDescriptionValueChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleDescriptionValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: descriptionValue,\r\n          instanceId: description.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <DescriptionStyleWrapper>\r\n        <EditInstanceForm\r\n          id={description.id}\r\n          label=\"Description Value:\"\r\n          value={descriptionValue}\r\n          onChange={handleDescriptionValueChange}\r\n          onSave={handleDescriptionValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: description.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <DescriptionStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {descriptionValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DescriptionStyleWrapper selected={selected}>\r\n      {descriptionValue}\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n    </DescriptionStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(Description);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport DescriptionCreationForm from \"../DescriptionCreationForm\";\r\nimport Description from \"../Description\";\r\n\r\n// np__added_start unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nconst DescriptionsStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nclass Descriptions extends Component {\r\n  state = {\r\n    selectedDescriptionId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedDescriptionId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedDescriptionId: id });\r\n\r\n  render() {\r\n    const { appId, descriptions, refetchQueries, onUpdate } = this.props;\r\n    const { selectedDescriptionId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: Descriptions, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: Descriptions, loc: renderBeginning */\r\n    }\r\n\r\n    // return (\r\n    //   <DescriptionsStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\r\n    //     <DescriptionCreationForm\r\n    //       parentId={appId}\r\n    //       refetchQueries={refetchQueries}\r\n    //     />\r\n\r\n    //     {descriptions.map(description => (\r\n    //       <Description\r\n    //         key={v4()}\r\n    //         description={description}\r\n    //         selected={description.id === selectedDescriptionId}\r\n    //         onUpdate={onUpdate}\r\n    //         parentId={appId}\r\n    //         refetchQueries={refetchQueries}\r\n    //         onSelect={this.handleSelect}\r\n    //       />\r\n    //     ))}\r\n    //     {/* np__added_start unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n    //     {/* np__added_end unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n\r\n    //   </DescriptionsStyleWrapper>\r\n    // )\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {descriptions.map((description) => (\r\n          <Description\r\n            key={v4()}\r\n            description={description}\r\n            selected={description.id === selectedDescriptionId}\r\n            onUpdate={onUpdate}\r\n            parentId={appId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        {/* np__added_start unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n        {/* np__added_end unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Descriptions;\r\n"],"sourceRoot":""}