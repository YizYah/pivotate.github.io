{"version":3,"sources":["components/EditInstanceForm/index.js","components/DeleteInstanceMenu/index.js","actions/index.js","flattenData/index.js","components/AppSpec/AppCreationForm/index.js","components/AppSpec/DescriptionCreationForm/index.js","components/source-props/appSpec.js","components/AppSpec/UserTypeCreationForm/index.js","components/AppSpec/ScreenCreationForm/index.js","components/AppSpec/InfoTypeCreationForm/index.js","components/AppSpec/InfoTypeChildren/index.js","components/AppSpec/InfoType/index.js","components/AppSpec/InfoTypes/index.js","components/AppSpec/Screen/index.js","components/AppSpec/Screens/index.js","components/AppSpec/UserType/index.js","components/AppSpec/UserTypes/index.js","components/AppSpec/App/index.js","components/AppSpec/Description/index.js","components/AppSpec/Descriptions/index.js"],"names":["Button","styled","button","props","hoverColor","EditInstanceForm","id","label","value","onChange","onSave","onCancel","disabled","htmlFor","type","onClick","Container","div","DeleteInstanceMenu","onDelete","increment","decrement","currentUser","flattenData","element","flatData","instance","children","length","filter","child","map","typeId","instances","flattenChildData","compose","graphql","EXECUTE","name","customerId","createApp","refetchQueries","useState","appValue","updateAppValue","loading","updateLoading","dispatch","useHistory","useSelector","state","counter","useDispatch","useRef","handleSubmit","e","a","async","preventDefault","variables","actionId","CREATE_APP_FOR_APP_SPEC_ACTION_ID","executionParameters","JSON","stringify","parentInstanceId","unrestricted","createAppResponse","newAppData","parse","data","Execute","current","wrappedInstance","yell","className","style","maxWidth","margin","placeholder","target","onKeyPress","charCode","ref","marginTop","display","marginLeft","DescriptionCreationForm","forwardRef","useImperativeHandle","param","createDescription","descriptionValue","updateDescriptionValue","CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","instanceId","createDescriptionResponse","ExecuteAction","EXECUTE_ACTION","withRef","SOURCE_APP_SPEC_QUERY","gql","APP_SPEC_RELATIONSHIPS","app","userType","screen","infoType","hasParent","description","parentId","createUserType","userTypeValue","updateUserTypeValue","CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","createUserTypeResponse","setTimeout","console","log","$","html","createScreen","screenValue","updateScreenValue","CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID","createScreenResponse","createInfoType","saveInstance","infoTypeValue","updateInfoTypeValue","CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","createChildInfoTypeResponse","newChildInfoTypeData","InfoTypeStyleWrapper","selected","isDeleting","hasParentId","updateInstance","deleteInstance","onSelect","infoTypeId","_children","isEditMode","updateIsEditMode","isSaving","updateIsSaving","isDeleteMode","updateIsDeleteMode","updateIsDeleting","UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","class","for","infoTypeValue1","updateInfoTypeValue1","infoTypeChildren","createInfoTypeResponse","newInfoTypeData","ADD_HAS_PARENT_FOR_PARENT_ACTION_ID","childInstanceId","index","key","InfoTypes","selectedInfoTypeId","wrapperRef","createRef","handleClick","node","contains","setState","handleSelect","this","screenId","infoTypes","onUpdate","temp_parent","v","temp_children","_","groupBy","v4","Component","ScreenStyleWrapper","infoTypeData","find","TYPE_INFO_TYPE_ID","UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID","DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID","marginBottom","fontSize","Screens","selectedScreenId","userTypeId","screens","UserTypeStyleWrapper","screenData","TYPE_SCREEN_ID","UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","mapDispatchToProps","UserTypes","selectedUserTypeId","appId","userTypes","connect","userTypeData","TYPE_USER_TYPE_ID","descriptionData","TYPE_DESCRIPTION_ID","descriptions","UPDATE_APP_FOR_APP_SPEC_ACTION_ID","DELETE_APP_FOR_APP_SPEC_ACTION_ID","width","padding","fontWeight","Descriptions","DescriptionStyleWrapper","UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","DescriptionsStyleWrapper","selectedDescriptionId"],"mappings":"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","file":"static/js/4.80d3c55f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${props => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nfunction EditInstanceForm({\r\n  id,\r\n  label,\r\n  value,\r\n  onChange,\r\n  onSave,\r\n  onCancel,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>\r\n        {label}\r\n        <input\r\n          id={id}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n        />\r\n      </label>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#00FF00\"\r\n        onClick={onSave}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#FF0000\"\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditInstanceForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: block !important;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  color: red;\r\n  margin: 1em;\r\n  padding: 1em;\r\n  border: 1px solid #eeeeee;\r\n`;\r\n\r\nfunction DeleteInstanceMenu({ onDelete, onCancel, disabled }) {\r\n  return (\r\n    <Container>\r\n      Delete?\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#00FF00\"\r\n        onClick={onDelete}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#FF0000\"\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DeleteInstanceMenu;\r\n","export const increment = () => {\r\n  return {\r\n    type: \"INCREMENT\",\r\n  };\r\n};\r\n\r\nexport const decrement = () => {\r\n  return {\r\n    type: \"DECREMENT\",\r\n  };\r\n};\r\n\r\nexport const currentUser = () => {\r\n  return {\r\n    type: \"CURRENT_USER\",\r\n  };\r\n};\r\n","export function flattenChildData(element) {\r\n  const flatData = {\r\n    typeId: element.typeId,\r\n    instances: [],\r\n  };\r\n\r\n  if (element.instances && element.instances.length > 0) {\r\n    flatData.instances = element.instances\r\n      .filter((child) => !!child)\r\n      .map((instance) => flattenData(instance));\r\n  }\r\n\r\n  return flatData;\r\n}\r\n\r\nexport function flattenData(element) {\r\n  const flatData = {\r\n    ...element.instance,\r\n    children: [],\r\n  };\r\n\r\n  if (element.children && element.children.length > 0) {\r\n    flatData.children = element.children\r\n      .filter((child) => !!child)\r\n      .map((child) => flattenChildData(child));\r\n  }\r\n\r\n  return flatData;\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport DescriptionCreationForm from \"../DescriptionCreationForm\";\r\nimport Descriptions from \"../Descriptions\";\r\nimport { CREATE_APP_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nfunction AppCreationForm({ customerId, createApp, refetchQueries }) {\r\n  const [appValue, updateAppValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n  const history = useHistory();\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n  const child = useRef();\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!appValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createAppResponse = await createApp({\r\n      variables: {\r\n        actionId: CREATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: customerId,\r\n          value: appValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n    const newAppData = JSON.parse(createAppResponse.data.Execute);\r\n\r\n    await child.current.wrappedInstance.yell(newAppData);\r\n\r\n    updateAppValue(\"\");\r\n    // child.current.wrappedInstance.handleSubmit();\r\n    updateLoading(false);\r\n\r\n    dispatch(increment());\r\n\r\n    // history.push(\"/meeting-step/create-user-type\");\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <div\r\n          className=\"text-center\"\r\n          style={{ maxWidth: \"350px\", margin: \"1em auto 2em auto\" }}\r\n        >\r\n          <strong>Tell us more about what you want in your web app! </strong>\r\n        </div>\r\n        <form>\r\n          <label htmlFor=\"app-value\">\r\n            <input\r\n              className=\"input\"\r\n              placeholder=\"Create Name\"\r\n              id=\"app-value\"\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              onKeyPress={handleKeyPress}\r\n              value={appValue}\r\n              disabled={loading}\r\n            />\r\n\r\n            <DescriptionCreationForm\r\n              parentInstanceId\r\n              ref={child}\r\n              refetchQueries={refetchQueries}\r\n            >\r\n              {\" \"}\r\n            </DescriptionCreationForm>\r\n          </label>\r\n        </form>\r\n      </div>\r\n      <div style={{ marginTop: \"1em\" }}>\r\n        <button\r\n          style={{ display: \"block\", marginLeft: \"auto\" }}\r\n          className=\"button button--yellow\"\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          onClick={handleSubmit}\r\n        >\r\n          {loading ? \"Creating App...\" : \"Create App\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createApp\" }))(\r\n  AppCreationForm\r\n);\r\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nconst DescriptionCreationForm = forwardRef((props, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    handleSubmit,\r\n    yell: (param) => handleSubmit(param),\r\n  }));\r\n\r\n  const parentId = props.parentInstanceId;\r\n  const createDescription = props.createDescription;\r\n  const refetchQueries = props.refetchQueries;\r\n  const parentInstanceId = props.parentInstanceId;\r\n  const [descriptionValue, updateDescriptionValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(param) {\r\n    if (!descriptionValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createDescriptionResponse = await createDescription({\r\n      variables: {\r\n        actionId: CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: param.instanceId,\r\n          value: descriptionValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newDescriptionData = JSON.parse(\r\n      createDescriptionResponse.data.ExecuteAction\r\n    );\r\n\r\n    updateDescriptionValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  // function handleKeyPress(e) {\r\n  //   if (e.charCode === 13) {\r\n  //     handleSubmit(e);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        placeholder=\"Description\"\r\n        className=\"input\"\r\n        id=\"description-value\"\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        // onKeyPress={handleKeyPress}\r\n        value={descriptionValue}\r\n        disabled={loading}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default compose(\r\n  graphql(EXECUTE_ACTION, { name: \"createDescription\", withRef: true })\r\n)(DescriptionCreationForm);\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const SOURCE_APP_SPEC_QUERY = gql`\r\n  query UNIT($id: ID!, $typeRelationships: String!, $parameters: String) {\r\n    unitData(\r\n      unitId: $id\r\n      typeRelationships: $typeRelationships\r\n      parameters: $parameters\r\n    ) {\r\n      instance {\r\n        id\r\n        value\r\n      }\r\n      children {\r\n        typeId\r\n        instances {\r\n          instance {\r\n            id\r\n            value\r\n          }\r\n\r\n          children {\r\n            typeId\r\n            instances {\r\n              instance {\r\n                id\r\n                value\r\n              }\r\n\r\n              children {\r\n                typeId\r\n                instances {\r\n                  instance {\r\n                    id\r\n                    value\r\n                  }\r\n\r\n                  children {\r\n                    typeId\r\n                    instances {\r\n                      instance {\r\n                        id\r\n                        value\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const APP_SPEC_RELATIONSHIPS = {\r\n  app: {\r\n    userType: {\r\n      screen: {\r\n        infoType: {\r\n          hasParent: null,\r\n        },\r\n      },\r\n    },\r\n    description: null,\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\nimport { CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\nimport $ from \"jquery\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction UserTypeCreationForm({ parentId, createUserType, refetchQueries }) {\r\n  const [userTypeValue, updateUserTypeValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n  function handleChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!userTypeValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createUserTypeResponse = await createUserType({\r\n      variables: {\r\n        actionId: CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: userTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n    dispatch(increment());\r\n\r\n    const newUserTypeData = JSON.parse(createUserTypeResponse.data.Execute);\r\n    setTimeout(()=>{\r\n\r\n      console.log($('#data-147ffc4c-651d-4500-abc6-7a086587c127').html())\r\n    },3000)\r\n    updateUserTypeValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"userType-value\">\r\n        <input\r\n          placeholder=\"New User Type\"\r\n          className=\"input\"\r\n          id=\"userType-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={userTypeValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating UserType...\" : \"Create UserType\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createUserType\" }))(\r\n  UserTypeCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction ScreenCreationForm({ parentId, createScreen, refetchQueries }) {\r\n  const [screenValue, updateScreenValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!screenValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createScreenResponse = await createScreen({\r\n      variables: {\r\n        actionId: CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: screenValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newScreenData = JSON.parse(createScreenResponse.data.Execute);\r\n    updateScreenValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"screen-value\">\r\n        <input\r\n          placeholder=\"New Screen\"\r\n          className=\"input\"\r\n          id=\"screen-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={screenValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating Screen...\" : \"Create Screen\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createScreen\" }))(\r\n  ScreenCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport {\r\n  CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction InfoTypeCreationForm({\r\n  parentId,\r\n  createInfoType,\r\n  saveInstance,\r\n  refetchQueries,\r\n}) {\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!infoTypeValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createInfoTypeResponse = await createInfoType({\r\n      variables: {\r\n        actionId: CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: infoTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    return;\r\n    const newInfoTypeData = JSON.parse(createInfoTypeResponse.data.Execute);\r\n    const createChildInfoTypeResponse = await saveInstance({\r\n      variables: {\r\n        actionId: ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          childInstanceId: \"\", // Newly created data\r\n          parentInstanceId: newInfoTypeData, // Newly created data\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newChildInfoTypeData = JSON.parse(\r\n      createChildInfoTypeResponse.data.Execute\r\n    );\r\n    console.log(newChildInfoTypeData);\r\n    updateInfoTypeValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"infoType-value\">\r\n        <input\r\n          className=\"input\"\r\n          placeholder=\"New Type of Info\"\r\n          id=\"infoType-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={infoTypeValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type=\"button\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating InfoType...\" : \"Create InfoType\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"createInfoType\" }),\r\n  graphql(EXECUTE, { name: \"saveInstance\" })\r\n)(InfoTypeCreationForm);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n  CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\n// add styling here\r\nconst InfoTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction InfoType({\r\n  infoType,\r\n  parentId,\r\n  createInfoType,\r\n  hasParentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  saveInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n  value,\r\n}) {\r\n  const infoTypeId = useState(value.id);\r\n\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(value.value);\r\n\r\n  const infoTypeChildren = useState(infoType._children) || [];\r\n\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <InfoTypeStyleWrapper onClick={() => onSelect(infoType.id)}>\r\n  //       { infoTypeValue }\r\n  //     </InfoTypeStyleWrapper>\r\n  //   );k\r\n  // }\r\n\r\n  function handleInfoTypeValueChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleInfoTypeValueSave() {\r\n    updateIsSaving(true);\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: infoTypeId[0],\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={infoType.id}\r\n          label=\"InfoType Value:\"\r\n          value={infoTypeValue}\r\n          onChange={handleInfoTypeValueChange}\r\n          onSave={handleInfoTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: infoTypeId[0],\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!infoTypeValue) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const createInfoTypeResponse = await createInfoType({\r\n        variables: {\r\n          actionId: CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            value: infoTypeValue,\r\n          }),\r\n          unrestricted: false,\r\n        },\r\n        refetchQueries,\r\n      });\r\n\r\n      const newInfoTypeData = JSON.parse(createInfoTypeResponse.data.Execute);\r\n      const createChildInfoTypeResponse = await saveInstance({\r\n        variables: {\r\n          actionId: ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            childInstanceId: infoType.id, // Experience\r\n            parentInstanceId: newInfoTypeData.instanceId, // Year\r\n          }),\r\n          unrestricted: false,\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n  function handleChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\" \">\r\n      <span class=\"flex\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"checkbox\"\r\n          className=\"checkBoxActive\"\r\n          id={value.id}\r\n          value=\"value\"\r\n        />\r\n\r\n        <label for={value.id}>\r\n          {\" \"}\r\n          <small class=\"grey--text\"> Sub Info Type: </small> {value.value}{\" \"}\r\n        </label>\r\n        <span>\r\n          <a\r\n            type=\"a\"\r\n            onClick={() => updateIsEditMode(true)}\r\n            style={{ display: \"inline-block\" }}\r\n          >\r\n            &#9998;\r\n          </a>\r\n          <a\r\n            type=\"a\"\r\n            style={{ display: \"inline-block\" }}\r\n            onClick={() => updateIsDeleteMode(true)}\r\n          >\r\n            &#128465;\r\n          </a>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"createInfoType\" }),\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" }),\r\n  graphql(EXECUTE, { name: \"saveInstance\" })\r\n)(InfoType);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n  CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport InfoTypeChild from \"../InfoTypeChildren\";\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\n// add styling here\r\nconst InfoTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction InfoType({\r\n  infoType,\r\n  parentId,\r\n  createInfoType,\r\n  hasParentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  saveInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const infoTypeId = useState(infoType.id);\r\n\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(infoType.value);\r\n  const [infoTypeValue1, updateInfoTypeValue1] = useState(\"\");\r\n\r\n  const infoTypeChildren = useState(infoType._children) || [];\r\n\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <InfoTypeStyleWrapper onClick={() => onSelect(infoType.id)}>\r\n  //       { infoTypeValue }\r\n  //     </InfoTypeStyleWrapper>\r\n  //   );k\r\n  // }\r\n\r\n  function handleInfoTypeValueChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleInfoTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: infoType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={infoType.id}\r\n          label=\"InfoType Value:\"\r\n          value={infoTypeValue}\r\n          onChange={handleInfoTypeValueChange}\r\n          onSave={handleInfoTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: infoType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!infoTypeValue1) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const createInfoTypeResponse = await createInfoType({\r\n        variables: {\r\n          actionId: CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            value: infoTypeValue1,\r\n          }),\r\n          unrestricted: false,\r\n        },\r\n        refetchQueries,\r\n      });\r\n\r\n      const newInfoTypeData = JSON.parse(createInfoTypeResponse.data.Execute);\r\n      const createChildInfoTypeResponse = await saveInstance({\r\n        variables: {\r\n          actionId: ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            childInstanceId: infoType.id, // Experience\r\n            parentInstanceId: newInfoTypeData.instanceId, // Year\r\n          }),\r\n          unrestricted: false,\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n  function handleChange(e) {\r\n    updateInfoTypeValue1(e.target.value);\r\n  }\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    !hasParentId && (\r\n      <div className=\" \" selected={selected}>\r\n        <div class=\"box\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"checkbox\"\r\n            className=\"checkBoxActive\"\r\n            id={infoType.id}\r\n            value=\"value\"\r\n          />\r\n          <label for={infoType.id}>\r\n            {\" \"}\r\n            <small class=\"grey--text\"> Info Type: </small> {infoTypeValue}\r\n          </label>\r\n          <span>\r\n            <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n              &#9998;\r\n            </Button>\r\n            <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n              &#128465;\r\n            </Button>\r\n          </span>\r\n        </div>\r\n        <form>\r\n          <ul style={{ marginLeft: \"1em\", marginTop: \"1em\" }}>\r\n            {infoTypeChildren[0].map((value, index) => {\r\n              return (\r\n                <li key={index} className=\"box\">\r\n                  <div>\r\n                    <InfoTypeChild\r\n                      infoType={infoType}\r\n                      parentId={parentId}\r\n                      createInfoType={createInfoType}\r\n                      hasParentId={hasParentId}\r\n                      selected={selected}\r\n                      updateInstance={updateInstance}\r\n                      deleteInstance={deleteInstance}\r\n                      saveInstance={saveInstance}\r\n                      refetchQueries={refetchQueries}\r\n                      value={value}\r\n                    ></InfoTypeChild>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n            <li>\r\n              <input\r\n                className=\"input\"\r\n                placeholder=\"More Info\"\r\n                id=\"infoType-value\"\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                onKeyPress={handleKeyPress}\r\n                value={infoTypeValue1}\r\n              />\r\n            </li>\r\n          </ul>\r\n          <button type=\"button\" onClick={() => handleSubmit()}>\r\n            Create Sub-Info Type\r\n          </button>\r\n          <br></br>\r\n        </form>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"createInfoType\" }),\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" }),\r\n  graphql(EXECUTE, { name: \"saveInstance\" })\r\n)(InfoType);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport InfoTypeCreationForm from \"../InfoTypeCreationForm\";\r\nimport InfoType from \"../InfoType\";\r\nimport _ from \"lodash\";\r\n// np__added_start unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nconst InfoTypesStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nclass InfoTypes extends Component {\r\n  state = {\r\n    selectedInfoTypeId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  // componentDidMount() {\r\n  //   document.addEventListener(\"mousedown\", this.handleClick);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   document.removeEventListener(\"mousedown\", this.handleClick);\r\n  // }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedInfoTypeId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedInfoTypeId: id });\r\n\r\n  render() {\r\n    const { screenId, infoTypes, refetchQueries, onUpdate } = this.props;\r\n    const { selectedInfoTypeId } = this.state;\r\n\r\n    const temp_child = [];\r\n\r\n    // infoTypes.forEach((res) => {\r\n    //   if (res.children[0].instances.length) {\r\n    //     let x = res;\r\n    //     x = x.map((v) => ({ ...v, isActive: true }));\r\n    //     temp_child.push(x);\r\n    //   }\r\n    // });\r\n    // infoTypes.forEach((v, k) => {\r\n    //   if (v.children[0].instances.length > 0) {\r\n    //     temp_child.push(v);\r\n    //   }\r\n    // });\r\n    // let temp_parent = infoTypes.map((v) => ({\r\n    //   ...v,\r\n    //   children: v.children[0].instances[0].map(() => ({})),\r\n    //   parentId: v.children[0].instances[0]\r\n    //     ? v.children[0].instances[0].id\r\n    //     : null,\r\n    // }));\r\n\r\n    let temp_parent = infoTypes.map((v) => ({\r\n      ...v,\r\n      parentId: v.children[0].instances[0]\r\n        ? v.children[0].instances[0].id\r\n        : null,\r\n    }));\r\n\r\n    let temp_children = _.groupBy(temp_parent, \"parentId\");\r\n    temp_parent = temp_parent.map((v) => ({\r\n      ...v,\r\n      _children: temp_children[v.id] || [],\r\n    }));\r\n    // console.log(temp_pnpmarent);\r\n    // temp_parent = temp_parent.map(() => ({}));\r\n    {\r\n      /* np__added_start unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n          {temp_parent.map((infoType) => (\r\n            <InfoType\r\n              hasParentId={infoType.parentId}\r\n              key={v4()}\r\n              infoType={infoType}\r\n              selected={infoType.id === selectedInfoTypeId}\r\n              onUpdate={onUpdate}\r\n              parentId={screenId}\r\n              refetchQueries={refetchQueries}\r\n              onSelect={this.handleSelect}\r\n            />\r\n          ))}\r\n          <br></br>\r\n        </div>\r\n        <InfoTypeCreationForm\r\n          parentId={screenId}\r\n          refetchQueries={refetchQueries}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoTypes;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_INFO_TYPE_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport InfoTypes from \"../InfoTypes\";\r\n\r\n// add styling here\r\nconst ScreenStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction Screen({\r\n  screen,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [screenValue, updateScreenValue] = useState(screen.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const infoTypeData =\r\n    screen.children &&\r\n    screen.children.find((child) => child.typeId === TYPE_INFO_TYPE_ID);\r\n  const infoTypes = infoTypeData ? infoTypeData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <ScreenStyleWrapper onClick={() => onSelect(screen.id)}>\r\n  //       {screenValue}\r\n  //     </ScreenStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleScreenValueChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleScreenValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: screenValue,\r\n          instanceId: screen.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <ScreenStyleWrapper>\r\n        <EditInstanceForm\r\n          id={screen.id}\r\n          label=\"Screen Value:\"\r\n          value={screenValue}\r\n          onChange={handleScreenValueChange}\r\n          onSave={handleScreenValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </ScreenStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: screen.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <ScreenStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {screenValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </ScreenStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"box box__wrapper\"\r\n      style={{ marginBottom: \"1em\" }}\r\n      selected={selected}\r\n    >\r\n      <div class=\"box__content\">\r\n        {\" \"}\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"checkbox\"\r\n          className=\"checkBoxActive\"\r\n          id={screen.id}\r\n          value=\"value\"\r\n        />\r\n        <label for={screen.id} style={{ fontSize: \"1em\" }}>\r\n          <small class=\"grey--text\"> Screen: </small> {screenValue}{\" \"}\r\n        </label>\r\n        <span>\r\n          <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n            &#9998;\r\n          </Button>\r\n          <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n            &#128465;\r\n          </Button>\r\n        </span>\r\n      </div>\r\n\r\n      <InfoTypes\r\n        infoTypes={infoTypes}\r\n        screenId={screen.id}\r\n        label=\"InfoType?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(Screen);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport ScreenCreationForm from \"../ScreenCreationForm\";\r\nimport Screen from \"../Screen\";\r\n\r\n// np__added_start unit: appSpec, comp: Screens, loc: styling\r\n\r\nconst ScreensStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: Screens, loc: styling\r\n\r\nclass Screens extends Component {\r\n  state = {\r\n    selectedScreenId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  // componentDidMount() {\r\n  //   document.addEventListener(\"mousedown\", this.handleClick);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   document.removeEventListener(\"mousedown\", this.handleClick);\r\n  // }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedScreenId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedScreenId: id });\r\n\r\n  render() {\r\n    const { userTypeId, screens, refetchQueries, onUpdate } = this.props;\r\n    const { selectedScreenId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: Screens, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: Screens, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {screens.map((screen) => (\r\n          <Screen\r\n            key={v4()}\r\n            screen={screen}\r\n            selected={screen.id === selectedScreenId}\r\n            onUpdate={onUpdate}\r\n            parentId={userTypeId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        <ScreenCreationForm\r\n          parentId={userTypeId}\r\n          refetchQueries={refetchQueries}\r\n        />\r\n\r\n        {/* np__added_start unit: appSpec, comp: Screens, loc: renderEnding */}\r\n        {/* np__added_end unit: appSpec, comp: Screens, loc: renderEnding */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Screens;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_SCREEN_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport Screens from \"../Screens\";\r\n\r\n// add styling here\r\nconst UserTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction UserType({\r\n  userType,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [userTypeValue, updateUserTypeValue] = useState(userType.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const screenData =\r\n    userType.children &&\r\n    userType.children.find((child) => child.typeId === TYPE_SCREEN_ID);\r\n  const screens = screenData ? screenData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <UserTypeStyleWrapper onClick={() => onSelect(userType.id)}>\r\n  //       { userTypeValue }\r\n  //     </UserTypeStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleUserTypeValueChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleUserTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: userTypeValue,\r\n          instanceId: userType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <UserTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={userType.id}\r\n          label=\"UserType Value:\"\r\n          value={userTypeValue}\r\n          onChange={handleUserTypeValueChange}\r\n          onSave={handleUserTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: userType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <UserTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {userTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"box__wrapper\" selected={selected}>\r\n      <div className=\"box__content\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"checkbox\"\r\n          className=\"checkBoxActive\"\r\n          id={'data-'+userType.id}\r\n          value=\"value\"\r\n        />\r\n        <label for={'data-'+userType.id} style={{ fontSize: \"1em\" }}>\r\n          <small class=\"grey--text\"> User Type: </small> {userTypeValue}\r\n        </label>\r\n        <span>\r\n          <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n            &#9998;\r\n          </Button>\r\n          <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n            &#128465;\r\n          </Button>\r\n        </span>\r\n      </div>\r\n      <Screens\r\n        screens={screens}\r\n        userTypeId={userType.id}\r\n        label=\"Screen?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(UserType);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport UserTypeCreationForm from \"../UserTypeCreationForm\";\r\nimport UserType from \"../UserType\";\r\nimport { connect } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    counter: state.counter,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  increment,\r\n  decrement,\r\n};\r\n\r\nclass UserTypes extends Component {\r\n  state = {\r\n    selectedUserTypeId: null,\r\n  };\r\n  wrapperRef = createRef();\r\n  // componentDidMount() {\r\n  //   document.addEventListener(\"mousedown\", this.handleClick);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   document.removeEventListener(\"mousedown\", this.handleClick);\r\n  // }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedUserTypeId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedUserTypeId: id });\r\n\r\n  render() {\r\n    const { appId, userTypes, refetchQueries, onUpdate } = this.props;\r\n    const { selectedUserTypeId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: UserTypes, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: UserTypes, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"box\">\r\n          <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n            <div>\r\n              {userTypes.map((userType) => (\r\n                <UserType\r\n                  key={v4()}\r\n                  userType={userType}\r\n                  selected={userType.id === selectedUserTypeId}\r\n                  onUpdate={onUpdate}\r\n                  parentId={appId}\r\n                  refetchQueries={refetchQueries}\r\n                  onSelect={this.handleSelect}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <UserTypeCreationForm\r\n          parentId={appId}\r\n          refetchQueries={refetchQueries}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTypes);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_USER_TYPE_ID,\r\n  TYPE_DESCRIPTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport UserTypes from \"../UserTypes\";\r\nimport Descriptions from \"../Descriptions\";\r\n\r\n// add styling here\r\nconst div = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction App({\r\n  app,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [appValue, updateAppValue] = useState(app.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const userTypeData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_USER_TYPE_ID);\r\n  const userTypes = userTypeData ? userTypeData.instances : [];\r\n  const descriptionData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_DESCRIPTION_ID);\r\n  const descriptions = descriptionData ? descriptionData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <div onClick={() => onSelect(app.id)}>\r\n  //       {appValue}\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  function handleAppValueChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n\r\n  async function handleAppValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: appValue,\r\n          instanceId: app.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <div>\r\n        <EditInstanceForm\r\n          id={app.id}\r\n          label=\"App Value:\"\r\n          value={appValue}\r\n          onChange={handleAppValueChange}\r\n          onSave={handleAppValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: app.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <div selected={selected} isDeleting={isDeleting}>\r\n        {appValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"box\"\r\n      style={{ width: \"100%\", padding: \"1em 2em\" }}\r\n    >\r\n      <div\r\n        className=\"box__wrapper flex justify-between\"\r\n        style={{ padding: \"1em 0\" }}\r\n      >\r\n        <div className=\"box__content\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"checkbox\"\r\n            className=\"checkBoxActive\"\r\n            id=\"checkbox_id\"\r\n            value=\"value\"\r\n          />\r\n          <label\r\n            for=\"checkbox_id\"\r\n            style={{ fontWeight: \"800\", fontSize: \"24px\" }}\r\n          >\r\n            {appValue}\r\n          </label>\r\n          <span>\r\n            <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n              &#9998;\r\n            </Button>\r\n            <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n              &#128465;\r\n            </Button>\r\n          </span>\r\n        </div>\r\n\r\n        <u>\r\n          <Descriptions\r\n            descriptions={descriptions}\r\n            appId={app.id}\r\n            label=\"Description?\"\r\n            refetchQueries={refetchQueries}\r\n          />\r\n        </u>\r\n      </div>\r\n\r\n      <UserTypes\r\n        userTypes={userTypes}\r\n        appId={app.id}\r\n        label=\"UserType?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(App);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\n// add styling here\r\nconst DescriptionStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n \r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction Description({\r\n  description,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [descriptionValue, updateDescriptionValue] = useState(\r\n    description.value\r\n  );\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  function handleDescriptionValueChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleDescriptionValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: descriptionValue,\r\n          instanceId: description.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <DescriptionStyleWrapper>\r\n        <EditInstanceForm\r\n          id={description.id}\r\n          label=\"Description Value:\"\r\n          value={descriptionValue}\r\n          onChange={handleDescriptionValueChange}\r\n          onSave={handleDescriptionValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: description.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <DescriptionStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        <label>{descriptionValue}</label>\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DescriptionStyleWrapper selected={selected}>\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"checkbox\"\r\n        className=\"checkBoxActive\"\r\n        id={description.id}\r\n        value=\"value\"\r\n      />\r\n      <label for={description.id}>{descriptionValue}</label>\r\n      <span>\r\n        <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n          &#9998;\r\n        </Button>\r\n        <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n          &#128465;\r\n        </Button>\r\n      </span>\r\n    </DescriptionStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(Description);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport DescriptionCreationForm from \"../DescriptionCreationForm\";\r\nimport Description from \"../Description\";\r\n\r\n// np__added_start unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nconst DescriptionsStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nclass Descriptions extends Component {\r\n  state = {\r\n    selectedDescriptionId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  // componentDidMount() {\r\n  //   document.addEventListener(\"mousedown\", this.handleClick);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   document.removeEventListener(\"mousedown\", this.handleClick);\r\n  // }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedDescriptionId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedDescriptionId: id });\r\n\r\n  render() {\r\n    const { appId, descriptions, refetchQueries, onUpdate } = this.props;\r\n    const { selectedDescriptionId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: Descriptions, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: Descriptions, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <DescriptionsStyleWrapper\r\n        ref={this.wrapperRef}\r\n        onClick={this.handleClick}\r\n      >\r\n        {descriptions.map((description) => (\r\n          <Description\r\n            key={v4()}\r\n            description={description}\r\n            selected={description.id === selectedDescriptionId}\r\n            onUpdate={onUpdate}\r\n            parentId={appId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        {/* np__added_start unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n        {/* np__added_end unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n      </DescriptionsStyleWrapper>\r\n    );\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        weird\r\n        {descriptions.map((description) => (\r\n          <Description\r\n            key={v4()}\r\n            description={description}\r\n            selected={description.id === selectedDescriptionId}\r\n            onUpdate={onUpdate}\r\n            parentId={appId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        {/* np__added_start unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n        {/* np__added_end unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Descriptions;\r\n"],"sourceRoot":""}