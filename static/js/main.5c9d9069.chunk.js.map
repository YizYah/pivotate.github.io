{"version":3,"sources":["components/Pages/Confirmation/index.js","App.js","serviceWorker.js","client/index.js","index.js","config/index.js"],"names":["Confirmation","className","style","margin","marginTop","maxWidth","backgroundColor","borderRadius","marginBottom","width","src","textAlign","class","AppHeader","React","lazy","AppFooter","Home","Pricing","privacyPolicy","underConstruction","termsAndConditions","App","childRef","useRef","Suspense","path","fallback","noAction","ref","onSignUp","current","modalHandlerRegistration","component","isLocalhost","Boolean","window","location","hostname","match","console","log","authLink","createAuthLink","PLATFORM_ID","link","ApolloLink","from","httpLink","ApolloClient","cache","InMemoryCache","dataIdFromObject","object","id","__typename","v4","tagManagerArgs","gtmId","js","Date","TagManager","initialize","ReactDOM","render","client","platformId","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","TYPE_CUSTOMER_ID"],"mappings":"sHAAA,2BA+BeA,UA7BM,WACnB,OACE,yBAAKC,UAAU,oCACb,yBACEC,MAAO,CACLC,OAAQ,OACRC,UAAW,QACXC,SAAU,QACVC,gBAAiB,UACjBC,aAAc,OACdC,aAAc,UAGhB,yBACEN,MAAO,CAAEO,MAAO,QAChBC,IAAI,uDAEN,uBAAGR,MAAO,CAAES,UAAW,WACrB,6BACA,6BACA,wBAAIC,MAAM,MAAV,0DACA,+DAGJ,gC,sRCNAC,EAAYC,IAAMC,MAAK,kBAAM,uDAC7BC,EAAYF,IAAMC,MAAK,kBAAM,iCAC7BE,EAAOH,IAAMC,MAAK,kBAAM,iCACxBG,EAAUJ,IAAMC,MAAK,kBAAM,iCAC3BI,EAAgBL,IAAMC,MAAK,kBAC/B,iCAKIK,GAHeN,IAAMC,MAAK,kBAC9B,4CAEwBD,IAAMC,MAAK,kBACnC,mCAEIM,EAAqBP,IAAMC,MAAK,kBACpC,iCA8DaO,EA3DH,WACV,IAAMC,EAAWC,mBAEjB,OACE,kBAAC,IAAMC,SAAP,CACEC,KAAK,IACLC,SACE,6BAAS1B,UAAU,IACjB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cACb,uCAQZ,kBAAC,gBAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyB,KAAI,iBACT,kBAACb,EAAD,CAAWe,UAAQ,IACnB,kBAAC5B,EAAA,QAAD,MACA,kBAACgB,EAAD,CAAWY,UAAQ,KAErB,kBAAC,IAAD,CAAOF,KAAM,CAAC,MACZ,kBAACb,EAAD,CAAWgB,IAAKN,IAEhB,kBAAC,IAAD,CAAOG,KAAI,KACT,kBAACT,EAAD,CACEa,SAAU,kBAAMP,EAASQ,QAAQC,+BAGrC,kBAAC,IAAD,CAAON,KAAI,WAAcO,UAAWf,IACpC,kBAAC,IAAD,CACEQ,KAAI,sBACJO,UAAWb,IAEb,kBAAC,IAAD,CAAOM,KAAI,kBAAqBO,UAAWd,IAC3C,kBAAC,IAAD,CACEO,KAAI,wBACJO,UAAWZ,IAGb,kBAACL,EAAD,CACEc,SAAU,kBAAMP,EAASQ,QAAQC,oCCzE3CE,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAIJC,QAAQC,IAAIP,G,sCCbNQ,EAAWC,YAAeC,KAE1BC,EAAOC,IAAWC,KAAK,CAACL,EAAUM,MAEzB,MAAIC,IAAa,CAC9BJ,OACAK,MAAO,IAAIC,IAAc,CACvBC,iBAAkB,SAAAC,GAAM,OACtBA,EAAOC,GAAKD,EAAOC,GAAKD,EAAOE,WAAaC,oB,kBCL5CC,EAAiB,CACrBC,MAAO,cACPC,GAAI,IAAIC,MAGVC,IAAWC,WAAWL,GAEtBM,IAASC,OACP,kBAAC,IAAD,CAAiBC,OAAQA,EAAQC,WAAYtB,KAC3C,kBAAC,EAAD,OAEFuB,SAASC,eAAe,SF8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,gCGvInB,oEAaO,IAAM9B,EAAc,sBAOd+B,EAAiB,yC","file":"static/js/main.5c9d9069.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Confirmation = () => {\r\n  return (\r\n    <div className=\"text-center container full-width\">\r\n      <div\r\n        style={{\r\n          margin: \"auto\",\r\n          marginTop: \"100px\",\r\n          maxWidth: \"769px\",\r\n          backgroundColor: \"#ffffff\",\r\n          borderRadius: \"10px\",\r\n          marginBottom: \"100px\"\r\n        }}\r\n      >\r\n        <img\r\n          style={{ width: \"100%\" }}\r\n          src=\"https://pivotatestaticassets.com/images/Banner.jpg\"\r\n        />\r\n        <p style={{ textAlign: \"center\" }}>\r\n          <br></br>\r\n          <br></br>\r\n          <h3 class=\"c0\">Your Meeting is Confirmed! Weâ€™ll be talking soon.</h3>\r\n          <h4>Check your email for details.</h4>\r\n        </p>\r\n      </div>\r\n      <br></br>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { Suspense, lazy, useRef } from \"react\";\r\n\r\nimport \"./scss/style.scss\";\r\n\r\nimport { NoStackConsumer } from \"@nostack/no-stack\";\r\n\r\nimport { PLATFORM_ID, TYPE_CUSTOMER_ID } from \"./config\";\r\nimport {\r\n  BrowserRouter,\r\n  HashRouter,\r\n  useLocation,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nimport ScrollToTop from \"react-router-scroll-top\";\r\nimport Confirmation from \"./components/Pages/Confirmation\";\r\n\r\nconst AppHeader = React.lazy(() => import(\"./components/AppHeader\"));\r\nconst AppFooter = React.lazy(() => import(\"./components/AppFooter\"));\r\nconst Home = React.lazy(() => import(\"./components/Pages/Home\"));\r\nconst Pricing = React.lazy(() => import(\"./components/Pages/Pricing\"));\r\nconst privacyPolicy = React.lazy(() =>\r\n  import(\"./components/Pages/Privacy-policy\")\r\n);\r\nconst confirmation = React.lazy(() =>\r\n  import(\"./components/Pages/Confirmation\")\r\n);\r\nconst underConstruction = React.lazy(() =>\r\n  import(\"./components/Pages/Under-construction\")\r\n);\r\nconst termsAndConditions = React.lazy(() =>\r\n  import(\"./components/Pages/Terms-and-conditions\")\r\n);\r\n\r\nconst App = () => {\r\n  const childRef = useRef();\r\n\r\n  return (\r\n    <React.Suspense\r\n      path=\"/\"\r\n      fallback={\r\n        <section className=\"\">\r\n          <div className=\"container full-width\">\r\n            <div className=\"flex flex-wrap items-center\">\r\n              <div className=\"hero__header\">\r\n                <div className=\"hero__text\">\r\n                  <strong></strong>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      }\r\n    >\r\n      <BrowserRouter>\r\n        <ScrollToTop>\r\n          <Switch>\r\n            <Route path={`/confirmation`}>\r\n              <AppHeader noAction />\r\n              <Confirmation></Confirmation>\r\n              <AppFooter noAction />\r\n            </Route>\r\n            <Route path={[\"*\"]}>\r\n              <AppHeader ref={childRef} />\r\n              {/* main */}\r\n              <Route path={`/`}>\r\n                <Home\r\n                  onSignUp={() => childRef.current.modalHandlerRegistration()}\r\n                />\r\n              </Route>\r\n              <Route path={`/pricing`} component={Pricing}></Route>\r\n              <Route\r\n                path={`/under-construction`}\r\n                component={underConstruction}\r\n              ></Route>\r\n              <Route path={`/privacy-policy`} component={privacyPolicy}></Route>\r\n              <Route\r\n                path={`/terms-and-conditions`}\r\n                component={termsAndConditions}\r\n              ></Route>\r\n\r\n              <AppFooter\r\n                onSignUp={() => childRef.current.modalHandlerRegistration()}\r\n              />\r\n              {/* main end */}\r\n            </Route>\r\n          </Switch>\r\n        </ScrollToTop>\r\n      </BrowserRouter>\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === \"[::1]\" ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nconsole.log(isLocalhost)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { ApolloClient } from \"apollo-client\";\r\nimport { ApolloLink } from \"apollo-link\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport { createAuthLink, httpLink } from \"@nostack/no-stack\";\r\n\r\nimport { PLATFORM_ID } from \"../config\";\r\n\r\nconst authLink = createAuthLink(PLATFORM_ID);\r\n\r\nconst link = ApolloLink.from([authLink, httpLink]);\r\n\r\nexport default new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache({\r\n    dataIdFromObject: object =>\r\n      object.id ? object.id + object.__typename : v4()\r\n  })\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { NoStackProvider } from \"@nostack/no-stack\";\r\n\r\nimport { PLATFORM_ID } from \"./config\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport client from \"./client\";\r\n\r\nimport TagManager from \"react-gtm-module\";\r\n\r\nconst tagManagerArgs = {\r\n  gtmId: \"GTM-TS3Q48S\",\r\n  js: new Date()\r\n};\r\n\r\nTagManager.initialize(tagManagerArgs);\r\n\r\nReactDOM.render(\r\n  <NoStackProvider client={client} platformId={PLATFORM_ID}>\r\n    <App />\r\n  </NoStackProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","/*\r\n  This file was generated automatically by nostack 'makecode' for the app 'pivotate2a'.\r\n  If you build a new stack from a template, this version will probably need to change.\r\n\r\n  For instance, it will update if you run 'makecode' again. Fair warning, that will\r\n  change a lot of your code. If you modify your current stack to add actions, sources,\r\n  or types, it would make sense to add constants here.\r\n\r\n  But, you should *not* add permanent, separate configuration material or other material that is not directly\r\n  'managed by NoStack, because this will will be replaced with every call to 'makecode'.\r\n */\r\n\r\n// stack id\r\nexport const PLATFORM_ID = 'us-east-1_Lq8L4ZLfA';\r\n\r\n// sources\r\nexport const SOURCE_REGISTRATION_INFO_ID='1b219263-3125-4bb4-a82e-1e181780fbb7';\r\n\r\n// types\r\nexport const TYPE_MODERATOR_ID='us-east-1_Lq8L4ZLfAmoderatorClass';\r\nexport const TYPE_CUSTOMER_ID='20a2b531-c0be-4509-aee3-2593d0524cfd';\r\nexport const TYPE_APP_ID='ea1e6967-4ed7-4019-bb47-3f7b7ccd5950';\r\nexport const TYPE_DESCRIPTION_ID='a0deeed9-bd18-4e96-aaf8-10b83a49cdc0';\r\nexport const TYPE_CREDIT_CARD_NUMBER_ID='a158f062-f084-4153-826f-cc8765380dc2';\r\nexport const TYPE_EXPIRATION_DATE_ID='0e7f5ae3-24d0-4e83-8640-fa0087b258ce';\r\nexport const TYPE_CSV_ID='a807220a-b28f-40eb-a45c-9bdc668dce95';\r\n\r\n// actions\r\n// CREATE_INSTANCE\r\nexport const CREATE_APP_FOR_REGISTRATION_INFO_ACTION_ID='01b49a59-ac70-479b-a699-31c07209751a';\r\nexport const CREATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='d618936e-245b-46c8-88a9-288a972c5714';\r\nexport const CREATE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='72b23144-5b82-4d0a-8c46-399da55c77c8';\r\nexport const CREATE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='dab0b3c7-5619-4083-bdff-43090e907277';\r\nexport const CREATE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='fd5c036a-30c6-4576-8cb9-9e1ace40eda7';\r\n\r\n// UPDATE_INSTANCE\r\nexport const UPDATE_APP_FOR_REGISTRATION_INFO_ACTION_ID='2340727a-1309-479e-bcb2-65b76d1686bf';\r\nexport const UPDATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='b1de94df-2aeb-47c0-8853-a412f02e5315';\r\nexport const UPDATE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='da20f80c-7165-4c56-be15-f4f18d7e156f';\r\nexport const UPDATE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='d5639c9b-66ca-49ce-b9f2-923666a6846d';\r\nexport const UPDATE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='158c6a0c-01a0-4d82-8bf9-bc0c2e19ccd4';\r\n\r\n// DELETE_INSTANCE\r\nexport const DELETE_APP_FOR_REGISTRATION_INFO_ACTION_ID='30d86ee4-d585-4fb9-9a4c-54c8e5902327';\r\nexport const DELETE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='03a6b7ee-8d8b-47c2-a977-4912060f2c41';\r\nexport const DELETE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='1f1efa77-3f87-41a4-9c51-5d0e1d842f1e';\r\nexport const DELETE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='c780d8ff-7f74-4d44-b09e-c69a8656f01f';\r\nexport const DELETE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='392a2c85-8306-4267-9187-24dd6ec2a7c5';\r\n\r\n// ADD_INSTANCE_ASSN\r\n\r\n// UPDATE_INSTANCE_ASSN\r\n\r\n// DELETE_INSTANCE_ASSN\r\n\r\n// CREATE_INSTANCE_WITH_UNOWNED_PARENT\r\n\r\n// ADDED\r\n\r\n// SUBMIT_FORM\r\nexport const SUBMIT_FORM_FOR_REGISTRATION_INFO_ACTION_ID='form-submission-add-version-9d2dd0e7-2aca-4212-88bc-59f8bf74e992';\r\n"],"sourceRoot":""}