{"version":3,"sources":["../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@shopify/react-compose/dist/src/index.js","../../src/hoc-utils.tsx","../../src/graphql.tsx","../../src/mutation-hoc.tsx","../../src/subscription-hoc.tsx","../../src/query-hoc.tsx","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","Object","defineProperty","value","hoist_non_react_statics_1","require","__importDefault","default","wrappingFunctions","_i","arguments","length","OriginalComponent","result","reduceRight","component","wrappingFunction","defaultMapPropsToOptions","defaultMapPropsToSkip","getDisplayName","WrappedComponent","displayName","name","calculateVariablesFromProps","operation","props","variables","variable","type","variableName","variableProp","kind","undefined","withRef","setWrappedInstance","bind","getWrappedInstance","this","wrappedInstance","ref","Component","graphql","document","operationOptions","Mutation","options","alias","mapPropsToOptions","graphQLDisplayName","GraphQL","render","opts","assign","ignoreResults","mutation","mutate","data","r","resultName","childProps","newResult","ownProps","GraphQLBase","withMutation","Subscription","skip","shouldResubscribe","lastResultProps","mapPropsToSkip","state","resubscribe","componentDidUpate","prevProps","setState","shouldSkip","create","subscription","withSubscription","Query","query","client","withQuery","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","__await","then","unwrapped","error","TypeError","info","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"yGAAAA,EAAOC,QAAU,EAAQ,M,iCCCzBC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IACIC,EADUC,EAAQ,GACkBC,gBAAgBD,EAAQ,KAahEL,EAAQO,QAZR,WAEI,IADA,IAAIC,EAAoB,GACfC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAkBC,GAAMC,UAAUD,GAEtC,OAAO,SAAuBG,GAC1B,IAAIC,EAASL,EAAkBM,aAAY,SAAUC,EAAWC,GAC5D,OAAOA,EAAiBD,KACzBH,GACH,OAAOR,EAA0BG,QAAQM,EAAQD,M,sICT5CK,EAA2B,WAAM,MAAC,IAElCC,EAAwB,WAAM,UAE3C,SAAgBC,EAAkBC,GAChC,OAAOA,EAAiBC,aAAeD,EAAiBE,MAAQ,YAGlE,SAAgBC,EACdC,EACAC,GAGA,IADA,IAAIC,EAAgC,GACL,MAAAF,EAAUE,UAAV,eAAqB,CAA3C,WAAEC,EAAA,EAAAA,SAAUC,EAAA,EAAAA,KACnB,GAAKD,EAASL,MAASK,EAASL,KAAKnB,MAArC,CAEA,IAAM0B,EAAeF,EAASL,KAAKnB,MAC7B2B,EAAgBL,EAAcI,GAER,qBAAjBC,EAMO,gBAAdF,EAAKG,OACPL,EAAUG,QAAgBG,GAN1BN,EAAUG,GAAgBC,GAS9B,OAAOJ,EAQT,kBASE,WAAYD,GAAZ,MACE,YAAMA,IAAM,K,OALP,EAAAQ,SAAmB,EAMxB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAK,G,EAgB3D,OAvBY,yBAUV,YAAAC,mBAAA,WAOE,OANA,4BAMOC,KAAKC,iBAGd,YAAAJ,mBAAA,SAAmBK,GACjBF,KAAKC,gBAAkBC,GAE3B,EA3BA,CAIY,IAAMC,W,SCrCFC,EAOdC,EACAC,GAOA,YAPA,IAAAA,MAAA,IAOQ,iBAAOD,GAAUd,MACvB,KAAK,eAAagB,SAChB,O,SCAJF,EACAC,QAAA,IAAAA,MAAA,IAQA,IAAMnB,EAAY,iBAAOkB,GAIvB,IAAAG,eAAA,UACA,IAAAC,aAAA,IAAQ,EAAR,WAGEC,EAAoBF,EAIxB,MAHiC,oBAAtBE,IACTA,EAAoB,WAAM,OAAAF,IAErB,SACLzB,GAEA,IAAM4B,EAAwBF,EAAK,IAAI3B,EAAeC,GAAiB,IACvE,2B,+CAsDA,OAtDsB,oBAAA6B,EAAA,GAGpB,YAAAC,OAAA,WACE,IAAIzB,EAAQY,KAAKZ,MACX0B,EAAOJ,EAAkBtB,GAY/B,OAVIkB,EAAiBV,UACnBI,KAAKJ,SAAU,EACfR,EAAQxB,OAAOmD,OAAO,GAAI3B,EAAO,CAC/Bc,IAAKF,KAAKH,uBAGTiB,EAAKzB,WAAaF,EAAUE,UAAUf,OAAS,IAClDwC,EAAKzB,UAAYH,EAA4BC,EAAWC,IAIxD,kBAAC,WAAQ,oBAAC4B,eAAa,GAAKF,EAAI,CAAEG,SAAUZ,KACzC,SACCa,EACA,G,QAAEC,EAAA,EAAAA,KAAM,+BAMF3C,EAASZ,OAAOmD,OAAOK,EAAGD,GAAQ,IAClClC,EAAOqB,EAAiBrB,MAAQ,SAChCoC,EAAaf,EAAiBrB,KAC7BA,EAAI,SACP,SACAqC,IAAc,MACfrC,GAAOiC,EACR,EAACG,GAAa7C,EACQ,GACxB,GAAI8B,EAAiBlB,MAAO,CAC1B,IAAMmC,IAAS,MAKZtC,GAAOiC,EACR,EAACG,GAAa7C,EACd,EAAAgD,SAAUpC,EACX,GACDkC,EAAahB,EAAiBlB,MAAMmC,GAGtC,OAAO,kBAACxC,EAAgB,sBAAKK,EAAWkC,QAhDzC,EAAAtC,YAAc2B,EACd,EAAA5B,iBAAmBA,EAoD5B,EAtDA,CAAsB0C,GAyDtB,OAAO,IAAqBb,EAAS7B,EAAkB,KDlF9C2C,CAAarB,EAAUC,GAChC,KAAK,eAAaqB,aAChB,O,SENJtB,EACAC,QAAA,IAAAA,MAAA,IAQA,IAAMnB,EAAY,iBAAOkB,GAGvB,IAAAG,eAAA,UACA,IAAAoB,YAAA,IAAO,EAAP,IACA,IAAAnB,aAAA,IAAQ,EAAR,WACAoB,EAAA,EAAAA,kBAGEnB,EAAoBF,EACS,oBAAtBE,IACTA,EAAoB,WAAM,OAAAF,IAE5B,IAIIsB,EAJAC,EAAiBH,EAKrB,MAJ8B,oBAAnBG,IAA+BA,EAAiB,WAAM,OAAAH,IAI1D,SACL7C,GAEA,IAAM4B,EAAwBF,EAAK,IAAI3B,EAAeC,GAAiB,IACvE,cAOE,WAAYK,GAAZ,MACE,YAAMA,IAAM,K,OACZ,EAAK4C,MAAQ,CAAEC,aAAa,G,EA8EhC,OAvFsB,oBAAArB,EAAA,GAYpB,YAAAsB,kBAAA,SAAkBC,GACZN,GACF7B,KAAKoC,SAAS,CACZH,YAAaJ,EAAkBM,EAAWnC,KAAKZ,UAKrD,YAAAyB,OAAA,sBACMzB,EAAQY,KAAKZ,MACXiD,EAAaN,EAAe3C,GAC5B0B,EAAOuB,EACTzE,OAAO0E,OAAO,MACd5B,EAAkBtB,GAKtB,OAHKiD,IAAevB,EAAKzB,WAAaF,EAAUE,UAAUf,OAAS,IACjEwC,EAAKzB,UAAYH,EAA4BC,EAAWC,IAGxD,kBAAC,eAAY,sBACP0B,EAAI,CACR9B,YAAa2B,EACbiB,KAAMS,EACNE,aAAclC,EACdwB,kBAAmB7B,KAAKgC,MAAMC,eAE7B,SAAC,G,QAAEd,EAAA,EAAAA,KAAM,+BAQR,GAPIb,EAAiBV,UACnB,EAAKA,SAAU,EACfR,EAAQxB,OAAOmD,OAAO,GAAI3B,EAAO,CAC/Bc,IAAK,EAAKL,sBAIVwC,EACF,OACE,kBAACtD,EAAgB,sBACXK,EACA,KAQV,IAAMZ,EAASZ,OAAOmD,OAAOK,EAAGD,GAAQ,IAClClC,EAAOqB,EAAiBrB,MAAQ,OAClCqC,IAAU,MAAMrC,GAAOT,EAAM,GACjC,GAAI8B,EAAiBlB,MAAO,CAC1B,IAAMmC,IAAS,MAKZtC,GAAOT,EACR,EAAAgD,SAAUpC,EACX,GAKDkC,EAJAQ,EAAkBxB,EAAiBlB,MACjCmC,EACAO,GAKJ,OACE,kBAAC/C,EAAgB,sBACXK,EACAkC,QA3ET,EAAAtC,YAAc2B,EACd,EAAA5B,iBAAmBA,EAiF5B,EAvFA,CAAsB0C,GA0FtB,OAAO,IAAqBb,EAAS7B,EAAkB,KFnH9CyD,CAAiBnC,EAAUC,GACpC,KAAK,eAAamC,MAClB,QACE,O,SGTJpC,EACAC,QAAA,IAAAA,MAAA,IAQA,IAAMnB,EAAY,iBAAOkB,GAGvB,IAAAG,eAAA,UACA,IAAAoB,YAAA,IAAO,EAAP,IACA,IAAAnB,aAAA,IAAQ,EAAR,WAGEC,EAAoBF,EACS,oBAAtBE,IACTA,EAAoB,WAAM,OAAAF,IAG5B,IAMIsB,EANAC,EAAiBH,EAOrB,MAN8B,oBAAnBG,IACTA,EAAiB,WAAM,OAAAH,IAKlB,SACL7C,GAEA,IAAM4B,EAAwBF,EAAK,IAAI3B,EAAeC,GAAiB,IACvE,2B,+CAwEA,OAxEsB,oBAAA6B,EAAA,GAIpB,YAAAC,OAAA,sBACMzB,EAAQY,KAAKZ,MACXiD,EAAaN,EAAe3C,GAC5B0B,EAAOuB,EACTzE,OAAO0E,OAAO,M,sBACT5B,EAAkBtB,IAM3B,OAJKiD,IAAevB,EAAKzB,WAAaF,EAAUE,UAAUf,OAAS,IACjEwC,EAAKzB,UAAYH,EAA4BC,EAAWC,IAIxD,kBAAC,QAAK,sBACA0B,EAAI,CACR9B,YAAa2B,EACbiB,KAAMS,EACNK,MAAOrC,KAEN,SAAC,GAAE,EAAAsC,O,QAAWxB,EAAA,EAAAA,KAAM,wCASnB,GARIb,EAAiBV,UACnB,EAAKA,SAAU,EACfR,EAAQxB,OAAOmD,OAAO,GAAI3B,EAAO,CAC/Bc,IAAK,EAAKL,sBAKVwC,EACF,OACE,kBAACtD,EAAgB,sBACXK,EACA,KAQV,IAAMZ,EAASZ,OAAOmD,OAAOK,EAAGD,GAAQ,IAClClC,EAAOqB,EAAiBrB,MAAQ,OAClCqC,IAAU,MAAMrC,GAAOT,EAAM,GACjC,GAAI8B,EAAiBlB,MAAO,CAC1B,IAAMmC,IAAS,MAKZtC,GAAOT,EACR,EAAAgD,SAAUpC,EACX,GAKDkC,EAJAQ,EAAkBxB,EAAiBlB,MACjCmC,EACAO,GAKJ,OACE,kBAAC/C,EAAgB,sBACXK,EACAkC,QAhET,EAAAtC,YAAc2B,EACd,EAAA5B,iBAAmBA,EAsE5B,EAxEA,CAAsB0C,GA2EtB,OAAO,IAAqBb,EAAS7B,EAAkB,KHnG9C6D,CAAUvC,EAAUC,M,oBIvBjC,IAAIuC,EAAW,SAAUlF,GACvB,aAEA,IAAImF,EAAKlF,OAAOmF,UACZC,EAASF,EAAGG,eAEZC,EAA4B,oBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQb,qBAAqBiB,EAAYJ,EAAUI,EAC/EC,EAAYrG,OAAO0E,OAAOyB,EAAehB,WACzCmB,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAG,EAAUG,QAkMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIlC,EA3KuB,iBA6K3B,OAAO,SAAgBqC,EAAQC,GAC7B,GA5KoB,cA4KhBtC,EACF,MAAM,IAAIuC,MAAM,gCAGlB,GA/KoB,cA+KhBvC,EAA6B,CAC/B,GAAe,UAAXqC,EACF,MAAMC,EAKR,OAAOE,IAMT,IAHAN,EAAQG,OAASA,EACjBH,EAAQI,IAAMA,IAED,CACX,IAAIG,EAAWP,EAAQO,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUP,GACnD,GAAIQ,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBR,EAAQG,OAGVH,EAAQW,KAAOX,EAAQY,MAAQZ,EAAQI,SAElC,GAAuB,UAAnBJ,EAAQG,OAAoB,CACrC,GA/MqB,mBA+MjBrC,EAEF,MADAA,EA7Mc,YA8MRkC,EAAQI,IAGhBJ,EAAQa,kBAAkBb,EAAQI,SAEN,WAAnBJ,EAAQG,QACjBH,EAAQc,OAAO,SAAUd,EAAQI,KAGnCtC,EAxNkB,YA0NlB,IAAIiD,EAASC,EAASvB,EAASE,EAAMK,GACrC,GAAoB,WAAhBe,EAAO1F,KAAmB,CAO5B,GAJAyC,EAAQkC,EAAQiB,KA7NA,YAFK,iBAmOjBF,EAAOX,MAAQM,EACjB,SAGF,MAAO,CACL9G,MAAOmH,EAAOX,IACda,KAAMjB,EAAQiB,MAGS,UAAhBF,EAAO1F,OAChByC,EA3OgB,YA8OhBkC,EAAQG,OAAS,QACjBH,EAAQI,IAAMW,EAAOX,OA1QPc,CAAiBzB,EAASE,EAAMK,GAE7CD,EAcT,SAASiB,EAASG,EAAIC,EAAKhB,GACzB,IACE,MAAO,CAAE/E,KAAM,SAAU+E,IAAKe,EAAGE,KAAKD,EAAKhB,IAC3C,MAAOkB,GACP,MAAO,CAAEjG,KAAM,QAAS+E,IAAKkB,IAhBjC7H,EAAQ+F,KAAOA,EAoBf,IAOIkB,EAAmB,GAMvB,SAASZ,KACT,SAASyB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBvC,GAAkB,WAClC,OAAOpD,MAGT,IAAI4F,EAAWhI,OAAOiI,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BhD,GAC5BE,EAAOuC,KAAKO,EAAyB1C,KAGvCuC,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B3C,UAClCiB,EAAUjB,UAAYnF,OAAO0E,OAAOqD,GAQtC,SAASM,EAAsBlD,GAC7B,CAAC,OAAQ,QAAS,UAAUmD,SAAQ,SAAS7B,GAC3CtB,EAAUsB,GAAU,SAASC,GAC3B,OAAOtE,KAAKoE,QAAQC,EAAQC,OAoClC,SAAS6B,EAAclC,GAgCrB,IAAImC,EAgCJpG,KAAKoE,QA9BL,SAAiBC,EAAQC,GACvB,SAAS+B,IACP,OAAO,IAAIC,SAAQ,SAASC,EAASC,IAnCzC,SAASC,EAAOpC,EAAQC,EAAKiC,EAASC,GACpC,IAAIvB,EAASC,EAASjB,EAAUI,GAASJ,EAAWK,GACpD,GAAoB,UAAhBW,EAAO1F,KAEJ,CACL,IAAIf,EAASyG,EAAOX,IAChBxG,EAAQU,EAAOV,MACnB,OAAIA,GACiB,kBAAVA,GACPkF,EAAOuC,KAAKzH,EAAO,WACdwI,QAAQC,QAAQzI,EAAM4I,SAASC,MAAK,SAAS7I,GAClD2I,EAAO,OAAQ3I,EAAOyI,EAASC,MAC9B,SAAShB,GACViB,EAAO,QAASjB,EAAKe,EAASC,MAI3BF,QAAQC,QAAQzI,GAAO6I,MAAK,SAASC,GAI1CpI,EAAOV,MAAQ8I,EACfL,EAAQ/H,MACP,SAASqI,GAGV,OAAOJ,EAAO,QAASI,EAAON,EAASC,MAvBzCA,EAAOvB,EAAOX,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,MAIjC,OAAOJ,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KA+GV,SAAS1B,EAAoBF,EAAUP,GACrC,IAAIG,EAASI,EAASpB,SAASa,EAAQG,QACvC,QApSE1E,IAoSE0E,EAAsB,CAKxB,GAFAH,EAAQO,SAAW,KAEI,UAAnBP,EAAQG,OAAoB,CAE9B,GAAII,EAASpB,SAAT,SAGFa,EAAQG,OAAS,SACjBH,EAAQI,SA/SZ3E,EAgTIgF,EAAoBF,EAAUP,GAEP,UAAnBA,EAAQG,QAGV,OAAOO,EAIXV,EAAQG,OAAS,QACjBH,EAAQI,IAAM,IAAIwC,UAChB,kDAGJ,OAAOlC,EAGT,IAAIK,EAASC,EAASb,EAAQI,EAASpB,SAAUa,EAAQI,KAEzD,GAAoB,UAAhBW,EAAO1F,KAIT,OAHA2E,EAAQG,OAAS,QACjBH,EAAQI,IAAMW,EAAOX,IACrBJ,EAAQO,SAAW,KACZG,EAGT,IAAImC,EAAO9B,EAAOX,IAElB,OAAMyC,EAOFA,EAAK5B,MAGPjB,EAAQO,EAASpD,YAAc0F,EAAKjJ,MAGpCoG,EAAQ8C,KAAOvC,EAASwC,QAQD,WAAnB/C,EAAQG,SACVH,EAAQG,OAAS,OACjBH,EAAQI,SAnWV3E,GA6WFuE,EAAQO,SAAW,KACZG,GANEmC,GA3BP7C,EAAQG,OAAS,QACjBH,EAAQI,IAAM,IAAIwC,UAAU,oCAC5B5C,EAAQO,SAAW,KACZG,GAoDX,SAASsC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBnH,KAAKyH,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAInC,EAASmC,EAAMQ,YAAc,GACjC3C,EAAO1F,KAAO,gBACP0F,EAAOX,IACd8C,EAAMQ,WAAa3C,EAGrB,SAASd,EAAQL,GAIf9D,KAAKyH,WAAa,CAAC,CAAEJ,OAAQ,SAC7BvD,EAAYoC,QAAQgB,EAAclH,MAClCA,KAAK6H,OAAM,GA8Bb,SAAS9B,EAAO+B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS1E,GAC9B,GAAI2E,EACF,OAAOA,EAAexC,KAAKuC,GAG7B,GAA6B,oBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASxJ,QAAS,CAC3B,IAAI2J,GAAK,EAAGjB,EAAO,SAASA,IAC1B,OAASiB,EAAIH,EAASxJ,QACpB,GAAI0E,EAAOuC,KAAKuC,EAAUG,GAGxB,OAFAjB,EAAKlJ,MAAQgK,EAASG,GACtBjB,EAAK7B,MAAO,EACL6B,EAOX,OAHAA,EAAKlJ,WAndT6B,EAodIqH,EAAK7B,MAAO,EAEL6B,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMxC,GAIjB,SAASA,IACP,MAAO,CAAE1G,WAneP6B,EAmeyBwF,MAAM,GA+MnC,OAxmBAM,EAAkB1C,UAAYiD,EAAGkC,YAAcxC,EAC/CA,EAA2BwC,YAAczC,EACzCC,EAA2BlC,GACzBiC,EAAkBzG,YAAc,oBAYlCrB,EAAQwK,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOF,YAClD,QAAOG,IACHA,IAAS5C,GAG2B,uBAAnC4C,EAAKrJ,aAAeqJ,EAAKpJ,QAIhCtB,EAAQ2K,KAAO,SAASF,GAUtB,OATIxK,OAAO2K,eACT3K,OAAO2K,eAAeH,EAAQ1C,IAE9B0C,EAAOI,UAAY9C,EACblC,KAAqB4E,IACzBA,EAAO5E,GAAqB,sBAGhC4E,EAAOrF,UAAYnF,OAAO0E,OAAO0D,GAC1BoC,GAOTzK,EAAQ8K,MAAQ,SAASnE,GACvB,MAAO,CAAEoC,QAASpC,IAsEpB2B,EAAsBE,EAAcpD,WACpCoD,EAAcpD,UAAUO,GAAuB,WAC7C,OAAOtD,MAETrC,EAAQwI,cAAgBA,EAKxBxI,EAAQ+K,MAAQ,SAAS/E,EAASC,EAASC,EAAMC,GAC/C,IAAI6E,EAAO,IAAIxC,EACbzC,EAAKC,EAASC,EAASC,EAAMC,IAG/B,OAAOnG,EAAQwK,oBAAoBvE,GAC/B+E,EACAA,EAAK3B,OAAOL,MAAK,SAASnI,GACxB,OAAOA,EAAO2G,KAAO3G,EAAOV,MAAQ6K,EAAK3B,WAuKjDf,EAAsBD,GAEtBA,EAAGxC,GAAqB,YAOxBwC,EAAG5C,GAAkB,WACnB,OAAOpD,MAGTgG,EAAG4C,SAAW,WACZ,MAAO,sBAkCTjL,EAAQkL,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIE,KAAOD,EACdD,EAAKnB,KAAKqB,GAMZ,OAJAF,EAAKG,UAIE,SAAShC,IACd,KAAO6B,EAAKvK,QAAQ,CAClB,IAAIyK,EAAMF,EAAKI,MACf,GAAIF,KAAOD,EAGT,OAFA9B,EAAKlJ,MAAQiL,EACb/B,EAAK7B,MAAO,EACL6B,EAQX,OADAA,EAAK7B,MAAO,EACL6B,IAsCXrJ,EAAQoI,OAASA,EAMjB5B,EAAQpB,UAAY,CAClBmF,YAAa/D,EAEb0D,MAAO,SAASqB,GAcd,GAbAlJ,KAAKmJ,KAAO,EACZnJ,KAAKgH,KAAO,EAGZhH,KAAK6E,KAAO7E,KAAK8E,WA9ejBnF,EA+eAK,KAAKmF,MAAO,EACZnF,KAAKyE,SAAW,KAEhBzE,KAAKqE,OAAS,OACdrE,KAAKsE,SAnfL3E,EAqfAK,KAAKyH,WAAWvB,QAAQyB,IAEnBuB,EACH,IAAK,IAAIjK,KAAQe,KAEQ,MAAnBf,EAAKmK,OAAO,IACZpG,EAAOuC,KAAKvF,KAAMf,KACjB+I,OAAO/I,EAAKoK,MAAM,MACrBrJ,KAAKf,QA7fXU,IAmgBF2J,KAAM,WACJtJ,KAAKmF,MAAO,EAEZ,IACIoE,EADYvJ,KAAKyH,WAAW,GACLG,WAC3B,GAAwB,UAApB2B,EAAWhK,KACb,MAAMgK,EAAWjF,IAGnB,OAAOtE,KAAKwJ,MAGdzE,kBAAmB,SAAS0E,GAC1B,GAAIzJ,KAAKmF,KACP,MAAMsE,EAGR,IAAIvF,EAAUlE,KACd,SAAS0J,EAAOC,EAAKC,GAYnB,OAXA3E,EAAO1F,KAAO,QACd0F,EAAOX,IAAMmF,EACbvF,EAAQ8C,KAAO2C,EAEXC,IAGF1F,EAAQG,OAAS,OACjBH,EAAQI,SA9hBZ3E,KAiiBYiK,EAGZ,IAAK,IAAI3B,EAAIjI,KAAKyH,WAAWnJ,OAAS,EAAG2J,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQpH,KAAKyH,WAAWQ,GACxBhD,EAASmC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOqC,EAAO,OAGhB,GAAItC,EAAMC,QAAUrH,KAAKmJ,KAAM,CAC7B,IAAIU,EAAW7G,EAAOuC,KAAK6B,EAAO,YAC9B0C,EAAa9G,EAAOuC,KAAK6B,EAAO,cAEpC,GAAIyC,GAAYC,EAAY,CAC1B,GAAI9J,KAAKmJ,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,GACzB,GAAItH,KAAKmJ,KAAO/B,EAAMG,WAC3B,OAAOmC,EAAOtC,EAAMG,iBAGjB,GAAIsC,GACT,GAAI7J,KAAKmJ,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,OAG3B,KAAIwC,EAMT,MAAM,IAAIvF,MAAM,0CALhB,GAAIvE,KAAKmJ,KAAO/B,EAAMG,WACpB,OAAOmC,EAAOtC,EAAMG,gBAU9BvC,OAAQ,SAASzF,EAAM+E,GACrB,IAAK,IAAI2D,EAAIjI,KAAKyH,WAAWnJ,OAAS,EAAG2J,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQpH,KAAKyH,WAAWQ,GAC5B,GAAIb,EAAMC,QAAUrH,KAAKmJ,MACrBnG,EAAOuC,KAAK6B,EAAO,eACnBpH,KAAKmJ,KAAO/B,EAAMG,WAAY,CAChC,IAAIwC,EAAe3C,EACnB,OAIA2C,IACU,UAATxK,GACS,aAATA,IACDwK,EAAa1C,QAAU/C,GACvBA,GAAOyF,EAAaxC,aAGtBwC,EAAe,MAGjB,IAAI9E,EAAS8E,EAAeA,EAAanC,WAAa,GAItD,OAHA3C,EAAO1F,KAAOA,EACd0F,EAAOX,IAAMA,EAETyF,GACF/J,KAAKqE,OAAS,OACdrE,KAAKgH,KAAO+C,EAAaxC,WAClB3C,GAGF5E,KAAKgK,SAAS/E,IAGvB+E,SAAU,SAAS/E,EAAQuC,GACzB,GAAoB,UAAhBvC,EAAO1F,KACT,MAAM0F,EAAOX,IAcf,MAXoB,UAAhBW,EAAO1F,MACS,aAAhB0F,EAAO1F,KACTS,KAAKgH,KAAO/B,EAAOX,IACM,WAAhBW,EAAO1F,MAChBS,KAAKwJ,KAAOxJ,KAAKsE,IAAMW,EAAOX,IAC9BtE,KAAKqE,OAAS,SACdrE,KAAKgH,KAAO,OACa,WAAhB/B,EAAO1F,MAAqBiI,IACrCxH,KAAKgH,KAAOQ,GAGP5C,GAGTqF,OAAQ,SAAS1C,GACf,IAAK,IAAIU,EAAIjI,KAAKyH,WAAWnJ,OAAS,EAAG2J,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQpH,KAAKyH,WAAWQ,GAC5B,GAAIb,EAAMG,aAAeA,EAGvB,OAFAvH,KAAKgK,SAAS5C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPxC,IAKb,MAAS,SAASyC,GAChB,IAAK,IAAIY,EAAIjI,KAAKyH,WAAWnJ,OAAS,EAAG2J,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQpH,KAAKyH,WAAWQ,GAC5B,GAAIb,EAAMC,SAAWA,EAAQ,CAC3B,IAAIpC,EAASmC,EAAMQ,WACnB,GAAoB,UAAhB3C,EAAO1F,KAAkB,CAC3B,IAAI2K,EAASjF,EAAOX,IACpBqD,EAAcP,GAEhB,OAAO8C,GAMX,MAAM,IAAI3F,MAAM,0BAGlB4F,cAAe,SAASrC,EAAUzG,EAAY4F,GAa5C,OAZAjH,KAAKyE,SAAW,CACdpB,SAAU0C,EAAO+B,GACjBzG,WAAYA,EACZ4F,QAASA,GAGS,SAAhBjH,KAAKqE,SAGPrE,KAAKsE,SAvqBP3E,GA0qBOiF,IAQJjH,EAvrBM,CA8rBgBD,EAAOC,SAGtC,IACEyM,mBAAqBvH,EACrB,MAAOwH,GAUPC,SAAS,IAAK,yBAAdA,CAAwCzH","file":"static/js/1.7301edf4.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hoist_non_react_statics_1 = tslib_1.__importDefault(require(\"hoist-non-react-statics\"));\nfunction compose() {\n    var wrappingFunctions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        wrappingFunctions[_i] = arguments[_i];\n    }\n    return function wrapComponent(OriginalComponent) {\n        var result = wrappingFunctions.reduceRight(function (component, wrappingFunction) {\n            return wrappingFunction(component);\n        }, OriginalComponent);\n        return hoist_non_react_statics_1.default(result, OriginalComponent);\n    };\n}\nexports.default = compose;\n","import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { IDocumentDefinition, OperationVariables } from '@apollo/react-common';\n\nexport const defaultMapPropsToOptions = () => ({});\nexport const defaultMapResultToProps: <P>(props: P) => P = props => props;\nexport const defaultMapPropsToSkip = () => false;\n\nexport function getDisplayName<P>(WrappedComponent: React.ComponentType<P>) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport function calculateVariablesFromProps<TProps>(\n  operation: IDocumentDefinition,\n  props: TProps\n) {\n  let variables: OperationVariables = {};\n  for (let { variable, type } of operation.variables) {\n    if (!variable.name || !variable.name.value) continue;\n\n    const variableName = variable.name.value;\n    const variableProp = (props as any)[variableName];\n\n    if (typeof variableProp !== 'undefined') {\n      variables[variableName] = variableProp;\n      continue;\n    }\n\n    // Allow optional props\n    if (type.kind !== 'NonNullType') {\n      variables[variableName] = undefined;\n    }\n  }\n  return variables;\n}\n\nexport type RefSetter<TChildProps> = (\n  ref: React.ComponentClass<TChildProps>\n) => void | void;\n\n// base class for hocs to easily manage refs\nexport class GraphQLBase<\n  TProps,\n  TChildProps,\n  TState = any\n  > extends React.Component<TProps, TState> {\n  public withRef: boolean = false;\n  // wrapped instance\n  private wrappedInstance?: React.ComponentClass<TChildProps>;\n\n  constructor(props: TProps) {\n    super(props);\n    this.setWrappedInstance = this.setWrappedInstance.bind(this);\n  }\n\n  getWrappedInstance() {\n    invariant(\n      this.withRef,\n      `To access the wrapped instance, you need to specify ` +\n      `{ withRef: true } in the options`\n    );\n\n    return this.wrappedInstance;\n  }\n\n  setWrappedInstance(ref: React.ComponentClass<TChildProps>) {\n    this.wrappedInstance = ref;\n  }\n}\n","import { DocumentNode } from 'graphql';\nimport { parser, DocumentType } from '@apollo/react-common';\n\nimport { withQuery } from './query-hoc';\nimport { withMutation } from './mutation-hoc';\nimport { withSubscription } from './subscription-hoc';\nimport { OperationOption, DataProps, MutateProps } from './types';\n\nexport function graphql<\n  TProps extends TGraphQLVariables | {} = {},\n  TData = {},\n  TGraphQLVariables = {},\n  TChildProps = Partial<DataProps<TData, TGraphQLVariables>> &\n    Partial<MutateProps<TData, TGraphQLVariables>>\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  switch (parser(document).type) {\n    case DocumentType.Mutation:\n      return withMutation(document, operationOptions);\n    case DocumentType.Subscription:\n      return withSubscription(document, operationOptions);\n    case DocumentType.Query:\n    default:\n      return withQuery(document, operationOptions);\n  }\n}\n","import React from 'react';\nimport { DocumentNode } from 'graphql';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport {\n  parser,\n  BaseMutationOptions,\n  MutationFunction,\n  MutationResult\n} from '@apollo/react-common';\nimport { Mutation } from '@apollo/react-components';\n\nimport {\n  defaultMapPropsToOptions,\n  getDisplayName,\n  calculateVariablesFromProps,\n  GraphQLBase\n} from './hoc-utils';\nimport { OperationOption, OptionProps, MutateProps } from './types';\n\nexport function withMutation<\n  TProps extends TGraphQLVariables | {} = {},\n  TData = {},\n  TGraphQLVariables = {},\n  TChildProps = MutateProps<TData, TGraphQLVariables>\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  const operation = parser(document);\n  // extract options\n\n  const {\n    options = defaultMapPropsToOptions,\n    alias = 'Apollo'\n  } = operationOptions;\n\n  let mapPropsToOptions = options as (props: any) => BaseMutationOptions;\n  if (typeof mapPropsToOptions !== 'function')\n    mapPropsToOptions = () => options as BaseMutationOptions;\n\n  return (\n    WrappedComponent: React.ComponentType<TProps & TChildProps>\n  ): React.ComponentClass<TProps> => {\n    const graphQLDisplayName = `${alias}(${getDisplayName(WrappedComponent)})`;\n    class GraphQL extends GraphQLBase<TProps, TChildProps> {\n      static displayName = graphQLDisplayName;\n      static WrappedComponent = WrappedComponent;\n      render() {\n        let props = this.props as TProps;\n        const opts = mapPropsToOptions(props);\n\n        if (operationOptions.withRef) {\n          this.withRef = true;\n          props = Object.assign({}, props, {\n            ref: this.setWrappedInstance\n          });\n        }\n        if (!opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n\n        return (\n          <Mutation ignoreResults {...opts} mutation={document}>\n            {(\n              mutate: MutationFunction<TData, TGraphQLVariables>,\n              { data, ...r }: MutationResult<TData>\n            ) => {\n              // the HOC's historically hoisted the data from the execution result\n              // up onto the result since it was passed as a nested prop\n              // we massage the Mutation component's shape here to replicate that\n              // this matches the query HoC\n              const result = Object.assign(r, data || {});\n              const name = operationOptions.name || 'mutate';\n              const resultName = operationOptions.name\n                ? `${name}Result`\n                : 'result';\n              let childProps = ({\n                [name]: mutate,\n                [resultName]: result\n              } as any) as TChildProps;\n              if (operationOptions.props) {\n                const newResult: OptionProps<\n                  TProps,\n                  TData,\n                  TGraphQLVariables\n                > = {\n                  [name]: mutate,\n                  [resultName]: result,\n                  ownProps: props\n                };\n                childProps = operationOptions.props(newResult) as any;\n              }\n\n              return <WrappedComponent {...props} {...childProps} />;\n            }}\n          </Mutation>\n        );\n      }\n    }\n\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n","import React from 'react';\nimport { DocumentNode } from 'graphql';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { parser, BaseQueryOptions } from '@apollo/react-common';\nimport { Subscription } from '@apollo/react-components';\n\nimport {\n  getDisplayName,\n  GraphQLBase,\n  calculateVariablesFromProps,\n  defaultMapPropsToOptions,\n  defaultMapPropsToSkip\n} from './hoc-utils';\nimport { OperationOption, OptionProps, DataProps } from './types';\n\nexport function withSubscription<\n  TProps extends TGraphQLVariables | {} = {},\n  TData = {},\n  TGraphQLVariables = {},\n  TChildProps = DataProps<TData, TGraphQLVariables>\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  const operation = parser(document);\n  // extract options\n  const {\n    options = defaultMapPropsToOptions,\n    skip = defaultMapPropsToSkip,\n    alias = 'Apollo',\n    shouldResubscribe\n  } = operationOptions;\n\n  let mapPropsToOptions = options as (props: any) => BaseQueryOptions;\n  if (typeof mapPropsToOptions !== 'function')\n    mapPropsToOptions = () => options as BaseQueryOptions;\n\n  let mapPropsToSkip = skip as (props: any) => boolean;\n  if (typeof mapPropsToSkip !== 'function') mapPropsToSkip = () => skip as any;\n\n  // allow for advanced referential equality checks\n  let lastResultProps: TChildProps | void;\n  return (\n    WrappedComponent: React.ComponentType<TProps & TChildProps>\n  ): React.ComponentClass<TProps> => {\n    const graphQLDisplayName = `${alias}(${getDisplayName(WrappedComponent)})`;\n    class GraphQL extends GraphQLBase<\n      TProps,\n      TChildProps,\n      { resubscribe: boolean }\n    > {\n      static displayName = graphQLDisplayName;\n      static WrappedComponent = WrappedComponent;\n      constructor(props: TProps) {\n        super(props);\n        this.state = { resubscribe: false };\n      }\n\n      componentDidUpate(prevProps: TProps) {\n        if (shouldResubscribe) {\n          this.setState({\n            resubscribe: shouldResubscribe(prevProps, this.props)\n          });\n        }\n      }\n\n      render() {\n        let props = this.props;\n        const shouldSkip = mapPropsToSkip(props);\n        const opts = shouldSkip\n          ? Object.create(null)\n          : mapPropsToOptions(props);\n\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n        return (\n          <Subscription\n            {...opts}\n            displayName={graphQLDisplayName}\n            skip={shouldSkip}\n            subscription={document}\n            shouldResubscribe={this.state.resubscribe}\n          >\n            {({ data, ...r }: any) => {\n              if (operationOptions.withRef) {\n                this.withRef = true;\n                props = Object.assign({}, props, {\n                  ref: this.setWrappedInstance\n                });\n              }\n              // if we have skipped, no reason to manage any reshaping\n              if (shouldSkip) {\n                return (\n                  <WrappedComponent\n                    {...props as TProps}\n                    {...{} as TChildProps}\n                  />\n                );\n              }\n\n              // the HOC's historically hoisted the data from the execution result\n              // up onto the result since it was passed as a nested prop\n              // we massage the Query components shape here to replicate that\n              const result = Object.assign(r, data || {});\n              const name = operationOptions.name || 'data';\n              let childProps = { [name]: result };\n              if (operationOptions.props) {\n                const newResult: OptionProps<\n                  TProps,\n                  TData,\n                  TGraphQLVariables\n                > = {\n                  [name]: result,\n                  ownProps: props as TProps\n                };\n                lastResultProps = operationOptions.props(\n                  newResult,\n                  lastResultProps\n                );\n                childProps = lastResultProps;\n              }\n\n              return (\n                <WrappedComponent\n                  {...props as TProps}\n                  {...childProps as TChildProps}\n                />\n              );\n            }}\n          </Subscription>\n        );\n      }\n    }\n\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n","import React from 'react';\nimport { DocumentNode } from 'graphql';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { parser, BaseQueryOptions } from '@apollo/react-common';\nimport { Query } from '@apollo/react-components';\n\nimport {\n  getDisplayName,\n  GraphQLBase,\n  calculateVariablesFromProps,\n  defaultMapPropsToOptions,\n  defaultMapPropsToSkip\n} from './hoc-utils';\nimport { OperationOption, OptionProps, DataProps } from './types';\n\nexport function withQuery<\n  TProps extends TGraphQLVariables | {} = {},\n  TData = {},\n  TGraphQLVariables = {},\n  TChildProps = DataProps<TData, TGraphQLVariables>\n>(\n  document: DocumentNode,\n  operationOptions: OperationOption<\n    TProps,\n    TData,\n    TGraphQLVariables,\n    TChildProps\n  > = {}\n) {\n  // this is memoized so if coming from `graphql` there is nearly no extra cost\n  const operation = parser(document);\n  // extract options\n  const {\n    options = defaultMapPropsToOptions,\n    skip = defaultMapPropsToSkip,\n    alias = 'Apollo'\n  } = operationOptions;\n\n  let mapPropsToOptions = options as (props: any) => BaseQueryOptions;\n  if (typeof mapPropsToOptions !== 'function') {\n    mapPropsToOptions = () => options as BaseQueryOptions;\n  }\n\n  let mapPropsToSkip = skip as (props: any) => boolean;\n  if (typeof mapPropsToSkip !== 'function') {\n    mapPropsToSkip = () => skip as any;\n  }\n\n  // allow for advanced referential equality checks\n  let lastResultProps: TChildProps | void;\n  return (\n    WrappedComponent: React.ComponentType<TProps & TChildProps>\n  ): React.ComponentClass<TProps> => {\n    const graphQLDisplayName = `${alias}(${getDisplayName(WrappedComponent)})`;\n    class GraphQL extends GraphQLBase<TProps, TChildProps> {\n      static displayName = graphQLDisplayName;\n      static WrappedComponent = WrappedComponent;\n\n      render() {\n        let props = this.props;\n        const shouldSkip = mapPropsToSkip(props);\n        const opts = shouldSkip\n          ? Object.create(null)\n          : { ...mapPropsToOptions(props) };\n\n        if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n          opts.variables = calculateVariablesFromProps(operation, props);\n        }\n\n        return (\n          <Query\n            {...opts}\n            displayName={graphQLDisplayName}\n            skip={shouldSkip}\n            query={document}\n          >\n            {({ client: _, data, ...r }: any) => {\n              if (operationOptions.withRef) {\n                this.withRef = true;\n                props = Object.assign({}, props, {\n                  ref: this.setWrappedInstance\n                });\n              }\n\n              // if we have skipped, no reason to manage any reshaping\n              if (shouldSkip) {\n                return (\n                  <WrappedComponent\n                    {...props as TProps}\n                    {...{} as TChildProps}\n                  />\n                );\n              }\n\n              // the HOC's historically hoisted the data from the execution result\n              // up onto the result since it was passed as a nested prop\n              // we massage the Query components shape here to replicate that\n              const result = Object.assign(r, data || {});\n              const name = operationOptions.name || 'data';\n              let childProps = { [name]: result };\n              if (operationOptions.props) {\n                const newResult: OptionProps<\n                  TProps,\n                  TData,\n                  TGraphQLVariables\n                > = {\n                  [name]: result,\n                  ownProps: props as TProps\n                };\n                lastResultProps = operationOptions.props(\n                  newResult,\n                  lastResultProps\n                );\n                childProps = lastResultProps;\n              }\n\n              return (\n                <WrappedComponent\n                  {...props as TProps}\n                  {...childProps as TChildProps}\n                />\n              );\n            }}\n          </Query>\n        );\n      }\n    }\n\n    // Make sure we preserve any custom statics on the original component.\n    return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n  };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}