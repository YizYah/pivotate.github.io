{"version":3,"sources":["config/index.js","context/AuthContext.js","context/createDataContext.js","components/Pages/Confirmation/index.js","App.js","serviceWorker.js","client/index.js","redux/appCreateInfo/appDetails.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["PLATFORM_ID","SOURCE_APP_SPEC_ID","TYPE_CUSTOMER_ID","TYPE_USER_TYPE_ID","TYPE_SCREEN_ID","TYPE_INFO_TYPE_ID","TYPE_DESCRIPTION_ID","CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID","CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","UPDATE_APP_FOR_APP_SPEC_ACTION_ID","UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID","UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","DELETE_APP_FOR_APP_SPEC_ACTION_ID","DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID","DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","ADD_HAS_PARENT_FOR_PARENT_ACTION_ID","CREATE_APP_FOR_APP_SPEC_ACTION_ID","createDateContext","state","actions","type","userLoggedIn","payload","loginUser","dispatch","userFlag","userLoggedin","console","log","localStorage","setItem","logoutUser","removeItem","Context","Provider","reducer","initialState","createContext","children","useReducer","boundActions","key","value","Confirmation","className","style","margin","marginTop","maxWidth","backgroundColor","borderRadius","marginBottom","alt","width","src","textAlign","AppFooter","React","lazy","Home","EmailVerified","AppHeader","Staging","Contact","Pricing","privacyPolicy","underConstruction","termsAndConditions","TempVideo","Schedule","App","childRef","useRef","Suspense","path","fallback","basename","process","exact","noAction","onSignUp","current","modalHandlerRegistration","ref","component","render","props","isLocalhost","Boolean","window","location","hostname","match","authLink","createAuthLink","link","ApolloLink","from","httpLink","ApolloClient","cache","InMemoryCache","dataIdFromObject","object","id","__typename","v4","INITIAL_STATE","appTitle","description","userType","appName","screenName","subTypeInfo","appDetailsReducer","action","combineReducers","appDetails","middlewares","logger","store","createStore","rootReducer","applyMiddleware","tagManagerArgs","gtmId","js","Date","TagManager","initialize","ReactDOM","AuthContext","client","platformId","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3c93c65.chunk.js","sourcesContent":["/*\r\n  This file was generated automatically by nostack 'makecode' for the app 'pivotate3'.\r\n  If you build a new stack from a template, this version will probably need to change.\r\n\r\n  For instance, it will update if you run 'makecode' again. Fair warning, that will\r\n  change a lot of your code. If you modify your current stack to add actions, sources,\r\n  or types, it would make sense to add constants here.\r\n\r\n  But, you should *not* add permanent, separate configuration material or other material that is not directly\r\n  'managed by NoStack, because this will will be replaced with every call to 'makecode'.\r\n */\r\n\r\n// stack id\r\nexport const PLATFORM_ID = 'us-east-1_IDHU1YQ1O';\r\n\r\n// sources\r\nexport const SOURCE_APP_SPEC_ID = 'e36aa4c6-8029-4969-b1fe-d659bdb9eb42';\r\nexport const SOURCE_PARENT_ID = '2bb38a1e-6802-4aa6-8c23-2ae8a7f1fe08';\r\n\r\n// types\r\nexport const TYPE_MODERATOR_ID = 'us-east-1_IDHU1YQ1OmoderatorClass';\r\nexport const TYPE_CUSTOMER_ID = 'ba6509d6-8867-4991-9cfd-df407d44f0f1';\r\nexport const TYPE_APP_ID = '32befb94-af56-4817-b5ae-47741bf0b5d5';\r\nexport const TYPE_USER_TYPE_ID = '1b0a1e97-32a8-41ed-946a-d33c6560f4d2';\r\nexport const TYPE_SCREEN_ID = '6ee096cc-1d66-42e1-ae8e-be0cbdcb2bf5';\r\nexport const TYPE_INFO_TYPE_ID = '49200929-013e-4196-b13b-bbfec87c3efb';\r\nexport const TYPE_DESCRIPTION_ID = '1f2a35d2-0757-424b-b610-1eabec184fca';\r\n\r\n// actions\r\n// CREATE_INSTANCE\r\nexport const CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID =\r\n  '53a02af0-eaeb-40d5-84f3-cfe8cf9d23c1';\r\nexport const CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID =\r\n  'b79bf571-e364-40c4-bb48-3765d884161d';\r\nexport const CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID =\r\n  'a2962d65-f87b-47ee-8ff8-18f5e3650e69';\r\nexport const CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID =\r\n  'b75bff3e-2090-4dd3-b076-c69e0ba5b467';\r\n\r\n// UPDATE_INSTANCE\r\nexport const UPDATE_APP_FOR_APP_SPEC_ACTION_ID =\r\n  '45a09731-793f-4b87-82bd-f6363546c191';\r\nexport const UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID =\r\n  'fa9dd57a-6103-40be-8751-3421d120b3da';\r\nexport const UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID =\r\n  'feeb9777-0538-4f3a-8bbe-a907e84667ba';\r\nexport const UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID =\r\n  'c822a81e-a4ac-4e9a-9aab-9f59f777276a';\r\nexport const UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID =\r\n  '2462c9aa-f377-48c0-9126-e52599c82f4a';\r\nexport const UPDATE_SCREEN_FOR_PARENT_ACTION_ID =\r\n  '1c0d97b9-d0d7-4b8b-81a3-2c22b06768bc';\r\n\r\n// DELETE_INSTANCE\r\nexport const DELETE_APP_FOR_APP_SPEC_ACTION_ID =\r\n  '9ad7799b-5946-4039-a8c9-e7e7395668ae';\r\nexport const DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID =\r\n  'd399ef81-c0f0-495e-95f8-f63f132e2b28';\r\nexport const DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID =\r\n  '7496f085-7d3c-4739-b83d-de6efbcdcbd3';\r\nexport const DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID =\r\n  '7f3d7add-28ec-4447-a91b-46b88b3203ee';\r\nexport const DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID =\r\n  '5e072d38-9314-4a2f-b3b2-476a0c89d288';\r\nexport const DELETE_SCREEN_FOR_PARENT_ACTION_ID =\r\n  '9949b22f-6e70-4346-b183-a53858cbe8a6';\r\n\r\n// ADD_INSTANCE_ASSN\r\nexport const ADD_HAS_PARENT_FOR_PARENT_ACTION_ID =\r\n  '482d8179-eb4b-494b-80bc-02c1b8c43eef';\r\n\r\n// UPDATE_INSTANCE_ASSN\r\nexport const UPDATE_HAS_PARENT_FOR_PARENT_ACTION_ID =\r\n  '086a5506-1da2-48da-901a-2ee8a5b3bacc';\r\n\r\n// DELETE_INSTANCE_ASSN\r\nexport const DELETE_HAS_PARENT_FOR_PARENT_ACTION_ID =\r\n  '3178abb9-757a-4849-a33b-0ad892b57a63';\r\n\r\n// CREATE_INSTANCE_WITH_UNOWNED_PARENT\r\nexport const CREATE_APP_FOR_APP_SPEC_ACTION_ID =\r\n  '955e751c-cb97-4383-9eb3-eb4b9bc4e04e';\r\nexport const CREATE_SCREEN_FOR_PARENT_ACTION_ID =\r\n  '7287f58b-e9b6-4107-9c0d-76b6e6fcb17a';\r\n","import createDateContext from './createDataContext';\r\n\r\nconst authReducer = (state, actions) => {\r\n  switch (actions.type) {\r\n    case 'login':\r\n      return { userLoggedIn: actions.payload };\r\n    case 'logout':\r\n      return { userLoggedIn: actions.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loginUser = (dispatch) => (userFlag) => {\r\n  let userLoggedin = true;\r\n  if (userFlag < 0) userLoggedin = false;\r\n  console.log(userLoggedin);\r\n  localStorage.setItem('userFlag', true);\r\n  dispatch({ type: 'login', payload: true });\r\n};\r\n\r\nconst logoutUser = (dispatch) => () => {\r\n  localStorage.removeItem('userFlag');\r\n  dispatch({ type: 'logout', payload: false });\r\n};\r\n\r\nexport const { Context, Provider } = createDateContext(\r\n  authReducer,\r\n  { loginUser, logoutUser },\r\n  { userLoggedIn: false }\r\n);\r\n","import React, { createContext, useReducer } from 'react';\r\n\r\nexport default (reducer, actions, initialState) => {\r\n  const Context = createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const boundActions = {};\r\n    for (const key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {children}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n  return { Context, Provider };\r\n};\r\n","import React from 'react';\r\n\r\nconst Confirmation = () => {\r\n  return (\r\n    <div className='text-center container full-width'>\r\n      <div\r\n        style={{\r\n          margin: 'auto',\r\n          marginTop: '100px',\r\n          maxWidth: '769px',\r\n          backgroundColor: '#ffffff',\r\n          borderRadius: '10px',\r\n          marginBottom: '100px',\r\n        }}\r\n      >\r\n        <img\r\n          alt='Banner'\r\n          style={{ width: '100%' }}\r\n          src='https://pivotatestaticassets.com/images/Banner.jpg'\r\n        />\r\n        <p style={{ textAlign: 'center' }}>\r\n          <br />\r\n          <br />\r\n          <h3 className='c0'>\r\n            Your Meeting is Confirmed! We’ll be talking soon.\r\n          </h3>\r\n          <h4>Check your email for details.</h4>\r\n        </p>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","/* eslint-disable react/jsx-wrap-multilines */\r\nimport React, { useRef } from 'react';\r\nimport './scss/style.scss';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport ScrollToTop from 'react-router-scroll-top';\r\nimport Confirmation from './components/Pages/Confirmation';\r\n\r\nconst AppFooter = React.lazy(() => import('./components/AppFooter'));\r\nconst Home = React.lazy(() => import('./components/Pages/Home'));\r\nconst EmailVerified = React.lazy(() =>\r\n  import('./components/Pages/Email-verified')\r\n);\r\nconst AppHeader = React.lazy(() => import('./components/AppHeader'));\r\nconst Staging = React.lazy(() => import('./components/Pages/Staging'));\r\nconst Contact = React.lazy(() => import('./components/Pages/Contact'));\r\nconst Pricing = React.lazy(() => import('./components/Pages/Pricing'));\r\nconst privacyPolicy = React.lazy(() =>\r\n  import('./components/Pages/Privacy-policy')\r\n);\r\n// const confirmation = React.lazy(() => import('./components/Pages/Confirmation'))\r\nconst underConstruction = React.lazy(() =>\r\n  import('./components/Pages/Under-construction')\r\n);\r\nconst termsAndConditions = React.lazy(() =>\r\n  import('./components/Pages/Terms-and-conditions')\r\n);\r\nconst TempVideo = React.lazy(() => import('./components/Pages/Temp-video'));\r\nconst Schedule = React.lazy(() => import('./components/Pages/Schedule'));\r\n\r\nconst App = () => {\r\n  const childRef = useRef();\r\n\r\n  return (\r\n    <React.Suspense\r\n      path='/'\r\n      fallback={\r\n        <section className=''>\r\n          <div className='container full-width'>\r\n            <div className='flex flex-wrap items-center'>\r\n              <div className='hero__header'>\r\n                <div className='hero__text'>\r\n                  <strong />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      }\r\n    >\r\n      <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\r\n        <ScrollToTop>\r\n          <Switch>\r\n            <Route exact path={`${process.env.PUBLIC_URL}/confirmation`}>\r\n              <AppHeader noAction />\r\n              <Confirmation />\r\n              <AppFooter noAction />\r\n            </Route>\r\n            <Route\r\n              exact\r\n              path={`${process.env.PUBLIC_URL}/userEmailVerification`}\r\n            >\r\n              <AppHeader />\r\n              <EmailVerified />\r\n              <AppFooter />\r\n            </Route>\r\n            <Route exact path={`${process.env.PUBLIC_URL}/tempvideo`}>\r\n              <AppHeader noAction />\r\n              <TempVideo />\r\n              <AppFooter noAction />\r\n            </Route>\r\n            <Route exact path={`${process.env.PUBLIC_URL}/staging`}>\r\n              <Staging\r\n                onSignUp={() => childRef.current.modalHandlerRegistration()}\r\n              />\r\n            </Route>\r\n\r\n            <Route exact path={`${process.env.PUBLIC_URL}/schedule`}>\r\n              <AppHeader />\r\n              <Schedule />\r\n              <AppFooter noAction />\r\n            </Route>\r\n            <Route\r\n              exact\r\n              path={[\r\n                `${process.env.PUBLIC_URL}/`,\r\n                `${process.env.PUBLIC_URL}/pricing`,\r\n                `${process.env.PUBLIC_URL}/under-construction`,\r\n                `${process.env.PUBLIC_URL}/privacy-policy`,\r\n                `${process.env.PUBLIC_URL}/terms-and-conditions`,\r\n                `${process.env.PUBLIC_URL}/contact`,\r\n                `${process.env.PUBLIC_URL}/schedule`,\r\n                `${process.env.PUBLIC_URL}/meeting-step/create-user-type`,\r\n                `${process.env.PUBLIC_URL}/meeting-step/job-seeker`,\r\n              ]}\r\n            >\r\n              <AppHeader ref={childRef} />\r\n              {/* main */}\r\n              <Route exact path={`${process.env.PUBLIC_URL}/`}>\r\n                <Home\r\n                  onSignUp={() => childRef.current.modalHandlerRegistration()}\r\n                />\r\n              </Route>\r\n\r\n              <Route\r\n                exact\r\n                path={`${process.env.PUBLIC_URL}/contact`}\r\n                component={Contact}\r\n              />\r\n              <Route exact path={`${process.env.PUBLIC_URL}/pricing`} />\r\n\r\n              <Route\r\n                path={`${process.env.PUBLIC_URL}/pricing`}\r\n                render={(props) => (\r\n                  <Pricing\r\n                    onSignUp={() => childRef.current.modalHandlerRegistration()}\r\n                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Route\r\n                path={`${process.env.PUBLIC_URL}/under-construction`}\r\n                component={underConstruction}\r\n              />\r\n              <Route\r\n                path={`${process.env.PUBLIC_URL}/privacy-policy`}\r\n                component={privacyPolicy}\r\n              />\r\n              <Route\r\n                path={`${process.env.PUBLIC_URL}/terms-and-conditions`}\r\n                component={termsAndConditions}\r\n              />\r\n\r\n              <AppFooter\r\n                onSignUp={() => childRef.current.modalHandlerRegistration()}\r\n              />\r\n              {/* main end */}\r\n            </Route>\r\n            <Route component={underConstruction} />\r\n          </Switch>\r\n        </ScrollToTop>\r\n      </BrowserRouter>\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === \"[::1]\" ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nconsole.log(isLocalhost)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      const swUrl = ``;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { ApolloClient } from 'apollo-client';\r\nimport { ApolloLink } from 'apollo-link';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { v4 } from 'uuid';\r\n\r\nimport { createAuthLink, httpLink } from '@nostack/no-stack';\r\n\r\nimport { PLATFORM_ID } from '../config';\r\n\r\nconst authLink = createAuthLink(PLATFORM_ID);\r\n\r\nconst link = ApolloLink.from([authLink, httpLink]);\r\n\r\nexport default new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache({\r\n    dataIdFromObject: (object) =>\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      object.id ? object.id + object.__typename : v4(),\r\n  }),\r\n});\r\n","const INITIAL_STATE = {\r\n  appTitle: \"\",\r\n  description: \"\",\r\n  userType: \"\",\r\n  appName: \"\",\r\n  screenName: \"\",\r\n  subTypeInfo: \"\",\r\n\r\n};\r\nconst appDetailsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n      case 'add_app_name':\r\n          return {...state, appName: action.payload}\r\n      case 'add_app_description':\r\n          return {...state, description: action.payload}\r\n      case 'add_user_type':\r\n          return {...state, userType: action.payload}\r\n      default: \r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default appDetailsReducer;","import { combineReducers } from 'redux';\r\n\r\nimport appDetailsReducer from './appCreateInfo/appDetails.reducer';\r\n\r\nexport default combineReducers({\r\n  appDetails: appDetailsReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { NoStackProvider } from '@nostack/no-stack';\r\n\r\nimport { PLATFORM_ID } from './config';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport client from './client';\r\n\r\nimport TagManager from 'react-gtm-module';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { Provider as AuthContext } from './context/AuthContext';\r\nimport store from './redux/store';\r\nconst tagManagerArgs = {\r\n  gtmId: 'GTM-TS3Q48S',\r\n  js: new Date(),\r\n};\r\n\r\nTagManager.initialize(tagManagerArgs);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AuthContext>\r\n      <NoStackProvider client={client} platformId={PLATFORM_ID}>\r\n        <App />\r\n      </NoStackProvider>\r\n    </AuthContext>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}