{"version":3,"sources":["actions/index.js","components/Modal/index.js","flattenData/index.js","components/AppSpec/AppCreationForm/index.js","components/source-props/appSpec.js","components/EditInstanceForm/index.js","components/DeleteInstanceMenu/index.js","components/AppSpec/UserTypeCreationForm/index.js","components/AppSpec/ScreenCreationForm/index.js","components/AppSpec/InfoTypeCreationForm/index.js","components/AppSpec/InfoType/index.js","components/AppSpec/InfoTypes/index.js","components/AppSpec/Screen/index.js","components/AppSpec/Screens/index.js","components/AppSpec/UserType/index.js","components/AppSpec/UserTypes/index.js","components/AppSpec/DescriptionCreationForm/index.js","components/AppSpec/Description/index.js","components/AppSpec/Descriptions/index.js","components/AppSpec/App/index.js","components/RegistrationForm/RegistrationForm.style.js","components/RegistrationForm/RegistrationField.js","components/RegistrationForm/stepper/BasicDetailsForm.js","components/RegistrationForm/stepper/AppDetailsForm.js","components/RegistrationForm/stepper/registration-util.js","components/RegistrationForm/stepper/CreditCardDetailsForm.js","components/RegistrationForm/index.js","components/ForgotPasswordButton/SendCodeForm.js","components/ForgotPasswordButton/ResetPasswordForm.js","components/ForgotPasswordButton/index.js","components/LoginForm/index.js","components/meetingSteps/createUserType.js","components/meetingSteps/jobSeeker.js","components/AuthTabs/index.js","components/AppSpec/Apps/index.js","components/meetingSteps/createApp.js","components/Pages/Staging/index.js"],"names":["increment","type","decrement","Modal","props","className","onClick","onClose","styleName","progress","fullScreen","aria-label","style","width","children","flattenData","element","flatData","instance","length","filter","child","map","typeId","instances","flattenChildData","styled","div","button","compose","graphql","EXECUTE_ACTION","name","customerId","createApp","refetchQueries","useState","appValue","updateAppValue","loading","updateLoading","dispatch","useHistory","useSelector","state","counter","useDispatch","handleSubmit","e","a","async","preventDefault","variables","actionId","CREATE_APP_FOR_APP_SPEC_ACTION_ID","executionParameters","JSON","stringify","parentInstanceId","value","unrestricted","createAppResponse","parse","data","ExecuteAction","class","maxWidth","margin","htmlFor","placeholder","id","onChange","target","onKeyPress","charCode","disabled","marginTop","display","marginLeft","SOURCE_APP_SPEC_QUERY","gql","APP_SPEC_RELATIONSHIPS","app","userType","screen","infoType","description","Button","hoverColor","EditInstanceForm","label","onSave","onCancel","Container","DeleteInstanceMenu","onDelete","parentId","createUserType","userTypeValue","updateUserTypeValue","CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","createUserTypeResponse","createScreen","screenValue","updateScreenValue","CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID","createScreenResponse","createInfoType","infoTypeValue","updateInfoTypeValue","CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","createInfoTypeResponse","InfoTypeStyleWrapper","selected","isDeleting","updateInstance","deleteInstance","onSelect","isEditMode","updateIsEditMode","isSaving","updateIsSaving","isDeleteMode","updateIsDeleteMode","updateIsDeleting","UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","instanceId","DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","InfoTypes","selectedInfoTypeId","wrapperRef","createRef","handleClick","node","current","contains","setState","handleSelect","document","addEventListener","this","removeEventListener","screenId","infoTypes","onUpdate","ref","key","v4","Component","ScreenStyleWrapper","infoTypeData","find","TYPE_INFO_TYPE_ID","DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID","Screens","selectedScreenId","userTypeId","screens","UserTypeStyleWrapper","screenData","TYPE_SCREEN_ID","UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","mapDispatchToProps","UserTypes","selectedUserTypeId","appId","userTypes","connect","Form","createDescription","descriptionValue","updateDescriptionValue","CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","createDescriptionResponse","DescriptionStyleWrapper","UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","Descriptions","selectedDescriptionId","descriptions","userTypeData","TYPE_USER_TYPE_ID","descriptionData","TYPE_DESCRIPTION_ID","UPDATE_APP_FOR_APP_SPEC_ACTION_ID","DELETE_APP_FOR_APP_SPEC_ACTION_ID","minWidth","ErrorContainer","Row","RegistrationField","fieldLabel","as","options","opt","index","field","form","href","BasicDetailsForm","initialValues","validationSchema","onSubmit","formError","isSubmitting","isValid","dirty","isValidating","checked","onSwitch","AppDetailsForm","validationSchemaBasic","Yup","shape","firstName","required","lastName","email","terms","oneOf","validationSchemaApp","validationSchemaCreditCard","cardNumber","max","test","valid","number","cardName","cvc","min","expiryMonth","expiryYear","creditCardExpirationYear","years","dateStart","moment","dateEnd","add","diff","year","format","push","creditCardExpirationMonth","months","monthNumber","monthName","CreditCardDetailsForm","dt","Date","username","password","passwordConfirmation","getMonth","toString","padStart","getFullYear","RegistrationForm","userClassId","onSuccess","useMutation","REGISTER_USER","register","registrationCompleted","setRegistrationCompleted","setFormError","step","setStep","setUsername","setFirstName","setLastName","setEmail","setPassword","setApp","setDescription","values","setSubmitting","creditCardNumber","creditCardName","expirationDate","csv","formValues","nextStep","console","log","graphQLErrors","window","history","pushState","registered","src","fontSize","to","handleSubmitBasicForm","handleSubmitAppForm","displayCurrentDescription","enterText","buttonText","progressWidth","displayCurrentStep","SendCodeForm","error","ResetPasswordForm","passwordConfirm","setPasswordConfirm","code","setCode","formIncomplete","FORGOT_PASSWORD","RESET_PASSWORD","withNoStack","getPasswordResetCode","resetPassword","platformId","formVisible","setFormVisible","userNameOrEmail","setUsernameOrEmail","passwordReset","setPasswordReset","setError","submitting","hideForm","stackId","currentUser","login","setIsSubmitting","autofill","method","message","Apps","selectedAppId","parameters","currentCustomer","SOURCE_APP_SPEC_ID","typeRelationships","query","apps","unitData","el","i","MenuContainer","AuthTabs","menuTitles","selectedTab","setSelectedTab","title","React","Children","AppsStyleWrapper","AppCreationForm","jumpToStep","onNext","Wrapper","LoginWrapper","App","backgroundColor","LoginForm","PLATFORM_ID","TYPE_CUSTOMER_ID"],"mappings":"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","file":"static/js/8.0e733e5f.chunk.js","sourcesContent":["export const increment = () => {\r\n  return {\r\n    type: \"INCREMENT\",\r\n  };\r\n};\r\n\r\nexport const decrement = () => {\r\n  return {\r\n    type: \"DECREMENT\",\r\n  };\r\n};\r\n\r\nexport const currentUser = () => {\r\n  return {\r\n    type: \"CURRENT_USER\",\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nconst Modal = (props, className) => (\r\n  <>\r\n    <div className=\"dialog__backdrop\" onClick={props.onClose}></div>\r\n    <div\r\n      className={`dialog text-center ${props.styleName}\r\n         ${props.progress ? \" dialog__bordered\" : \"\"}\r\n         ${props.fullScreen ? \" dialog__fullscreen\" : \"\"}\r\n      `}\r\n    >\r\n      <div className=\"dialog__close\">\r\n        <button\r\n          onClick={props.onClose}\r\n          type=\"button\"\r\n          aria-label=\"Close Account Info Modal Box\"\r\n        >\r\n          &times;\r\n        </button>\r\n      </div>\r\n      {props.progress && (\r\n        <div\r\n          className=\"dialog__progress\"\r\n          style={{ width: props.progress }}\r\n        ></div>\r\n      )}\r\n      {props.children}\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Modal;\r\n","export function flattenChildData(element) {\r\n  const flatData ={\r\n    typeId: element.typeId,\r\n    instances: []\r\n  };\r\n\r\n  if (element.instances && element.instances.length > 0) {\r\n    flatData.instances = element.instances.filter(child => !!child).map(\r\n      instance => flattenData(instance)\r\n    );\r\n  }\r\n\r\n  return flatData;\r\n};\r\n\r\nexport function flattenData(element) {\r\n  const flatData = {\r\n    ...element.instance,\r\n    children: []\r\n  };\r\n\r\n  if (element.children && element.children.length > 0) {\r\n    flatData.children = element.children.filter(child => !!child).map(\r\n      child => flattenChildData(child)\r\n    );\r\n  }\r\n\r\n  return flatData;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { withNoStack, EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_APP_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction AppCreationForm({ customerId, createApp, refetchQueries }) {\r\n  const [appValue, updateAppValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n  const history = useHistory();\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!appValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createAppResponse = await createApp({\r\n      variables: {\r\n        actionId: CREATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: customerId,\r\n          value: appValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newAppData = JSON.parse(createAppResponse.data.ExecuteAction);\r\n    updateAppValue(\"\");\r\n    updateLoading(false);\r\n    dispatch(increment());\r\n    // history.push(\"/meeting-step/create-user-type\");\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <div\r\n          class=\"text-center\"\r\n          style={{ maxWidth: \"350px\", margin: \"1em auto 2em auto\" }}\r\n        >\r\n          <strong>Tell us more about what you want in your web app! </strong>\r\n        </div>\r\n        <form>\r\n          <label htmlFor=\"app-value\">\r\n            <input\r\n              className=\"input\"\r\n              placeholder=\"Create Name\"\r\n              id=\"app-value\"\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              onKeyPress={handleKeyPress}\r\n              value={appValue}\r\n              disabled={loading}\r\n            />\r\n\r\n            <textarea className=\"input\" placeholder=\"Description\"></textarea>\r\n          </label>\r\n        </form>\r\n      </div>\r\n      <div style={{ marginTop: \"1em\" }}>\r\n        <button\r\n          style={{ display: \"block\", marginLeft: \"auto\" }}\r\n          className=\"button button--yellow\"\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          onClick={handleSubmit}\r\n        >\r\n          {loading ? \"Creating App...\" : \"Create App\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE_ACTION, { name: \"createApp\" }))(\r\n  AppCreationForm\r\n);\r\n","import gql from 'graphql-tag';\r\n\r\n  export const SOURCE_APP_SPEC_QUERY = gql`\r\n  query UNIT(\r\n    $id: ID!\r\n    $typeRelationships: String!\r\n    $parameters: String\r\n  ) {\r\n    unitData(\r\n      unitId: $id\r\n      typeRelationships: $typeRelationships\r\n      parameters: $parameters\r\n    )\r\n    {\r\n      \r\n        instance {\r\n            id\r\n            value\r\n        }\r\n        children {\r\n            typeId\r\n            instances {\r\n                \r\n\t\tinstance {\r\n\t\t    id\r\n\t\t    value\r\n\t\t}\r\n\t\tchildren {\r\n\t\t    typeId\r\n\t\t    instances {\r\n\t\t        \r\n\t\t\tinstance {\r\n\t\t\t    id\r\n\t\t\t    value\r\n\t\t\t}\r\n\t\t\tchildren {\r\n\t\t\t    typeId\r\n\t\t\t    instances {\r\n\t\t\t        \r\n\t\t\t\tinstance {\r\n\t\t\t\t    id\r\n\t\t\t\t    value\r\n\t\t\t\t}\r\n\t\t\t    }\r\n\t\t\t}\r\n\t\t    }\r\n\t\t}\r\n            }\r\n        }\r\n    \r\n    }\r\n  }\r\n`;\r\n\r\nexport const APP_SPEC_RELATIONSHIPS = {\r\n   app: {\r\n        userType: {\r\n        screen: {\r\n        infoType: null\r\n    }\r\n    }, description: null\r\n    },\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${props => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nfunction EditInstanceForm({\r\n  id,\r\n  label,\r\n  value,\r\n  onChange,\r\n  onSave,\r\n  onCancel,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>\r\n        {label}\r\n        <input\r\n          id={id}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n        />\r\n      </label>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#00FF00\"\r\n        onClick={onSave}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#FF0000\"\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditInstanceForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${props => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  color: red;\r\n  margin: 1em;\r\n  padding: 1em;\r\n  border: 1px solid #eeeeee;\r\n`;\r\n\r\nfunction DeleteInstanceMenu({\r\n  onDelete,\r\n  onCancel,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <Container>\r\n      Delete?\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#00FF00\"\r\n        onClick={onDelete}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#FF0000\"\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DeleteInstanceMenu;\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\nimport { CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction UserTypeCreationForm({ parentId, createUserType, refetchQueries }) {\r\n  const [userTypeValue, updateUserTypeValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n  function handleChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!userTypeValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createUserTypeResponse = await createUserType({\r\n      variables: {\r\n        actionId: CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: userTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n    dispatch(increment());\r\n\r\n    const newUserTypeData = JSON.parse(\r\n      createUserTypeResponse.data.ExecuteAction\r\n    );\r\n\r\n    updateUserTypeValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"userType-value\">\r\n        <input\r\n          placeholder=\"New User Type\"\r\n          className=\"input\"\r\n          id=\"userType-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={userTypeValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating UserType...\" : \"Create UserType\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE_ACTION, { name: \"createUserType\" }))(\r\n  UserTypeCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction ScreenCreationForm({ parentId, createScreen, refetchQueries }) {\r\n  const [screenValue, updateScreenValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!screenValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createScreenResponse = await createScreen({\r\n      variables: {\r\n        actionId: CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: screenValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newScreenData = JSON.parse(createScreenResponse.data.ExecuteAction);\r\n\r\n    updateScreenValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"screen-value\">\r\n        <input\r\n          placeholder=\"New Screen\"\r\n          className=\"input\"\r\n          id=\"screen-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={screenValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating Screen...\" : \"Create Screen\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE_ACTION, { name: \"createScreen\" }))(\r\n  ScreenCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction InfoTypeCreationForm({ parentId, createInfoType, refetchQueries }) {\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!infoTypeValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createInfoTypeResponse = await createInfoType({\r\n      variables: {\r\n        actionId: CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: infoTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newInfoTypeData = JSON.parse(\r\n      createInfoTypeResponse.data.ExecuteAction\r\n    );\r\n\r\n    updateInfoTypeValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"infoType-value\">\r\n        <input\r\n          className=\"input\"\r\n          placeholder=\"New Type of Info\"\r\n          id=\"infoType-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={infoTypeValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating InfoType...\" : \"Create InfoType\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE_ACTION, { name: \"createInfoType\" }))(\r\n  InfoTypeCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\n// add styling here\r\nconst InfoTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction InfoType({\r\n  infoType,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(infoType.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <InfoTypeStyleWrapper onClick={() => onSelect(infoType.id)}>\r\n  //       { infoTypeValue }\r\n  //     </InfoTypeStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleInfoTypeValueChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleInfoTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: infoType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={infoType.id}\r\n          label=\"InfoType Value:\"\r\n          value={infoTypeValue}\r\n          onChange={handleInfoTypeValueChange}\r\n          onSave={handleInfoTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: infoType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"box box--small\" selected={selected}>\r\n      <span> {infoTypeValue} </span>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE_ACTION, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE_ACTION, { name: \"deleteInstance\" })\r\n)(InfoType);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport InfoTypeCreationForm from \"../InfoTypeCreationForm\";\r\nimport InfoType from \"../InfoType\";\r\n\r\n// np__added_start unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nconst InfoTypesStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nclass InfoTypes extends Component {\r\n  state = {\r\n    selectedInfoTypeId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedInfoTypeId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedInfoTypeId: id });\r\n\r\n  render() {\r\n    const { screenId, infoTypes, refetchQueries, onUpdate } = this.props;\r\n    const { selectedInfoTypeId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {infoTypes.map((infoType) => (\r\n          <InfoType\r\n            key={v4()}\r\n            infoType={infoType}\r\n            selected={infoType.id === selectedInfoTypeId}\r\n            onUpdate={onUpdate}\r\n            parentId={screenId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        <br></br>\r\n        <InfoTypeCreationForm\r\n          parentId={screenId}\r\n          refetchQueries={refetchQueries}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoTypes;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_INFO_TYPE_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport InfoTypes from \"../InfoTypes\";\r\n\r\n// add styling here\r\nconst ScreenStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction Screen({\r\n  screen,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [screenValue, updateScreenValue] = useState(screen.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const infoTypeData =\r\n    screen.children &&\r\n    screen.children.find((child) => child.typeId === TYPE_INFO_TYPE_ID);\r\n  const infoTypes = infoTypeData ? infoTypeData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <ScreenStyleWrapper onClick={() => onSelect(screen.id)}>\r\n  //       {screenValue}\r\n  //     </ScreenStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleScreenValueChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleScreenValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: screenValue,\r\n          instanceId: screen.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  // if (isEditMode) {\r\n  //   return (\r\n  //     <ScreenStyleWrapper>\r\n  //       <EditInstanceForm\r\n  //         id={ screen.id }\r\n  //         label=\"Screen Value:\"\r\n  //         value={ screenValue }\r\n  //         onChange={handleScreenValueChange}\r\n  //         onSave={handleScreenValueSave}\r\n  //         onCancel={handleCancelEdit}\r\n  //         disabled={isSaving}\r\n  //       />\r\n  //     </ScreenStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: screen.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <ScreenStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {screenValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </ScreenStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div class=\"box\" selected={selected}>\r\n      <strong> {screenValue} </strong>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <InfoTypes\r\n        infoTypes={infoTypes}\r\n        screenId={screen.id}\r\n        label=\"InfoType?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE_ACTION, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE_ACTION, { name: \"deleteInstance\" })\r\n)(Screen);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport ScreenCreationForm from \"../ScreenCreationForm\";\r\nimport Screen from \"../Screen\";\r\n\r\n// np__added_start unit: appSpec, comp: Screens, loc: styling\r\n\r\nconst ScreensStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: Screens, loc: styling\r\n\r\nclass Screens extends Component {\r\n  state = {\r\n    selectedScreenId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedScreenId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedScreenId: id });\r\n\r\n  render() {\r\n    const { userTypeId, screens, refetchQueries, onUpdate } = this.props;\r\n    const { selectedScreenId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: Screens, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: Screens, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {screens.map((screen) => (\r\n          <Screen\r\n            key={v4()}\r\n            screen={screen}\r\n            selected={screen.id === selectedScreenId}\r\n            onUpdate={onUpdate}\r\n            parentId={userTypeId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        <br></br>\r\n        <ScreenCreationForm\r\n          parentId={userTypeId}\r\n          refetchQueries={refetchQueries}\r\n        />\r\n\r\n        {/* np__added_start unit: appSpec, comp: Screens, loc: renderEnding */}\r\n        {/* np__added_end unit: appSpec, comp: Screens, loc: renderEnding */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Screens;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_SCREEN_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport Screens from \"../Screens\";\r\n\r\n// add styling here\r\nconst UserTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction UserType({\r\n  userType,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [userTypeValue, updateUserTypeValue] = useState(userType.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const screenData =\r\n    userType.children &&\r\n    userType.children.find((child) => child.typeId === TYPE_SCREEN_ID);\r\n  const screens = screenData ? screenData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <UserTypeStyleWrapper onClick={() => onSelect(userType.id)}>\r\n  //       { userTypeValue }\r\n  //     </UserTypeStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleUserTypeValueChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleUserTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: userTypeValue,\r\n          instanceId: userType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <UserTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={userType.id}\r\n          label=\"UserType Value:\"\r\n          value={userTypeValue}\r\n          onChange={handleUserTypeValueChange}\r\n          onSave={handleUserTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: userType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <UserTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {userTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div class=\"box\" selected={selected}>\r\n      <strong> {userTypeValue} </strong>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <Screens\r\n        screens={screens}\r\n        userTypeId={userType.id}\r\n        label=\"Screen?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE_ACTION, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE_ACTION, { name: \"deleteInstance\" })\r\n)(UserType);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport UserTypeCreationForm from \"../UserTypeCreationForm\";\r\nimport UserType from \"../UserType\";\r\nimport { connect } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    counter: state.counter,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  increment,\r\n  decrement,\r\n};\r\n\r\nclass UserTypes extends Component {\r\n  state = {\r\n    selectedUserTypeId: null,\r\n  };\r\n  wrapperRef = createRef();\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedUserTypeId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedUserTypeId: id });\r\n\r\n  render() {\r\n    const { appId, userTypes, refetchQueries, onUpdate } = this.props;\r\n    const { selectedUserTypeId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: UserTypes, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: UserTypes, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n          {this.props.counter >= 2 ? (\r\n            <div>\r\n              {userTypes.map((userType) => (\r\n                <UserType\r\n                  key={v4()}\r\n                  userType={userType}\r\n                  selected={userType.id === selectedUserTypeId}\r\n                  onUpdate={onUpdate}\r\n                  parentId={appId}\r\n                  refetchQueries={refetchQueries}\r\n                  onSelect={this.handleSelect}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div> </div>\r\n          )}\r\n\r\n          <br></br>\r\n          {this.props.counter >= 1 ? (\r\n            <UserTypeCreationForm\r\n              parentId={appId}\r\n              refetchQueries={refetchQueries}\r\n            />\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTypes);\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction DescriptionCreationForm({\r\n  parentId,\r\n  createDescription,\r\n  refetchQueries,\r\n}) {\r\n  const [descriptionValue, updateDescriptionValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!descriptionValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createDescriptionResponse = await createDescription({\r\n      variables: {\r\n        actionId: CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: descriptionValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newDescriptionData = JSON.parse(\r\n      createDescriptionResponse.data.ExecuteAction\r\n    );\r\n\r\n    updateDescriptionValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <label htmlFor=\"description-value\">\r\n        Description:\r\n        <input\r\n          id=\"description-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={descriptionValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating Description...\" : \"Create Description\"}\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE_ACTION, { name: \"createDescription\" }))(\r\n  DescriptionCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\n// add styling here\r\nconst DescriptionStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction Description({\r\n  description,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [descriptionValue, updateDescriptionValue] = useState(\r\n    description.value\r\n  );\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  if (!selected) {\r\n    return (\r\n      <DescriptionStyleWrapper onClick={() => onSelect(description.id)}>\r\n        {descriptionValue}\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  function handleDescriptionValueChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleDescriptionValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: descriptionValue,\r\n          instanceId: description.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <DescriptionStyleWrapper>\r\n        <EditInstanceForm\r\n          id={description.id}\r\n          label=\"Description Value:\"\r\n          value={descriptionValue}\r\n          onChange={handleDescriptionValueChange}\r\n          onSave={handleDescriptionValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: description.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <DescriptionStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {descriptionValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DescriptionStyleWrapper selected={selected}>\r\n      {descriptionValue}\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n    </DescriptionStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE_ACTION, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE_ACTION, { name: \"deleteInstance\" })\r\n)(Description);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport DescriptionCreationForm from \"../DescriptionCreationForm\";\r\nimport Description from \"../Description\";\r\n\r\n// np__added_start unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nconst DescriptionsStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nclass Descriptions extends Component {\r\n  state = {\r\n    selectedDescriptionId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedDescriptionId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedDescriptionId: id });\r\n\r\n  render() {\r\n    const { appId, descriptions, refetchQueries, onUpdate } = this.props;\r\n    const { selectedDescriptionId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: Descriptions, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: Descriptions, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <> </>\r\n      // <DescriptionsStyleWrapper\r\n      //   ref={this.wrapperRef}\r\n      //   onClick={this.handleClick}\r\n      // >\r\n      //   {descriptions.map((description) => (\r\n      //     <Description\r\n      //       key={v4()}\r\n      //       description={description}\r\n      //       selected={description.id === selectedDescriptionId}\r\n      //       onUpdate={onUpdate}\r\n      //       parentId={appId}\r\n      //       refetchQueries={refetchQueries}\r\n      //       onSelect={this.handleSelect}\r\n      //     />\r\n      //   ))}\r\n\r\n      //   <DescriptionCreationForm\r\n      //     parentId={appId}\r\n      //     refetchQueries={refetchQueries}\r\n      //   />\r\n      //   {/* np__added_start unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n      //   {/* np__added_end unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n      // </DescriptionsStyleWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Descriptions;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_USER_TYPE_ID,\r\n  TYPE_DESCRIPTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport UserTypes from \"../UserTypes\";\r\nimport Descriptions from \"../Descriptions\";\r\n\r\n// add styling here\r\nconst div = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction App({\r\n  app,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [appValue, updateAppValue] = useState(app.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const userTypeData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_USER_TYPE_ID);\r\n  const userTypes = userTypeData ? userTypeData.instances : [];\r\n  const descriptionData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_DESCRIPTION_ID);\r\n  const descriptions = descriptionData ? descriptionData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <div onClick={() => onSelect(app.id)}>\r\n  //       {appValue}\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  function handleAppValueChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n\r\n  async function handleAppValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: appValue,\r\n          instanceId: app.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <div>\r\n        <EditInstanceForm\r\n          id={app.id}\r\n          label=\"App Value:\"\r\n          value={appValue}\r\n          onChange={handleAppValueChange}\r\n          onSave={handleAppValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: app.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <div selected={selected} isDeleting={isDeleting}>\r\n        {appValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div selected={selected} class=\"box\" style={{ minWidth: \"550px\" }}>\r\n      <div class=\"flex justify-between\">\r\n        <strong> {appValue} </strong>\r\n        <div> Description </div>\r\n      </div>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <UserTypes\r\n        userTypes={userTypes}\r\n        appId={app.id}\r\n        label=\"UserType?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n      <Descriptions\r\n        descriptions={descriptions}\r\n        appId={app.id}\r\n        label=\"Description?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE_ACTION, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE_ACTION, { name: \"deleteInstance\" })\r\n)(App);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 250px;\r\n\r\n  padding: 1em 0;\r\n\r\n  border: 1px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px 10px 10px 10px;\r\n  box-shadow: 10px 10px 8px -1px rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const ErrorContainer = styled.div`\r\n  font-size: 0.75rem;\r\n  color: tomato;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  \r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport { Row, ErrorContainer } from \"./RegistrationForm.style\";\r\n\r\nconst RegistrationField = ({\r\n  fieldLabel,\r\n  type,\r\n  name,\r\n  as,\r\n  placeholder,\r\n  options = [],\r\n  value\r\n}) => (\r\n  <Row>\r\n    {type !== \"checkbox\" && (\r\n      <label style={{ width: \"100%\" }}>\r\n        {!as && (\r\n          <Field\r\n            className=\"form__input\"\r\n            type={type}\r\n            name={name}\r\n            placeholder={placeholder}\r\n          />\r\n        )}\r\n        {as && (\r\n          <Field name={name} as={as} placeholder={placeholder}>\r\n            {options.length !== 0 &&\r\n              options.map((opt, index) => (\r\n                <option key={index} value={opt.value}>\r\n                  {opt.label}\r\n                </option>\r\n              ))}\r\n          </Field>\r\n        )}\r\n      </label>\r\n    )}\r\n    {type === \"checkbox\" && (\r\n      <Field name={name}>\r\n        {({ field, form }) => {\r\n          return (\r\n            <label>\r\n              <input {...field} type=\"checkbox\" />I agree to our\r\n              <b>\r\n                <a href=\"/terms-and-conditions\" target=\"_blank\">\r\n                  &nbsp; Terms of Use &nbsp;\r\n                </a>\r\n              </b>\r\n              and\r\n              <b>\r\n                <a href=\"/privacy-policy\" target=\"_blank\">\r\n                  &nbsp; Privacy Policy &nbsp;\r\n                </a>\r\n              </b>\r\n              by signing up\r\n            </label>\r\n          );\r\n        }}\r\n      </Field>\r\n    )}\r\n    <ErrorContainer>\r\n      <ErrorMessage name={name} />\r\n    </ErrorContainer>\r\n  </Row>\r\n);\r\n\r\nexport default RegistrationField;\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport { Wrapper, Row, ErrorContainer } from \"../RegistrationForm.style\";\r\nimport RegistrationField from \"../RegistrationField\";\r\n\r\nconst BasicDetailsForm = ({\r\n  initialValues,\r\n  validationSchema,\r\n  onSubmit,\r\n  formError,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ isSubmitting, isValid, dirty, isValidating }) => (\r\n          <Form className=\"form\">\r\n            {/* <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Username\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n              />\r\n            </div> */}\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"First Name\"\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Last Name\"\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n            </div>\r\n            {/* \r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"passwordConfirmation\"\r\n              />\r\n            </div> */}\r\n\r\n            <div className=\"\" style={{ marginTop: \"0.5em\" }}>\r\n              <RegistrationField\r\n                name=\"terms\"\r\n                type=\"checkbox\"\r\n                checked=\"false\"\r\n                fieldLabel=\"I agree to our Terms of Use and Privacy Policy by signing up\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <button\r\n                className=\"button button--yellow\"\r\n                type=\"submit\"\r\n                // disabled={isSubmitting || !isValid || isValidating || !dirty}\r\n              >\r\n                SIGN UP\r\n              </button>\r\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\r\n            </div>\r\n\r\n            <small>\r\n              Already have an account?\r\n              <a\r\n                href=\"javascript:void(0);\"\r\n                className=\"teal--text\"\r\n                onClick={props.onSwitch}\r\n              >\r\n                &nbsp;Log In\r\n              </a>\r\n            </small>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicDetailsForm;\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport { Wrapper, Row, ErrorContainer } from \"../RegistrationForm.style\";\r\nimport RegistrationField from \"../RegistrationField\";\r\n\r\nconst AppDetailsForm = ({\r\n  initialValues,\r\n  validationSchema,\r\n  onSubmit,\r\n  formError\r\n}) => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ isSubmitting, isValid, dirty, isValidating }) => (\r\n          <Form className=\"form\">\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"App Name:\"\r\n                type=\"text\"\r\n                name=\"app\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Description:\"\r\n                as=\"textarea\"\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n            <br></br>\r\n            <div className=\"\">\r\n              <RegistrationField\r\n                name=\"terms\"\r\n                type=\"checkbox\"\r\n                fieldLabel=\"I agree to our Terms of Use and Privacy Policy by signing up\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <button\r\n                className=\"button button--yellow\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting || !isValid || isValidating || !dirty}\r\n              >\r\n                MAKE MY APP NOW\r\n              </button>\r\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppDetailsForm;\r\n","import * as Yup from \"yup\";\r\nimport valid from \"card-validator\";\r\nimport moment from \"moment\";\r\n\r\nexport const validationSchemaBasic = Yup.object().shape({\r\n  // username: Yup.string()\r\n  //   .label('username')\r\n  //   .required('Please enter desired username.'),\r\n  firstName: Yup.string()\r\n    .label(\"firstName\")\r\n    .required(\"Please enter your first name.\"),\r\n  lastName: Yup.string()\r\n    .label(\"lastName\")\r\n    .required(\"Please enter your last name.\"),\r\n  email: Yup.string()\r\n    .label(\"email\")\r\n    .email(\"Enter a valid email.\")\r\n    .required(\"Please enter your email.\"),\r\n  terms: Yup.boolean()\r\n    .label(\"terms\")\r\n    .oneOf([true], \"Must Accept Terms and Conditions\")\r\n    .required(\"Please click agree on terms before you can proceed\"),\r\n  // password: Yup.string()\r\n  //   .label('password')\r\n  //   .matches(/[a-z]/, 'at least one lowercase char')\r\n  //   .matches(/[A-Z]/, 'at least one uppercase char')\r\n  //   .matches(/[a-zA-Z]+[^a-zA-Z\\s]+/, 'at least 1 number or special char (@,!,#, etc).')\r\n  //   .min(8, 'Must be at least 8 characters.')\r\n  //   .required('Please enter your desired password.'),\r\n  // passwordConfirmation: Yup.string()\r\n  //   .oneOf([Yup.ref('password'), '', null], 'Passwords must match.')\r\n  //   .required('Please confirm your password.'),\r\n});\r\n\r\nexport const validationSchemaApp = Yup.object().shape({\r\n  app: Yup.string().label(\"app\").required(\"Please enter desired app name.\"),\r\n  description: Yup.string()\r\n    .label(\"description\")\r\n    .required(\"Please enter app description.\"),\r\n  terms: Yup.boolean()\r\n    .label(\"terms\")\r\n    .oneOf([true], \"Must Accept Terms and Conditions\")\r\n    .required(\"Please click agree on terms before you can proceed\"),\r\n});\r\n\r\nexport const validationSchemaCreditCard = Yup.object().shape({\r\n  cardNumber: Yup.string()\r\n    .label(\"Card number\")\r\n    .max(16)\r\n    .test(\r\n      \"test-number\",\r\n      \"Credit Card number is invalid\",\r\n      (value) => valid.number(value).isValid\r\n    )\r\n    .required(),\r\n  cardName: Yup.string().label(\"Name on card\").required(),\r\n  cvc: Yup.string().label(\"CVC\").min(3).max(4).required(),\r\n  expiryMonth: Yup.string().label(\"Expiry month\").min(2).max(2).required(),\r\n  expiryYear: Yup.string().label(\"Expiry year\").min(4).max(4).required(),\r\n});\r\n\r\nexport const creditCardExpirationYear = () => {\r\n  const years = [];\r\n  const dateStart = moment();\r\n  const dateEnd = moment().add(10, \"y\");\r\n  while (dateEnd.diff(dateStart, \"years\") >= 0) {\r\n    const year = dateStart.format(\"YYYY\");\r\n    years.push({ value: year, label: year });\r\n    dateStart.add(1, \"year\");\r\n  }\r\n  return years;\r\n};\r\n\r\nexport const creditCardExpirationMonth = () => {\r\n  const months = [];\r\n  const dateStart = moment();\r\n  const dateEnd = moment().add(11, \"month\");\r\n  while (dateEnd.diff(dateStart, \"months\") >= 0) {\r\n    const monthNumber = dateStart.format(\"MM\");\r\n    const monthName = dateStart.format(\"MMMM\");\r\n    months.push({ value: monthNumber, label: monthName });\r\n    dateStart.add(1, \"month\");\r\n  }\r\n  return months;\r\n};\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport { Wrapper, Row, ErrorContainer } from \"../RegistrationForm.style\";\r\nimport RegistrationField from \"../RegistrationField\";\r\n\r\nimport {\r\n  creditCardExpirationMonth,\r\n  creditCardExpirationYear\r\n} from \"./registration-util.js\";\r\n\r\nconst CreditCardDetailsForm = ({\r\n  initialValues,\r\n  validationSchema,\r\n  onSubmit,\r\n  formError\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ isSubmitting, isValid, dirty, isValidating }) => (\r\n        <Form className=\"form\">\r\n          <div className=\"form__input\">\r\n            <RegistrationField\r\n              placeholder=\"Name on Card:\"\r\n              type=\"text\"\r\n              name=\"cardName\"\r\n            />\r\n          </div>\r\n          <div className=\"form__input flex-row\">\r\n            <div className=\"flex\">\r\n              <div className=\"form__input\" style={{ width: \"300px\" }}>\r\n                <RegistrationField\r\n                  placeholder=\"Card Number:\"\r\n                  type=\"text\"\r\n                  name=\"cardNumber\"\r\n                />\r\n              </div>\r\n              <div className=\"\" style={{ width: \"100px\", marginLeft: \"8px\" }}>\r\n                <RegistrationField placeholder=\"CVC:\" type=\"text\" name=\"cvc\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__input flex-row\">\r\n            <div className=\"flex items-center\">\r\n              <div>Expiration Date</div>\r\n\r\n              <div className=\"\" style={{ marginLeft: \"8px\" }}>\r\n                <RegistrationField\r\n                  placeholder=\"Month\"\r\n                  as=\"select\"\r\n                  name=\"expiryMonth\"\r\n                  options={creditCardExpirationMonth()}\r\n                />\r\n              </div>\r\n              <div className=\"\" style={{ marginLeft: \"8px\" }}>\r\n                <RegistrationField\r\n                  placeholder=\"Year\"\r\n                  as=\"select\"\r\n                  name=\"expiryYear\"\r\n                  options={creditCardExpirationYear()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form__input\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button button--yellow\"\r\n              disabled={isSubmitting || !isValid || isValidating || !dirty}\r\n            >\r\n              Sign Up!\r\n            </button>\r\n          </div>\r\n          {formError && <ErrorContainer>{formError}</ErrorContainer>}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default CreditCardDetailsForm;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { REGISTER_USER } from \"@nostack/no-stack\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\n\r\nimport { Wrapper } from \"./RegistrationForm.style\";\r\nimport BasicDetailsForm from \"./stepper/BasicDetailsForm\";\r\nimport AppDetailsForm from \"./stepper/AppDetailsForm.js\";\r\nimport CreditCardDetailsForm from \"./stepper/CreditCardDetailsForm\";\r\nimport Modal from \"../Modal\";\r\n\r\nimport {\r\n  validationSchemaBasic,\r\n  validationSchemaApp,\r\n  validationSchemaCreditCard,\r\n} from \"./stepper/registration-util.js\";\r\n\r\n// Get Current Month\r\nlet dt = new Date();\r\nlet mm = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\nlet yyyy = dt.getFullYear();\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  username: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  passwordConfirmation: \"\",\r\n  app: \"\",\r\n  description: \"\",\r\n  terms: false,\r\n  cardName: \"\",\r\n  cardNumber: \"\",\r\n  cvc: \"\",\r\n  expiryMonth: mm,\r\n  expiryYear: yyyy,\r\n};\r\n\r\nconst RegistrationForm = (props, { userClassId, onSuccess }) => {\r\n  const [register] = useMutation(REGISTER_USER);\r\n  const [registrationCompleted, setRegistrationCompleted] = useState(false);\r\n  const [formError, setFormError] = useState(\"\");\r\n\r\n  /*\r\n    A \"stepper\" is created and uses state to be sure that:\r\n     1. no child form is visible (haven't pushed \"submit\")\r\n     2. the child form (or it's child) is visible;\r\n     3. the submit has been pushed on the sequence of child forms, and it's time to call submit\r\n     4. The submission succeeded, and the final welcome message should be visible.\r\n   */\r\n  const [step, setStep] = useState(1);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [app, setApp] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  // const formValuesTemp =\r\n  //   '{\"app\":\"newApp\",\"description\":\"newApp Desc\",\"creditCardNumber\":\"232\",\"expirationDate\":\"234243\",\"csv\":\"46\"}';\r\n  const handleSubmit = async (values, { setSubmitting }) => {\r\n    setFormError(\"\");\r\n    // setUsername(values);\r\n\r\n    // console.log(app);\r\n    // console.log(description);\r\n    setFirstName(values.firstName);\r\n    setLastName(values.lastName);\r\n    setEmail(values.email);\r\n\r\n    // if (values.password !== values.passwordConfirmation) {\r\n    //   return;\r\n    // }\r\n    const formValuesTemp = {\r\n      app,\r\n      description,\r\n      creditCardNumber: values.cardNumber,\r\n      creditCardName: values.cardName,\r\n      expirationDate: `${values.expiryMonth}/${values.expiryYear}`,\r\n      csv: values.cvc,\r\n    };\r\n\r\n    try {\r\n      await register({\r\n        variables: {\r\n          userClassId: props.userClassId,\r\n          name: username,\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n          email: values.email,\r\n          password,\r\n          formValues: JSON.stringify({}),\r\n        },\r\n      });\r\n\r\n      setRegistrationCompleted(true);\r\n\r\n      if (onSuccess) {\r\n        nextStep();\r\n        onSuccess();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(error.graphQLErrors);\r\n\r\n      setFormError(\"Something went wrong. Please try again.\");\r\n    }\r\n\r\n    setSubmitting(false);\r\n  };\r\n\r\n  if (registrationCompleted) {\r\n    window.history.pushState(\r\n      { registered: \"success\" },\r\n      \"Registration Complete\",\r\n      \"?registered=success\"\r\n    );\r\n\r\n    // return (\r\n    //   <Modal onClose={props.onClose}>\r\n    //     <div className=\"dialog__title\">\r\n    //       <h3>Awesome, </h3>\r\n    //     </div>\r\n    //     <p className=\"text-center\">\r\n    //       <div>\r\n    //         <Link\r\n    //           onClick={props.onClose}\r\n    //           style={{ marginBottom: \"2em\" }}\r\n    //           className=\"button button--rounded button--yellow\"\r\n    //           to=\"/schedule\"\r\n    //         >\r\n    //           Schedule a Meeting\r\n    //         </Link>\r\n    //       </div>\r\n    //       <div>\r\n    //         <Link\r\n    //           onClick={props.onClose}\r\n    //           className=\"button button--rounded button--yellow\"\r\n    //           to=\"/contact?s=ny\"\r\n    //         >\r\n    //           Not Yet\r\n    //         </Link>\r\n    //       </div>\r\n    //     </p>\r\n    //   </Modal>\r\n    // );\r\n    return (\r\n      <Modal onClose={props.onClose} styleName=\"dialogConfirm\">\r\n        <div className=\"dialog__title\">\r\n          <img src=\"/images/mail.png\" />\r\n        </div>\r\n        <p className=\"text-center\">\r\n          <div>\r\n            <div style={{ margin: \"1.25em 0\", fontSize: \"18px\" }}>\r\n              {\" \"}\r\n              Confirm your email!{\" \"}\r\n            </div>\r\n            <p style={{ margin: \"1.25em 0\" }}>\r\n              Please check your email <strong> sample@gmail.com </strong> for a\r\n              message to confirm that it’s really you. Then you can log in.\r\n            </p>\r\n            <div>\r\n              <Link\r\n                onClick={props.onClose}\r\n                className=\"button button--rounded button--yellow\"\r\n                to=\"/schedule\"\r\n              >\r\n                LOGIN\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                style={{ marginTop: \"1em\" }}\r\n                onClick={props.onClose}\r\n                className=\"button button--rounded\"\r\n                to=\"/schedule\"\r\n              >\r\n                SEND AGAIN\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                style={{ marginTop: \"1em\" }}\r\n                onClick={props.onClose}\r\n                className=\"button button--rounded\"\r\n                to=\"/schedule\"\r\n              >\r\n                CHANGE EMAIL\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </p>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  const nextStep = () => {\r\n    setStep(step + 1);\r\n  };\r\n\r\n  const handleSubmitBasicForm = (values, { setSubmitting }) => {\r\n    console.log(values);\r\n    setFormError(\"\");\r\n    if (values.password !== values.passwordConfirmation) {\r\n      return;\r\n    }\r\n\r\n    setUsername(values.username);\r\n    setFirstName(values.firstName);\r\n    setLastName(values.lastName);\r\n    setEmail(values.email);\r\n    setPassword(values.password);\r\n    // setSubmitting(false);\r\n  };\r\n\r\n  const handleSubmitAppForm = (values, { setSubmitting }) => {\r\n    setFormError(\"\");\r\n    setApp(values.app);\r\n    setDescription(values.description);\r\n    setSubmitting(false);\r\n    nextStep();\r\n  };\r\n\r\n  const displayCurrentStep = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <BasicDetailsForm\r\n            onSwitch={props.onSwitch}\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchemaBasic}\r\n            // onSubmit={handleSubmitBasicForm}\r\n            onSubmit={handleSubmit}\r\n            formError={formError}\r\n          />\r\n        );\r\n\r\n      case 2:\r\n        return (\r\n          <AppDetailsForm\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchemaApp}\r\n            onSubmit={handleSubmitAppForm}\r\n            formError={formError}\r\n          />\r\n        );\r\n\r\n      case 3:\r\n        return (\r\n          <CreditCardDetailsForm\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchemaCreditCard}\r\n            onSubmit={handleSubmit}\r\n            formError={formError}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <BasicDetailsForm\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchemaBasic}\r\n            onSubmit={handleSubmitBasicForm}\r\n            formError={formError}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const displayCurrentDescription = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return {\r\n          enterText: \"ENTER DETAILS\",\r\n          buttonText: \"SIGN UP\",\r\n          progressWidth: \"33%\",\r\n        };\r\n\r\n      case 2:\r\n        return {\r\n          enterText: \"ENTER APP DESCRIPTION\",\r\n          buttonText: \"MAKE MY APP NOW\",\r\n          progressWidth: \"66%\",\r\n        };\r\n\r\n      case 3:\r\n        return {\r\n          enterText: \"CREDIT CARD DETAILS\",\r\n          buttonText: \"MAKE MY APP NOW\",\r\n          progressWidth: \"100%\",\r\n        };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        progress={displayCurrentDescription().progressWidth}\r\n        onClose={props.onClose}\r\n      >\r\n        <div className=\"dialog__title\">\r\n          {/* <div className=\"dialog__step\">\r\n            STEP <span className=\"teal--text\"> {step} </span> of 3\r\n          </div> */}\r\n          <h3>{displayCurrentDescription().enterText}</h3>\r\n        </div>\r\n        {step == 3 && (\r\n          <p className=\"dialog__text\">\r\n            You won’t be charged a thing until you commit to it explicitly. In\r\n            fact, the initial consultation is{\" \"}\r\n            <strong className=\"teal--text\">FREE</strong>.\r\n            <br />\r\n            <br />\r\n            We just need your credit card in advance to cover ourselves.\r\n          </p>\r\n        )}\r\n        {displayCurrentStep()}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst SendCodeForm = ({ onSubmit, onCancel, error, disabled }) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(email);\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault();\r\n\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Reset Password</h3>\r\n      <div>\r\n        Your Username/Email:\r\n        <input type=\"text\" onChange={handleChange} disabled={disabled} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" disabled={disabled || !email}>\r\n          Send Code\r\n        </button>\r\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {error && <div>{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SendCodeForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst ResetPasswordForm = ({ onSubmit, onCancel, disabled, error }) =>{\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [formError, setFormError] = useState('');\r\n\r\n  const handlePasswordChange = e => {\r\n    e.preventDefault();\r\n\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handlePasswordConfirmChange = e => {\r\n    e.preventDefault();\r\n\r\n    setPasswordConfirm(e.target.value);\r\n  };\r\n\r\n  const handleCodeChange = e => {\r\n    e.preventDefault();\r\n\r\n    setCode(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setFormError('');\r\n\r\n    if (password !== passwordConfirm) {\r\n      setFormError('New password and confirmation must match.');\r\n      return;\r\n    }\r\n\r\n    onSubmit(password, code);\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault();\r\n\r\n    onCancel();\r\n  }\r\n\r\n  const formIncomplete = !password || !passwordConfirm || !code;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Reset Password</h3>\r\n      <p>A password reset code has been sent to your email. Enter the code below.</p>\r\n      <div>\r\n        New Password:\r\n        <input type=\"password\" onChange={handlePasswordChange} disabled={disabled} />\r\n      </div>\r\n      <div>\r\n        Confirm Password:\r\n        <input \r\n          type=\"password\"\r\n          onChange={handlePasswordConfirmChange} \r\n          disabled={disabled} \r\n        />\r\n      </div>\r\n      <div>\r\n        Password Reset Code:\r\n        <input type=\"password\" onChange={handleCodeChange} disabled={disabled} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" disabled={disabled || formIncomplete}>Change Password</button>\r\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>Cancel</button>\r\n      </div>\r\n      {error && <div>{error}</div>}\r\n      {formError && <div>{formError}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","import React, { useState } from 'react';\r\nimport { graphql } from '@apollo/react-hoc';\r\nimport compose from '@shopify/react-compose';\r\nimport styled from 'styled-components';\r\nimport { withNoStack, FORGOT_PASSWORD, RESET_PASSWORD } from '@nostack/no-stack';\r\n\r\nimport SendCodeForm from './SendCodeForm';\r\nimport ResetPasswordForm from './ResetPasswordForm';\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  text-decoration: underline;\r\n  background: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst ForgotPasswordButton = ({ getPasswordResetCode, resetPassword, platformId }) => {\r\n  const [formVisible, setFormVisible] = useState(false);\r\n  const [userNameOrEmail, setUsernameOrEmail] = useState('');\r\n  const [passwordReset, setPasswordReset] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const showForm = () => setFormVisible(true);\r\n\r\n  const hideForm = () => {\r\n    setError('');\r\n    setSubmitting(false);\r\n    setPasswordReset(false);\r\n    setFormVisible(false);\r\n    setUsernameOrEmail('');\r\n  };\r\n\r\n  const handleEmailSubmit = async userNameOrEmail => {\r\n    setError('');\r\n    setSubmitting(true);\r\n    \r\n    try {\r\n      await getPasswordResetCode({\r\n        variables: {\r\n          userNameOrEmail,\r\n          stackId: platformId,\r\n        },\r\n      });\r\n\r\n      setUsernameOrEmail(userNameOrEmail);\r\n    } catch (e) {\r\n      setError('Something went wrong. Please try again.');\r\n    }\r\n\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const handlePasswordSubmit = async (password, code) => {\r\n    setError('');\r\n    setSubmitting(true);\r\n\r\n    try {\r\n      await resetPassword({\r\n        variables: {\r\n          userNameOrEmail, \r\n          password,\r\n          code,\r\n          stackId: platformId,\r\n        },\r\n      });\r\n\r\n      setPasswordReset(true);\r\n    } catch (e) {\r\n      setError('Something went wrong. Please try again.');\r\n    }\r\n\r\n    setSubmitting(false);\r\n  };\r\n\r\n  if (!formVisible) {\r\n    return (\r\n      <Button type=\"button\" onClick={showForm}>\r\n        Forgot Password?\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  if (!userNameOrEmail) {\r\n    return (\r\n      <SendCodeForm \r\n        onSubmit={handleEmailSubmit}\r\n        onCancel={hideForm} \r\n        disabled={submitting}\r\n        error={error}\r\n      /> \r\n    );\r\n  }\r\n\r\n  if (userNameOrEmail && !passwordReset) {\r\n    return (\r\n      <ResetPasswordForm\r\n        onSubmit={handlePasswordSubmit}\r\n        onCancel={hideForm} \r\n        disabled={submitting}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <p>\r\n      Your password has been reset. You may now login.\r\n      <Button type=\"button\" onClick={hideForm}>Ok.</Button>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  graphql(FORGOT_PASSWORD, { name: 'getPasswordResetCode' }),\r\n  graphql(RESET_PASSWORD, { name: 'resetPassword' }),\r\n  withNoStack,\r\n)(ForgotPasswordButton);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"../Modal\";\r\nimport { withNoStack } from \"@nostack/no-stack\";\r\n\r\nimport ForgotPasswordButton from \"../ForgotPasswordButton\";\r\n\r\nconst LoginForm = ({ onSwitch, loading, currentUser, login, onClose }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  if (loading || currentUser) {\r\n    return null;\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      await login({\r\n        username,\r\n        password,\r\n      });\r\n    } catch (error) {\r\n      setError(\r\n        error.message ||\r\n          (error.graphQLErrors &&\r\n            error.graphQLErrors.length &&\r\n            error.graphQLErrors[0]) ||\r\n          error\r\n      );\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={onClose}>\r\n      <div className=\"dialog__title\">\r\n        <img\r\n          src=\"http://pivotatestaticassets.com/images/Pivotate Logo.svg\"\r\n          width=\"170\"\r\n        />\r\n        <h3>LOGIN</h3>\r\n      </div>\r\n      <form\r\n        autofill=\"false\"\r\n        method=\"post\"\r\n        onSubmit={handleSubmit}\r\n        className=\"form\"\r\n      >\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"nostack-username\">\r\n            <input\r\n              id=\"nostack-username\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              disabled={isSubmitting}\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"nostack-password\">\r\n            <input\r\n              id=\"nostack-password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              disabled={isSubmitting}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form__input\">\r\n          <button\r\n            className=\"button button--yellow\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting || !username || !password}\r\n          >\r\n            Log In\r\n          </button>\r\n        </div>\r\n        {error && (\r\n          <div className=\"form__input\">\r\n            {\" \"}\r\n            You have entered an invalid username or password{\" \"}\r\n          </div>\r\n        )}\r\n\r\n        <br />\r\n        {/* <div>\r\n          <small>or</small>\r\n        </div> */}\r\n        {/* Temporarility Hide Social icons */}\r\n        {/* <div className=\"flex justify-space-between\">\r\n          <button type=\"button\" className=\"button button--fb\">\r\n            Log in with\r\n            <img className=\"social-icon\" height=\"14\" src=\"http://pivotatestaticassets.com/images/facebook.png\" />\r\n          </button>\r\n          <div style={{ width: \"50px\" }}></div>\r\n          <button type=\"button\" className=\"button button--google\">\r\n            Log in with\r\n            <img className=\"social-icon\" height=\"14\" src=\"http://pivotatestaticassets.com/images/google plus.png\" />\r\n          </button>\r\n        </div> */}\r\n        <br />\r\n        <small>\r\n          Dont have an account?\r\n          <a\r\n            href=\"javascript:void(0);\"\r\n            className=\"teal--text\"\r\n            onClick={onSwitch}\r\n          >\r\n            &nbsp; Sign Up\r\n          </a>\r\n        </small>\r\n      </form>\r\n      {/* <div className=\"form__input\">\r\n        <ForgotPasswordButton />\r\n      </div> */}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default withNoStack(LoginForm);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { Unit } from \"@nostack/no-stack\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\nimport { withNoStack } from \"@nostack/no-stack\";\r\n\r\nimport { flattenData } from \"../../flattenData\";\r\n\r\nimport AppCreationForm from \"../AppSpec/AppCreationForm\";\r\nimport App from \"../AppSpec/App\";\r\n\r\nimport { SOURCE_APP_SPEC_ID } from \"../../config\";\r\nimport {\r\n  APP_SPEC_RELATIONSHIPS,\r\n  SOURCE_APP_SPEC_QUERY,\r\n} from \"../source-props/appSpec\";\r\n\r\n// np__added_start unit: appSpec2, comp: Apps, loc: styling\r\n\r\n// add styling here\r\nconst AppsStyleWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n// np__added_end unit: appSpec2, comp: Apps, loc: styling\r\n\r\nclass Apps extends Component {\r\n  // np__added_start unit: appSpec2, comp: Apps, loc: beginning\r\n  // np__added_end unit: appSpec2, comp: Apps, loc: beginning\r\n  state = {\r\n    selectedAppId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedAppId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedAppId: id });\r\n\r\n  render() {\r\n    const customerId = \"2ea51c4a-c072-4797-9de7-4bec0fc11db3\";\r\n    const { selectedAppId } = this.state;\r\n\r\n    const parameters = {\r\n      currentCustomer: customerId,\r\n    };\r\n\r\n    return (\r\n      <Unit\r\n        id={SOURCE_APP_SPEC_ID}\r\n        typeRelationships={APP_SPEC_RELATIONSHIPS}\r\n        query={SOURCE_APP_SPEC_QUERY}\r\n        parameters={parameters}\r\n      >\r\n        {({ loading, error, data, refetchQueries }) => {\r\n          if (loading) return \"Loading...\";\r\n\r\n          if (error) {\r\n            console.error(error);\r\n            return `Error: ${error.graphQLErrors}`;\r\n          }\r\n\r\n          const apps = data.unitData.map((el) => flattenData(el));\r\n\r\n          return (\r\n            <>\r\n              <div class=\"box\">\r\n                <div class=\"flex flex-column\">\r\n                  {apps &&\r\n                    apps.map((app, i) => (\r\n                      <App\r\n                        key={v4()}\r\n                        parentId={customerId}\r\n                        app={app}\r\n                        selected={app.id === selectedAppId}\r\n                        refetchQueries={refetchQueries}\r\n                        onSelect={this.handleSelect}\r\n                      />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n            </>\r\n          );\r\n        }}\r\n      </Unit>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withNoStack(Apps);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { Unit } from \"@nostack/no-stack\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\nimport { withNoStack } from \"@nostack/no-stack\";\r\n\r\nimport { flattenData } from \"../../flattenData\";\r\n\r\nimport AppCreationForm from \"../AppSpec/AppCreationForm\";\r\nimport App from \"../AppSpec/App\";\r\n\r\nimport { SOURCE_APP_SPEC_ID } from \"../../config\";\r\nimport {\r\n  APP_SPEC_RELATIONSHIPS,\r\n  SOURCE_APP_SPEC_QUERY,\r\n} from \"../source-props/appSpec\";\r\n\r\n// np__added_start unit: appSpec, comp: Apps, loc: styling\r\n\r\n// add styling here\r\nconst AppsStyleWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n// np__added_end unit: appSpec, comp: Apps, loc: styling\r\n\r\nclass Apps extends Component {\r\n  // np__added_start unit: appSpec, comp: Apps, loc: beginning\r\n  // np__added_end unit: appSpec, comp: Apps, loc: beginning\r\n  state = {\r\n    selectedAppId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedAppId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedAppId: id });\r\n\r\n  render() {\r\n    const customerId = \"2ea51c4a-c072-4797-9de7-4bec0fc11db3\";\r\n    const { selectedAppId } = this.state;\r\n\r\n    const parameters = {\r\n      currentCustomer: customerId,\r\n    };\r\n\r\n    return (\r\n      <Unit\r\n        id={SOURCE_APP_SPEC_ID}\r\n        typeRelationships={APP_SPEC_RELATIONSHIPS}\r\n        query={SOURCE_APP_SPEC_QUERY}\r\n        parameters={parameters}\r\n      >\r\n        {({ loading, error, data, refetchQueries }) => {\r\n          if (loading) return \"Loading...\";\r\n\r\n          if (error) {\r\n            console.error(error);\r\n            return `Error: ${error.graphQLErrors}`;\r\n          }\r\n\r\n          const apps = data.unitData.map((el) => flattenData(el));\r\n\r\n          return (\r\n            <>\r\n              <div class=\"box\">\r\n                <div class=\"flex flex-column\">\r\n                  {apps &&\r\n                    apps.map((app, i) => (\r\n                      <App\r\n                        key={v4()}\r\n                        parentId={customerId}\r\n                        app={app}\r\n                        selected={app.id === selectedAppId}\r\n                        refetchQueries={refetchQueries}\r\n                        onSelect={this.handleSelect}\r\n                      />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n            </>\r\n          );\r\n        }}\r\n      </Unit>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withNoStack(Apps);\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MenuContainer = styled.div`\r\n  padding: 1em;\r\n  border: 1px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n  box-shadow: 10px 10px 8px rgba(0, 0, 0, 0.6);\r\n\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Button = styled.button(({ selected }) => `\r\n  font-size: 1.25em;\r\n  background-color: #ffffff;\r\n  opacity: ${selected ? 1.0 : 0.5};\r\n  border: none;\r\n  padding: 5px;\r\n  cursor: ${selected ? 'initial' : 'pointer'};\r\n  transition: opacity 0.5s ease;\r\n\r\n  &:hover {\r\n    opacity: 1.0;\r\n    text-decoration: underline;\r\n  }\r\n`);\r\n\r\nconst AuthTabs = ({ menuTitles, children }) => {\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <MenuContainer>\r\n        {menuTitles.map((title, index) => (\r\n          <Button\r\n            key={index}\r\n            selected={index === selectedTab}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              setSelectedTab(index);\r\n            }}\r\n          >\r\n            {title}\r\n          </Button>\r\n        ))}\r\n      </MenuContainer>\r\n      <div>\r\n        {React.Children.map(children, (child, index) => {\r\n          if (index !== selectedTab) {\r\n            return null;\r\n          }\r\n\r\n          return (\r\n            <div className=\"test\" key={index}>{child}</div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthTabs;\r\n","import React, { Component, createRef } from \"react\";\r\nimport { Unit } from \"@nostack/no-stack\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport { flattenData } from \"../../../flattenData\";\r\n\r\nimport AppCreationForm from \"../AppCreationForm\";\r\nimport App from \"../App\";\r\nimport { connect } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nimport { SOURCE_APP_SPEC_ID } from \"../../../config\";\r\nimport {\r\n  APP_SPEC_RELATIONSHIPS,\r\n  SOURCE_APP_SPEC_QUERY,\r\n} from \"../../source-props/appSpec\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    counter: state.counter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  increment,\r\n};\r\n// np__added_start unit: appSpec, comp: Apps, loc: styling\r\n\r\n// add styling here\r\nconst AppsStyleWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n// np__added_end unit: appSpec, comp: Apps, loc: styling\r\n\r\nclass Apps extends Component {\r\n  // np__added_start unit: appSpec, comp: Apps, loc: beginning\r\n  // np__added_end unit: appSpec, comp: Apps, loc: beginning\r\n  state = {\r\n    selectedAppId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedAppId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedAppId: id });\r\n\r\n  render() {\r\n    const { customerId } = this.props;\r\n    const { selectedAppId } = this.state;\r\n\r\n    const parameters = {\r\n      currentCustomer: customerId,\r\n    };\r\n\r\n    return (\r\n      <Unit\r\n        id={SOURCE_APP_SPEC_ID}\r\n        typeRelationships={APP_SPEC_RELATIONSHIPS}\r\n        query={SOURCE_APP_SPEC_QUERY}\r\n        parameters={parameters}\r\n      >\r\n        {({ loading, error, data, refetchQueries }) => {\r\n          if (loading) return \"Loading...\";\r\n\r\n          if (error) {\r\n            console.error(error);\r\n            return `Error: ${error.graphQLErrors}`;\r\n          }\r\n\r\n          const apps = data.unitData.map((el) => flattenData(el));\r\n\r\n          return (\r\n            <div style={{ maxWidth: \"769px\" }}>\r\n              {this.props.counter == 0 ? (\r\n                <AppCreationForm\r\n                  customerId={customerId}\r\n                  refetchQueries={refetchQueries}\r\n                />\r\n              ) : (\r\n                <div> </div>\r\n              )}\r\n              {this.props.counter >= 1 ? (\r\n                <AppsStyleWrapper\r\n                  ref={this.wrapperRef}\r\n                  onClick={this.handleClick}\r\n                >\r\n                  {apps &&\r\n                    apps.map((app) => (\r\n                      <App\r\n                        key={v4()}\r\n                        parentId={customerId}\r\n                        app={app}\r\n                        selected={app.id === selectedAppId}\r\n                        refetchQueries={refetchQueries}\r\n                        onSelect={this.handleSelect}\r\n                      />\r\n                    ))}\r\n                </AppsStyleWrapper>\r\n              ) : (\r\n                <div> </div>\r\n              )}\r\n              {/* np__added_start unit: appSpec, comp: Apps, loc: renderEnding */}\r\n              {/* np__added_end unit: appSpec, comp: Apps, loc: renderEnding */}\r\n            </div>\r\n          );\r\n        }}\r\n      </Unit>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Apps);\r\n","import React, { useState } from \"react\";\r\nimport { withNoStack } from \"@nostack/no-stack\";\r\nimport { NoStackConsumer } from \"@nostack/no-stack\";\r\nimport Apps from \"../AppSpec/Apps\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../actions\";\r\n\r\nconst meetingApp = ({ loading, currentUser, login, jumpToStep }) => {\r\n  const onNext = () => {\r\n    jumpToStep(1);\r\n  };\r\n\r\n  // const mapDispatchToProps = (dispatch) => {\r\n  //   dispatch({\r\n  //     type: \"SEARCHTERMCHANGE\",\r\n  //     payLoad: {\r\n  //       userId: \"1\",\r\n  //       sample: \"wew\",\r\n  //     },\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Apps customerId={currentUser.id} onNext={() => onNext()}></Apps>\r\n      {/* <button onClick={() => dispatch(increment())}>+</button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withNoStack(meetingApp);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NoStackConsumer } from \"@nostack/no-stack\";\r\n\r\nimport { PLATFORM_ID, TYPE_CUSTOMER_ID } from \"../../../config\";\r\n\r\nimport AuthTabs from \"../../AuthTabs\";\r\nimport CreateApp from \"../../meetingSteps/createApp\";\r\nimport UserType from \"../../meetingSteps/createUserType\";\r\nimport JobSeeker from \"../../meetingSteps/jobSeeker\";\r\nimport LoginForm from \"../../LoginForm\";\r\nimport RegistrationForm from \"../../RegistrationForm\";\r\nimport Apps from \"../../AppSpec/Apps\";\r\nimport StepZilla from \"react-stepzilla\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 5em 5em;\r\n  min-width: 480px;\r\n`;\r\n\r\nconst LoginWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst App = ({ loading, currentUser, login }) => {\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {/* <NavBar /> */}\r\n      <Wrapper className=\"App\" style={{ backgroundColor: \"#f7f7f7\" }}>\r\n        <NoStackConsumer>\r\n          {({ loading, currentUser }) => {\r\n            if (loading) return null;\r\n\r\n            if (!currentUser) {\r\n              return (\r\n                <LoginWrapper>\r\n                  <AuthTabs menuTitles={[\"Login\", \"Register\"]}>\r\n                    <LoginForm />\r\n                    <RegistrationForm\r\n                      platformId={PLATFORM_ID}\r\n                      userClassId={TYPE_CUSTOMER_ID}\r\n                    />\r\n                  </AuthTabs>\r\n                </LoginWrapper>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <>\r\n                {/* <button onClick={() => dispatch(increment())}>+</button>\r\n                <button onClick={() => dispatch(decrement())}>-</button>\r\n               Step: {counter} */}\r\n                <div className=\"step-progress\">\r\n                  <div class=\"flex justify-center\">\r\n                    <Apps customerId={currentUser.id}> </Apps>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          }}\r\n        </NoStackConsumer>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}