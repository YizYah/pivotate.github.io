{"version":3,"sources":["components/NavBar/index.js","components/AuthTabs/index.js","components/ForgotPasswordButton/SendCodeForm.js","components/ForgotPasswordButton/ResetPasswordForm.js","components/ForgotPasswordButton/index.js","components/LoginForm/index.js","components/RegistrationForm/RegistrationForm.style.js","components/RegistrationForm/RegistrationField.js","components/RegistrationForm/stepper/BasicDetailsForm.js","components/RegistrationForm/stepper/AppDetailsForm.js","components/RegistrationForm/stepper/registration-util.js","components/RegistrationForm/stepper/CreditCardDetailsForm.js","components/RegistrationForm/index.js","flattenData/index.js","components/AppInfo/AppCreationForm/index.js","components/EditInstanceForm/index.js","components/DeleteInstanceMenu/index.js","components/AppInfo/DescriptionCreationForm/index.js","components/AppInfo/Description/index.js","config/index.js","components/AppInfo/Descriptions/index.js","components/AppInfo/App/index.js","components/source-props/appInfo.js","components/AppInfo/Apps/index.js","components/SampleForm/index.js","components/FormSuccess/index.js","components/FormModal/index.js","components/FormToggle/index.js","App.js","serviceWorker.js","client/index.js","index.js"],"names":["Wrapper","styled","div","NavBar","MenuContainer","Button","button","selected","AuthTabs","menuTitles","children","useState","selectedTab","setSelectedTab","map","title","index","key","onClick","e","preventDefault","React","Children","child","className","SendCodeForm","onSubmit","onCancel","error","disabled","email","setEmail","type","onChange","target","value","ResetPasswordForm","password","setPassword","passwordConfirm","setPasswordConfirm","code","setCode","formError","setFormError","formIncomplete","compose","graphql","FORGOT_PASSWORD","name","RESET_PASSWORD","withNoStack","getPasswordResetCode","resetPassword","platformId","formVisible","setFormVisible","userNameOrEmail","setUsernameOrEmail","passwordReset","setPasswordReset","setError","submitting","setSubmitting","hideForm","a","async","variables","stackId","Row","loading","currentUser","login","username","setUsername","isSubmitting","setIsSubmitting","message","graphQLErrors","length","htmlFor","id","ErrorContainer","RegistrationField","fieldLabel","as","placeholder","options","opt","label","field","form","BasicDetailsForm","initialValues","validationSchema","isValid","dirty","isValidating","AppDetailsForm","validationSchemaBasic","Yup","shape","required","firstName","lastName","matches","min","passwordConfirmation","oneOf","validationSchemaApp","app","description","terms","validationSchemaCreditCard","cardNumber","max","test","valid","number","cardName","cvc","expiryMonth","expiryYear","creditCardExpirationYear","years","dateStart","moment","dateEnd","add","diff","year","format","push","creditCardExpirationMonth","months","monthNumber","monthName","CreditCardDetailsForm","RegistrationForm","userClassId","onSuccess","useMutation","REGISTER_USER","register","registrationCompleted","setRegistrationCompleted","step","setStep","setFirstName","setLastName","setApp","setDescription","handleSubmit","values","formValuesTemp","creditCardNumber","creditCardName","expirationDate","csv","formValues","console","log","nextStep","handleSubmitBasicForm","handleSubmitAppForm","displayCurrentStep","flattenData","element","flatData","instance","filter","typeId","instances","flattenChildData","Form","EXECUTE_ACTION","customerId","createApp","refetchQueries","appValue","updateAppValue","updateLoading","onKeyPress","charCode","props","hoverColor","EditInstanceForm","onSave","Container","DeleteInstanceMenu","onDelete","parentId","createDescription","descriptionValue","updateDescriptionValue","DescriptionStyleWrapper","isDeleting","updateInstance","deleteInstance","onSelect","isEditMode","updateIsEditMode","isSaving","updateIsSaving","isDeleteMode","updateIsDeleteMode","updateIsDeleting","actionId","executionParameters","JSON","stringify","instanceId","parentInstanceId","DescriptionsStyleWrapper","Descriptions","state","selectedDescriptionId","wrapperRef","createRef","handleClick","node","current","contains","setState","handleSelect","document","addEventListener","this","removeEventListener","appId","descriptions","onUpdate","ref","v4","Component","AppStyleWrapper","descriptionData","find","SOURCE_REGISTRATION_INFO_QUERY","gql","REGISTRATION_INFO_RELATIONSHIPS","AppsStyleWrapper","Apps","selectedAppId","parameters","ignoredParameter","typeRelationships","query","data","apps","unitData","el","BareForm","p","Error","Field","BareField","Label","SubmitButton","CancelButton","EXECUTE","submitForm","successView","isCompleted","setIsCompleted","handleCancel","unrestricted","Execute","FormSuccess","onDismiss","modalStyle","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","getElementById","FormModal","isModalVisible","setIsModalVisible","closeModal","isOpen","onRequestClose","contentLabel","style","FormToggle","LoginWrapper","App","Boolean","window","location","hostname","match","authLink","createAuthLink","link","ApolloLink","from","httpLink","ApolloClient","cache","InMemoryCache","dataIdFromObject","object","__typename","ReactDOM","render","client","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f3bfbcb.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { LogoutButton } from '@nostack/no-stack';\n\n// change styling here\nconst Wrapper = styled.div`\n  left: 0;\n  top: 0;\n  padding: 1em 3em;\n  font-size: 1rem;\n  color: #fffff0;\n  background-color: #00000f;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst NavBar = () => (\n  <Wrapper>\n    <div>formstack</div>\n    <div>\n      <LogoutButton />\n    </div>\n  </Wrapper>\n);\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst MenuContainer = styled.div`\n  padding: 1em;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  box-shadow: 10px 10px 8px rgba(0, 0, 0, 0.6);\n\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button(({ selected }) => `\n  font-size: 1.25em;\n  background-color: #ffffff;\n  opacity: ${selected ? 1.0 : 0.5};\n  border: none;\n  padding: 5px;\n  cursor: ${selected ? 'initial' : 'pointer'};\n  transition: opacity 0.5s ease;\n\n  &:hover {\n    opacity: 1.0;\n    text-decoration: underline;\n  }\n`);\n\nconst AuthTabs = ({ menuTitles, children }) => {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <div>\n      <MenuContainer>\n        {menuTitles.map((title, index) => (\n          <Button\n            key={index}\n            selected={index === selectedTab}\n            onClick={e => {\n              e.preventDefault();\n              setSelectedTab(index);\n            }}\n          >\n            {title}\n          </Button>\n        ))}\n      </MenuContainer>\n      <div>\n        {React.Children.map(children, (child, index) => {\n          if (index !== selectedTab) {\n            return null;\n          }\n\n          return (\n            <div className=\"test\" key={index}>{child}</div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default AuthTabs;\n","import React, { useState } from 'react';\n\nconst SendCodeForm = ({ onSubmit, onCancel, error, disabled }) => {\n  const [email, setEmail] = useState('');\n\n  const handleChange = e => {\n    e.preventDefault();\n\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(email);\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n\n    onCancel();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Reset Password</h3>\n      <div>\n        Your Username/Email:\n        <input type=\"text\" onChange={handleChange} disabled={disabled} />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={disabled || !email}>\n          Send Code\n        </button>\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>\n          Cancel\n        </button>\n      </div>\n      {error && <div>{error}</div>}\n    </form>\n  );\n};\n\nexport default SendCodeForm;\n","import React, { useState } from 'react';\n\nconst ResetPasswordForm = ({ onSubmit, onCancel, disabled, error }) =>{\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [code, setCode] = useState('');\n  const [formError, setFormError] = useState('');\n\n  const handlePasswordChange = e => {\n    e.preventDefault();\n\n    setPassword(e.target.value);\n  };\n\n  const handlePasswordConfirmChange = e => {\n    e.preventDefault();\n\n    setPasswordConfirm(e.target.value);\n  };\n\n  const handleCodeChange = e => {\n    e.preventDefault();\n\n    setCode(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setFormError('');\n\n    if (password !== passwordConfirm) {\n      setFormError('New password and confirmation must match.');\n      return;\n    }\n\n    onSubmit(password, code);\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n\n    onCancel();\n  }\n\n  const formIncomplete = !password || !passwordConfirm || !code;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Reset Password</h3>\n      <p>A password reset code has been sent to your email. Enter the code below.</p>\n      <div>\n        New Password:\n        <input type=\"password\" onChange={handlePasswordChange} disabled={disabled} />\n      </div>\n      <div>\n        Confirm Password:\n        <input \n          type=\"password\"\n          onChange={handlePasswordConfirmChange} \n          disabled={disabled} \n        />\n      </div>\n      <div>\n        Password Reset Code:\n        <input type=\"password\" onChange={handleCodeChange} disabled={disabled} />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={disabled || formIncomplete}>Change Password</button>\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>Cancel</button>\n      </div>\n      {error && <div>{error}</div>}\n      {formError && <div>{formError}</div>}\n    </form>\n  );\n};\n\nexport default ResetPasswordForm;\n","import React, { useState } from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport compose from '@shopify/react-compose';\nimport styled from 'styled-components';\nimport { withNoStack, FORGOT_PASSWORD, RESET_PASSWORD } from '@nostack/no-stack';\n\nimport SendCodeForm from './SendCodeForm';\nimport ResetPasswordForm from './ResetPasswordForm';\n\nconst Button = styled.button`\n  border: none;\n  text-decoration: underline;\n  background: none;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nconst ForgotPasswordButton = ({ getPasswordResetCode, resetPassword, platformId }) => {\n  const [formVisible, setFormVisible] = useState(false);\n  const [userNameOrEmail, setUsernameOrEmail] = useState('');\n  const [passwordReset, setPasswordReset] = useState(false);\n  const [error, setError] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const showForm = () => setFormVisible(true);\n\n  const hideForm = () => {\n    setError('');\n    setSubmitting(false);\n    setPasswordReset(false);\n    setFormVisible(false);\n    setUsernameOrEmail('');\n  };\n\n  const handleEmailSubmit = async userNameOrEmail => {\n    setError('');\n    setSubmitting(true);\n    \n    try {\n      await getPasswordResetCode({\n        variables: {\n          userNameOrEmail,\n          stackId: platformId,\n        },\n      });\n\n      setUsernameOrEmail(userNameOrEmail);\n    } catch (e) {\n      setError('Something went wrong. Please try again.');\n    }\n\n    setSubmitting(false);\n  };\n\n  const handlePasswordSubmit = async (password, code) => {\n    setError('');\n    setSubmitting(true);\n\n    try {\n      await resetPassword({\n        variables: {\n          userNameOrEmail, \n          password,\n          code,\n          stackId: platformId,\n        },\n      });\n\n      setPasswordReset(true);\n    } catch (e) {\n      setError('Something went wrong. Please try again.');\n    }\n\n    setSubmitting(false);\n  };\n\n  if (!formVisible) {\n    return (\n      <Button type=\"button\" onClick={showForm}>\n        Forgot Password?\n      </Button>\n    );\n  }\n\n  if (!userNameOrEmail) {\n    return (\n      <SendCodeForm \n        onSubmit={handleEmailSubmit}\n        onCancel={hideForm} \n        disabled={submitting}\n        error={error}\n      /> \n    );\n  }\n\n  if (userNameOrEmail && !passwordReset) {\n    return (\n      <ResetPasswordForm\n        onSubmit={handlePasswordSubmit}\n        onCancel={hideForm} \n        disabled={submitting}\n        error={error}\n      />\n    );\n  }\n\n  return (\n    <p>\n      Your password has been reset. You may now login.\n      <Button type=\"button\" onClick={hideForm}>Ok.</Button>\n    </p>\n  );\n};\n\nexport default compose(\n  graphql(FORGOT_PASSWORD, { name: 'getPasswordResetCode' }),\n  graphql(RESET_PASSWORD, { name: 'resetPassword' }),\n  withNoStack,\n)(ForgotPasswordButton);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { withNoStack } from '@nostack/no-stack';\n\nimport ForgotPasswordButton from '../ForgotPasswordButton';\n\nconst Wrapper = styled.div`\n  width: 250px;\n\n  padding: 1em 0;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px 10px 10px 10px;\n  box-shadow: 10px 10px 8px -1px rgba(0, 0, 0, 0.6);\n`;\n\nconst Row = styled.div`\n  margin: 0.5em;\n  padding: 0.5em;\n  text-align: center;\n\n  input {\n    display: block;\n    margin: 0.5em auto;\n    width: 80%;\n  }\n`;\n\nconst LoginForm = ({ loading, currentUser, login }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n\n  if (loading || currentUser) {\n    return null;\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    setIsSubmitting(true);\n\n    try {\n      await login({\n        username,\n        password,\n      });\n    } catch (error) {\n      setError(\n        error.message ||\n        (error.graphQLErrors &&\n          error.graphQLErrors.length &&\n          error.graphQLErrors[0]) ||\n        error,\n      );\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <Row>\n          <label htmlFor=\"nostack-username\">\n            Username:\n            <input\n              id=\"nostack-username\"\n              type=\"text\"\n              name=\"username\"\n              disabled={isSubmitting}\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n          </label>\n        </Row>\n        <Row>\n          <label htmlFor=\"nostack-password\">\n            Password:\n            <input\n              id=\"nostack-password\"\n              type=\"password\"\n              name=\"password\"\n              disabled={isSubmitting}\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n          </label>\n        </Row>\n        <Row>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting || !username || !password}\n          >\n            Log In\n          </button>\n        </Row>\n        {error && <Row>{error}</Row>}\n      </form>\n      <Row>\n        <ForgotPasswordButton />\n      </Row>\n    </Wrapper>\n  );\n}\n\nexport default withNoStack(LoginForm);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 250px;\n\n  padding: 1em 0;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px 10px 10px 10px;\n  box-shadow: 10px 10px 8px -1px rgba(0, 0, 0, 0.6);\n`;\n\nexport const ErrorContainer = styled.div`\n  font-size: 0.75rem;\n  color: tomato;\n`;\n\nexport const Row = styled.div`\n  margin: 0.5em;\n  padding: 0.5em;\n  text-align: center;\n\n  input {\n    display: block;\n    margin: 0.5em auto;\n    width: 80%;\n  }\n`;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { Row, ErrorContainer } from './RegistrationForm.style';\n\nconst RegistrationField = ({\n  fieldLabel,\n  type,\n  name,\n  as,\n  placeholder,\n  options = [],\n  value\n}) => (\n  <Row>\n    {type !== 'checkbox' && (\n      <label>\n        {fieldLabel}\n        {!as && (<Field type={type} name={name} placeholder={placeholder} />)}\n        {as && (\n          <Field name={name} as={as} placeholder={placeholder}>\n            {options.length !== 0 && options.map((opt, index) => <option key={index} value={opt.value}>{opt.label}</option>)}\n          </Field>\n        )}\n      </label>\n    )}\n    {type === 'checkbox' && (\n        <Field name={name}>\n          {({ field, form }) => {\n            return (\n              <label>\n                <input\n                  {...field}\n                  type=\"checkbox\"\n                />\n                {fieldLabel}\n              </label>\n            );\n          }}\n        </Field>\n      )}\n    <ErrorContainer>\n      <ErrorMessage name={name} />\n    </ErrorContainer>\n  </Row>\n);\n\n\nexport default RegistrationField;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\n\nimport { Wrapper, Row, ErrorContainer } from '../RegistrationForm.style';\nimport RegistrationField from '../RegistrationField';\n\nconst BasicDetailsForm = ({ initialValues, validationSchema, onSubmit, formError}) => {\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, isValid, dirty, isValidating }) => (\n          <Form>\n            <RegistrationField fieldLabel=\"Username:\" type=\"text\" name=\"username\" />\n            <RegistrationField\n              fieldLabel=\"First Name:\"\n              type=\"text\"\n              name=\"firstName\"\n            />\n            <RegistrationField\n              fieldLabel=\"Last Name:\"\n              type=\"text\"\n              name=\"lastName\"\n            />\n            <RegistrationField fieldLabel=\"Email:\" type=\"email\" name=\"email\" />\n            <RegistrationField\n              fieldLabel=\"Password:\"\n              type=\"password\"\n              name=\"password\"\n            />\n            <RegistrationField\n              fieldLabel=\"Confirm Password:\"\n              type=\"password\"\n              name=\"passwordConfirmation\"\n            />\n            \n            <Row>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting || !isValid || isValidating || !dirty}\n              >\n                Next\n              </button>\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default BasicDetailsForm;\n\n","import React from 'react';\nimport { Formik, Form } from 'formik';\n\nimport { Wrapper, Row, ErrorContainer } from '../RegistrationForm.style';\nimport RegistrationField from '../RegistrationField';\n\nconst AppDetailsForm = ({ initialValues, validationSchema, onSubmit, formError}) => {\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, isValid, dirty, isValidating }) => (\n          <Form>\n            <RegistrationField\n              fieldLabel=\"App Name:\"\n              type=\"text\"\n              name=\"app\"\n            />\n            <RegistrationField\n              fieldLabel=\"Description:\"\n              as=\"textarea\"\n              name=\"description\"\n            />\n            <RegistrationField\n              name=\"terms\"\n              type=\"checkbox\"\n              fieldLabel=\"I agree to our Terms of Use and Privacy Policy by signing up\"\n            />\n            \n            <Row>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting || !isValid || isValidating || !dirty}\n              >\n                Next\n              </button>\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default AppDetailsForm;\n\n","import * as Yup from 'yup';\nimport valid from 'card-validator';\nimport moment from 'moment';\n\nexport const validationSchemaBasic = Yup.object().shape({\n  username: Yup.string()\n    .label('username')\n    .required('Please enter desired username.'),\n  firstName: Yup.string()\n    .label('firstName')\n    .required('Please enter your first name.'),\n  lastName: Yup.string()\n    .label('lastName')\n    .required('Please enter your last name.'),\n  email: Yup.string()\n    .label('email')\n    .email('Enter a valid email.')\n    .required('Please enter your email.'),\n  password: Yup.string()\n    .label('password')\n    .matches(/[a-z]/, 'at least one lowercase char')\n    .matches(/[A-Z]/, 'at least one uppercase char')\n    .matches(/[a-zA-Z]+[^a-zA-Z\\s]+/, 'at least 1 number or special char (@,!,#, etc).')\n    .min(8, 'Must be at least 8 characters.')\n    .required('Please enter your desired password.'),\n  passwordConfirmation: Yup.string()\n    .oneOf([Yup.ref('password'), '', null], 'Passwords must match.')\n    .required('Please confirm your password.'),\n  \n});\n\nexport const validationSchemaApp = Yup.object().shape({\n  app: Yup.string()\n    .label('app')\n    .required('Please enter desired app name.'),\n  description: Yup.string()\n    .label('description')\n    .required('Please enter app description.'),\n  terms: Yup.boolean()\n    .label('terms')\n    .oneOf([true], 'Must Accept Terms and Conditions')\n    .required('Please click agree on terms before you can proceed'),\n});\n\n\n\nexport const validationSchemaCreditCard = Yup.object().shape({\n  cardNumber: Yup.string()\n    .label('Card number')\n    .max(16)\n    .test('test-number',\n    'Credit Card number is invalid',\n     value => valid.number(value).isValid)\n    .required(),\n  cardName: Yup.string()\n    .label('Name on card')\n    .required(),\n  cvc: Yup.string()\n    .label('CVC')\n    .min(3)\n    .max(4)\n    .required(),\n  expiryMonth: Yup.string()\n    .label('Expiry month')\n    .min(2)\n    .max(2)\n    .required(),\n  expiryYear: Yup.string()\n    .label('Expiry year')\n    .min(4)\n    .max(4)\n    .required(),\n});\n\nexport const creditCardExpirationYear = () => {\n  const years = [];\n  const dateStart = moment();\n  const dateEnd = moment().add(10, 'y');\n  while (dateEnd.diff(dateStart, 'years') >= 0) {\n    const year = dateStart.format('YYYY');\n    years.push({ value: year, label: year });\n    dateStart.add(1, 'year');\n  }\n  return years;\n}\n\nexport const creditCardExpirationMonth = () => {\n  const months = [];\n  const dateStart = moment();\n  const dateEnd = moment().add(11, 'month');\n  while (dateEnd.diff(dateStart, 'months') >= 0) {\n    const monthNumber = dateStart.format('MM');\n    const monthName = dateStart.format('MMMM');\n    months.push({ value: monthNumber, label: monthName });\n    dateStart.add(1, 'month');\n  }\n  return months;\n}","import React from 'react';\nimport { Formik, Form } from 'formik';\n\nimport { Wrapper, Row, ErrorContainer } from '../RegistrationForm.style';\nimport RegistrationField from '../RegistrationField';\n\nimport { creditCardExpirationMonth, creditCardExpirationYear } from './registration-util.js';\n\nconst CreditCardDetailsForm = ({ initialValues, validationSchema, onSubmit, formError}) => {\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, isValid, dirty, isValidating }) => (\n          <Form>\n            <RegistrationField\n              fieldLabel=\"Name on Card:\"\n              type=\"text\"\n              name=\"cardName\"\n            />\n            <RegistrationField\n              fieldLabel=\"Card Number:\"\n              type=\"text\"\n              name=\"cardNumber\"\n            />\n            <RegistrationField\n              fieldLabel=\"CVC:\"\n              type=\"text\"\n              name=\"cvc\"\n            />\n            <Row>\n              Expiration Date\n              <RegistrationField\n                fieldLabel=\"Month\"\n                as=\"select\"\n                name=\"expiryMonth\"\n                options={creditCardExpirationMonth()}\n              />\n              <RegistrationField\n                fieldLabel=\"Year\"\n                as=\"select\"\n                name=\"expiryYear\"\n                options={creditCardExpirationYear()}\n              />\n            </Row>\n              \n            <Row>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting || !isValid || isValidating || !dirty}\n              >\n                Sign Up!\n              </button>\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default CreditCardDetailsForm;\n\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REGISTER_USER } from '@nostack/no-stack';\n\nimport { Wrapper } from './RegistrationForm.style';\n\nimport BasicDetailsForm from './stepper/BasicDetailsForm';\nimport AppDetailsForm from './stepper/AppDetailsForm.js';\nimport CreditCardDetailsForm from './stepper/CreditCardDetailsForm';\n\nimport {\n  validationSchemaBasic,\n  validationSchemaApp,\n  validationSchemaCreditCard,\n} from './stepper/registration-util.js';\n\nconst initialValues = {\n  username: '',\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n  app: '',\n  description: '',\n  cardName: '',\n  cardNumber: '',\n  cvc: '',\n  expiryMonth: '',\n  expiryYear: '',\n};\n\n\n\nconst RegistrationForm = ({\n  userClassId,\n  onSuccess,\n}) => {\n  const [register] = useMutation(REGISTER_USER);\n  const [registrationCompleted, setRegistrationCompleted] = useState(false);\n  const [formError, setFormError] = useState('');\n\n\n  /*\n    A \"stepper\" is created and uses state to be sure that:\n     1. no child form is visible (haven't pushed \"submit\")\n     2. the child form (or it's child) is visible;\n     3. the submit has been pushed on the sequence of child forms, and it's time to call submit\n     4. The submission succeeded, and the final welcome message should be visible.\n   */\n  const [step, setStep] = useState(1);\n\n  const [username, setUsername] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [app, setApp] = useState('');\n  const [description, setDescription] = useState('');\n\n  // const formValuesTemp = \"{\\\"app\\\":\\\"newApp\\\",\\\"description\\\":\\\"newApp Desc\\\",\\\"creditCardNumber\\\":\\\"232\\\",\\\"expirationDate\\\":\\\"234243\\\",\\\"csv\\\":\\\"46\\\"}\";\n\n  const handleSubmit = async (\n    values,\n    { setSubmitting },\n  ) => {\n    setFormError('');\n    if (values.password !== values.passwordConfirmation) {\n      return;\n    }\n    const formValuesTemp = {\n      app,\n      description,\n      creditCardNumber: values.cardNumber,\n      creditCardName: values.cardName,\n      expirationDate: `${values.expiryMonth}/${values.expiryYear}`,\n      csv: values.cvc,\n    };\n\n    try {\n      await register({\n        variables: {\n          userClassId,\n          username: username,\n          firstName,\n          lastName,\n          email,\n          password,\n          formValues: formValuesTemp,\n        },\n      });\n\n      setRegistrationCompleted(true);\n\n      if (onSuccess) {\n        onSuccess();\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(error.graphQLErrors);\n\n      setFormError('Something went wrong. Please try again.');\n    }\n\n    setSubmitting(false);\n  };\n\n  if (registrationCompleted) {\n    return (\n      <Wrapper>\n        <p>Successfully created account! Please check your email for a verification message.  Push that, and you're in!</p>\n      </Wrapper>\n    );\n  }\n\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n\n  const handleSubmitBasicForm = (values, { setSubmitting }) => {\n    setFormError('');\n    if (values.password !== values.passwordConfirmation) {\n      return;\n    }\n    setUsername(values.username);\n    setFirstName(values.firstName);\n    setLastName(values.lastName);\n    setEmail(values.email);\n    setPassword(values.password);\n    setSubmitting(false);\n    nextStep();\n  }\n\n  const handleSubmitAppForm = (values, { setSubmitting }) => {\n    setFormError('');\n    setApp(values.app);\n    setDescription(values.description);\n    setSubmitting(false);\n    nextStep();\n  }\n\n  const displayCurrentStep = () => {\n    switch (step) {\n      case 1:\n        return <BasicDetailsForm\n          initialValues={initialValues}\n          validationSchema={validationSchemaBasic}\n          onSubmit={handleSubmitBasicForm}\n          formError={formError}\n        />;\n\n      case 2:\n        return <AppDetailsForm\n          initialValues={initialValues}\n          validationSchema={validationSchemaApp}\n          onSubmit={handleSubmitAppForm}\n          formError={formError}\n        />;\n      \n      case 3:\n        return <CreditCardDetailsForm\n          initialValues={initialValues}\n          validationSchema={validationSchemaCreditCard}\n          onSubmit={handleSubmit}\n          formError={formError}\n        />;\n\n      default:\n        return <BasicDetailsForm\n          initialValues={initialValues}\n          validationSchema={validationSchemaBasic}\n          onSubmit={handleSubmitBasicForm}\n          formError={formError}\n        />;\n    }\n  };\n  return (\n    <>\n      {displayCurrentStep()}\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","export function flattenChildData(element) {\n  const flatData ={\n    typeId: element.typeId,\n    instances: []\n  };\n\n  if (element.instances && element.instances.length > 0) {\n    flatData.instances = element.instances.filter(child => !!child).map(\n      instance => flattenData(instance)\n    );\n  }\n\n  return flatData;\n};\n\nexport function flattenData(element) {\n  const flatData = {\n    ...element.instance,\n    children: []\n  };\n\n  if (element.children && element.children.length > 0) {\n    flatData.children = element.children.filter(child => !!child).map(\n      child => flattenChildData(child)\n    );\n  }\n\n  return flatData;\n};\n","import React, { useState } from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport styled from 'styled-components';\nimport { EXECUTE_ACTION } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\n\n// import { CREATE_APP_FOR_REGISTRATION_INFO_ACTION_ID } from '../../../config';\n\n// change styling here\nconst Form = styled.div`\n  margin: 2em;\n  padding: 1.5em;\n  border: none;\n  border-radius: 5px;\n  background-color: #F5F5F5;\n`;\n\nconst Button = styled.button`\n  margin-left: 1em;\n`;\n\nfunction AppCreationForm({ customerId, createApp, refetchQueries }) {\n  const [ appValue, updateAppValue ] = useState('');\n  const [ loading, updateLoading ] = useState(false);\n\n  function handleChange(e) {\n    updateAppValue(e.target.value);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!appValue) {\n      return;\n    }\n\n    updateLoading(true);\n\n\n\n\n\n\n\n\n    // const createAppResponse = await createApp({\n    //   variables: {\n    //     actionId: CREATE_APP_FOR_REGISTRATION_INFO_ACTION_ID,\n    //     executionParameters: JSON.stringify({\n    //       parentInstanceId: customerId,\n    //       value: appValue,\n    //     }),\n    //     unrestricted: false,\n    //   },\n    //   refetchQueries\n    // });\n\n    // const newAppData = JSON.parse(createAppResponse.data.ExecuteAction);\n\n    \n\n\n    updateAppValue('');\n    updateLoading(false);\n  }\n\n  function handleKeyPress(e) {\n    if (e.charCode === 13) {\n      handleSubmit(e);\n    }\n  }\n\n  return (\n    <Form>\n      <label htmlFor=\"app-value\">\n        App:\n        <input\n          id=\"app-value\"\n          type=\"text\"\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          value={ appValue }\n          disabled={loading}\n        />\n      </label>\n      <Button type=\"submit\"  disabled={loading}  onClick={handleSubmit}>\n        {\n          loading\n            ? 'Creating App...'\n            : 'Create App'\n        }\n      </Button>\n    </Form>\n  );\n}\n\nexport default compose(\n  graphql(EXECUTE_ACTION, { name: 'createApp' }),\n  \n  \n)(AppCreationForm);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nfunction EditInstanceForm({\n  id,\n  label,\n  value,\n  onChange,\n  onSave,\n  onCancel,\n  disabled,\n}) {\n  return (\n    <>\n      <label htmlFor={id}>\n        {label}\n        <input\n          id={id}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      </label>\n      <Button\n        type=\"button\"\n        hoverColor=\"#00FF00\"\n        onClick={onSave}\n        disabled={disabled}\n      >\n        &#10003;\n      </Button>\n      <Button\n        type=\"button\"\n        hoverColor=\"#FF0000\"\n        onClick={onCancel}\n        disabled={disabled}\n      >\n        &#10005;\n      </Button>\n    </>\n  );\n}\n\nexport default EditInstanceForm;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nconst Container = styled.div`\n  color: red;\n  margin: 1em;\n  padding: 1em;\n  border: 1px solid #eeeeee;\n`;\n\nfunction DeleteInstanceMenu({\n  onDelete,\n  onCancel,\n  disabled,\n}) {\n  return (\n    <Container>\n      Delete?\n      <Button\n        type=\"button\"\n        hoverColor=\"#00FF00\"\n        onClick={onDelete}\n        disabled={disabled}\n      >\n        &#10003;\n      </Button>\n      <Button\n        type=\"button\"\n        hoverColor=\"#FF0000\"\n        onClick={onCancel}\n        disabled={disabled}\n      >\n        &#10005;\n      </Button>\n    </Container>\n  )\n}\n\nexport default DeleteInstanceMenu;\n","import React, { useState } from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport styled from 'styled-components';\nimport { EXECUTE_ACTION } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\n\n// import { CREATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID } from '../../../config';\n\n// change styling here\nconst Form = styled.div`\n  margin: 2em;\n  padding: 1.5em;\n  border: none;\n  border-radius: 5px;\n  background-color: #F5F5F5;\n`;\n\nconst Button = styled.button`\n  margin-left: 1em;\n`;\n\nfunction DescriptionCreationForm({ parentId, createDescription, refetchQueries }) {\n  const [ descriptionValue, updateDescriptionValue ] = useState('');\n  const [ loading, updateLoading ] = useState(false);\n\n  function handleChange(e) {\n    updateDescriptionValue(e.target.value);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!descriptionValue) {\n      return;\n    }\n\n    updateLoading(true);\n\n    // const createDescriptionResponse = await createDescription({\n    //   variables: {\n    //     actionId: CREATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n    //     executionParameters: JSON.stringify({\n    //       parentInstanceId: parentId,\n    //       value: descriptionValue,\n    //     }),\n    //     unrestricted: false,\n    //   },\n    //   refetchQueries\n    // });\n\n    // const newDescriptionData = JSON.parse(createDescriptionResponse.data.ExecuteAction);\n\n    \n\n\n    updateDescriptionValue('');\n    updateLoading(false);\n  }\n\n  function handleKeyPress(e) {\n    if (e.charCode === 13) {\n      handleSubmit(e);\n    }\n  }\n\n  return (\n    <Form>\n      <label htmlFor=\"description-value\">\n        Description:\n        <input\n          id=\"description-value\"\n          type=\"text\"\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          value={ descriptionValue }\n          disabled={loading}\n        />\n      </label>\n      <Button type=\"submit\"  disabled={loading}  onClick={handleSubmit}>\n        {\n          loading\n            ? 'Creating Description...'\n            : 'Create Description'\n        }\n      </Button>\n    </Form>\n  );\n}\n\nexport default compose(\n  graphql(EXECUTE_ACTION, { name: 'createDescription' }),\n  \n)(DescriptionCreationForm);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { EXECUTE_ACTION } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\nimport { graphql } from '@apollo/react-hoc';\n\nimport {\n  UPDATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n  DELETE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n} from '../../../config';\n\nimport EditInstanceForm from '../../EditInstanceForm';\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\n\n\n\n\n\n// add styling here\nconst DescriptionStyleWrapper = styled.div(({\n  selected,\n  isDeleting,\n}) => `\n  margin: 2em 1em;\n  padding: 1.5em;\n  border: ${selected ? '1px solid aquamarine': '1px solid white'};\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px #888888;\n  background-color: ${isDeleting && 'tomato'};\n  cursor: ${selected ? 'auto' : 'pointer'};\n\n  &:hover {\n    border: 1px solid aquamarine;\n  }\n`);\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nfunction Description({\n  description,\n  parentId,\n  selected,\n  updateInstance,\n  deleteInstance,\n  refetchQueries,\n  onSelect,\n}) {\n  const [descriptionValue, updateDescriptionValue] = useState(description.value);\n  const [isEditMode, updateIsEditMode] = useState(false);\n  const [isSaving, updateIsSaving] = useState(false);\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\n  const [isDeleting, updateIsDeleting] = useState(false);\n\n  \n\n\n  if (!selected) {\n    return (\n      <DescriptionStyleWrapper onClick={() => onSelect(description.id)}>\n        { descriptionValue }\n      </DescriptionStyleWrapper>\n    );\n  }\n\n  function handleDescriptionValueChange(e) {\n    updateDescriptionValue(e.target.value);\n  }\n\n  async function handleDescriptionValueSave() {\n    updateIsSaving(true);\n\n    await updateInstance({\n      variables: {\n        actionId: UPDATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n        executionParameters: JSON.stringify({\n          value: descriptionValue,\n          instanceId: description.id,\n        }),\n      },\n      refetchQueries,\n    });\n\n    updateIsEditMode(false);\n    updateIsSaving(false);\n  }\n\n  function handleCancelEdit() {\n    updateIsEditMode(false);\n  }\n\n  if (isEditMode) {\n    return (\n      <DescriptionStyleWrapper>\n        <EditInstanceForm\n          id={ description.id }\n          label=\"Description Value:\"\n          value={ descriptionValue }\n          onChange={handleDescriptionValueChange}\n          onSave={handleDescriptionValueSave}\n          onCancel={handleCancelEdit}\n          disabled={isSaving}\n        />\n      </DescriptionStyleWrapper>\n    );\n  }\n\n  async function handleDelete() {\n    updateIsDeleting(true);\n\n    try {\n      await deleteInstance({\n        variables: {\n          actionId: DELETE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n          executionParameters: JSON.stringify({\n            parentInstanceId: parentId,\n            instanceId: description.id,\n          }),\n        },\n        refetchQueries\n      });\n    } catch (e) {\n      updateIsDeleting(false);\n    }\n  }\n\n  function handleCancelDelete() {\n    updateIsDeleteMode(false);\n  }\n\n  if (isDeleteMode) {\n    return (\n      <DescriptionStyleWrapper\n        selected={selected}\n        isDeleting={isDeleting}\n      >\n        { descriptionValue }\n        <DeleteInstanceMenu\n          onDelete={handleDelete}\n          onCancel={handleCancelDelete}\n          disabled={isDeleting}\n        />\n      </DescriptionStyleWrapper>\n    );\n  }\n\n  return (\n    <DescriptionStyleWrapper selected={selected}>\n      { descriptionValue }\n      <Button\n        type=\"button\"\n        onClick={() => updateIsEditMode(true)}\n      >\n        &#9998;\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => updateIsDeleteMode(true)}\n      >\n        &#128465;\n      </Button>\n\n      \n\n\n    </DescriptionStyleWrapper>\n  );\n}\n\nexport default compose(\n  graphql(EXECUTE_ACTION, { name: 'updateInstance' }),\n  graphql(EXECUTE_ACTION, { name: 'deleteInstance' })\n)(Description);\n","/*\n  This file was generated automatically by nostack 'makecode' for the app 'pivotate2a'.\n  If you build a new stack from a template, this version will probably need to change.\n\n  For instance, it will update if you run 'makecode' again. Fair warning, that will\n  change a lot of your code. If you modify your current stack to add actions, sources,\n  or types, it would make sense to add constants here.\n\n  But, you should *not* add permanent, separate configuration material or other material that is not directly\n  'managed by NoStack, because this will will be replaced with every call to 'makecode'.\n */\n\n// stack id\nexport const PLATFORM_ID = 'us-east-1_Lq8L4ZLfA';\n\n// sources\nexport const SOURCE_REGISTRATION_INFO_ID='1b219263-3125-4bb4-a82e-1e181780fbb7';\n\n// types\nexport const TYPE_MODERATOR_ID='us-east-1_Lq8L4ZLfAmoderatorClass';\nexport const TYPE_CUSTOMER_ID='20a2b531-c0be-4509-aee3-2593d0524cfd';\nexport const TYPE_APP_ID='ea1e6967-4ed7-4019-bb47-3f7b7ccd5950';\nexport const TYPE_DESCRIPTION_ID='a0deeed9-bd18-4e96-aaf8-10b83a49cdc0';\nexport const TYPE_CREDIT_CARD_NUMBER_ID='a158f062-f084-4153-826f-cc8765380dc2';\nexport const TYPE_EXPIRATION_DATE_ID='0e7f5ae3-24d0-4e83-8640-fa0087b258ce';\nexport const TYPE_CSV_ID='a807220a-b28f-40eb-a45c-9bdc668dce95';\n\n// actions\n// CREATE_INSTANCE\nexport const CREATE_APP_FOR_REGISTRATION_INFO_ACTION_ID='01b49a59-ac70-479b-a699-31c07209751a';\nexport const CREATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='d618936e-245b-46c8-88a9-288a972c5714';\nexport const CREATE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='72b23144-5b82-4d0a-8c46-399da55c77c8';\nexport const CREATE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='dab0b3c7-5619-4083-bdff-43090e907277';\nexport const CREATE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='fd5c036a-30c6-4576-8cb9-9e1ace40eda7';\n\n// UPDATE_INSTANCE\nexport const UPDATE_APP_FOR_REGISTRATION_INFO_ACTION_ID='2340727a-1309-479e-bcb2-65b76d1686bf';\nexport const UPDATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='b1de94df-2aeb-47c0-8853-a412f02e5315';\nexport const UPDATE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='da20f80c-7165-4c56-be15-f4f18d7e156f';\nexport const UPDATE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='d5639c9b-66ca-49ce-b9f2-923666a6846d';\nexport const UPDATE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='158c6a0c-01a0-4d82-8bf9-bc0c2e19ccd4';\n\n// DELETE_INSTANCE\nexport const DELETE_APP_FOR_REGISTRATION_INFO_ACTION_ID='30d86ee4-d585-4fb9-9a4c-54c8e5902327';\nexport const DELETE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='03a6b7ee-8d8b-47c2-a977-4912060f2c41';\nexport const DELETE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='1f1efa77-3f87-41a4-9c51-5d0e1d842f1e';\nexport const DELETE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='c780d8ff-7f74-4d44-b09e-c69a8656f01f';\nexport const DELETE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='392a2c85-8306-4267-9187-24dd6ec2a7c5';\n\n// ADD_INSTANCE_ASSN\n\n// UPDATE_INSTANCE_ASSN\n\n// DELETE_INSTANCE_ASSN\n\n// CREATE_INSTANCE_WITH_UNOWNED_PARENT\n\n// ADDED\n\n// SUBMIT_FORM\nexport const SUBMIT_FORM_FOR_REGISTRATION_INFO_ACTION_ID='form-submission-add-version-9d2dd0e7-2aca-4212-88bc-59f8bf74e992';\n","import React, { Component, createRef } from 'react';\nimport styled from 'styled-components';\nimport { v4 } from 'uuid';\n\nimport DescriptionCreationForm from '../DescriptionCreationForm';\nimport Description from '../Description';\n\nconst DescriptionsStyleWrapper = styled.div``;\n\n// const Button = styled.button`\n//   display: block;\n//   margin: 0 auto;\n// `;\n\nclass Descriptions extends Component {\n  state = {\n    selectedDescriptionId: null,\n  };\n\n  wrapperRef = createRef();\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  handleClick = e => {\n    const node = this.wrapperRef.current;\n\n    if (\n      node &&\n      node !== e.target &&\n      !node.contains(e.target)\n    ) {\n      this.setState({ selectedDescriptionId: null });\n    }\n  }\n\n  handleSelect = id => this.setState({ selectedDescriptionId: id });\n\n  render () {\n    const { appId, descriptions, refetchQueries, onUpdate } = this.props;\n    const { selectedDescriptionId } = this.state;\n\n    return (\n      <DescriptionsStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\n        <DescriptionCreationForm\n          parentId={ appId }\n          refetchQueries={refetchQueries}\n        />\n\n        { descriptions.map(description => (\n          <Description\n            key={v4()}\n            description={ description }\n            selected={ description.id === selectedDescriptionId }\n            onUpdate={onUpdate}\n            parentId={ appId }\n            refetchQueries={refetchQueries}\n            onSelect={this.handleSelect}\n          />\n        )) }\n      </DescriptionsStyleWrapper>\n    )\n  }\n}\n\nexport default Descriptions;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { EXECUTE_ACTION } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\nimport { graphql } from '@apollo/react-hoc';\n\nimport {\n  UPDATE_APP_FOR_REGISTRATION_INFO_ACTION_ID,\n  DELETE_APP_FOR_REGISTRATION_INFO_ACTION_ID, TYPE_DESCRIPTION_ID,\n} from '../../../config';\n\nimport EditInstanceForm from '../../EditInstanceForm';\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\n\n\nimport Descriptions from '../Descriptions';\n\n\n\n// add styling here\nconst AppStyleWrapper = styled.div(({\n  selected,\n  isDeleting,\n}) => `\n  margin: 2em 1em;\n  padding: 1.5em;\n  border: ${selected ? '1px solid aquamarine': '1px solid white'};\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px #888888;\n  background-color: ${isDeleting && 'tomato'};\n  cursor: ${selected ? 'auto' : 'pointer'};\n\n  &:hover {\n    border: 1px solid aquamarine;\n  }\n`);\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nfunction App({\n  app,\n  parentId,\n  selected,\n  updateInstance,\n  deleteInstance,\n  refetchQueries,\n  onSelect,\n}) {\n  const [appValue, updateAppValue] = useState(app.value);\n  const [isEditMode, updateIsEditMode] = useState(false);\n  const [isSaving, updateIsSaving] = useState(false);\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\n  const [isDeleting, updateIsDeleting] = useState(false);\n\n  \n  const descriptionData = app.children && app.children.find(child => child.typeId === TYPE_DESCRIPTION_ID);\n  const descriptions = descriptionData ? descriptionData.instances : [];\n\n\n  if (!selected) {\n    return (\n      <AppStyleWrapper onClick={() => onSelect(app.id)}>\n        { appValue }\n      </AppStyleWrapper>\n    );\n  }\n\n  function handleAppValueChange(e) {\n    updateAppValue(e.target.value);\n  }\n\n  async function handleAppValueSave() {\n    updateIsSaving(true);\n\n    await updateInstance({\n      variables: {\n        actionId: UPDATE_APP_FOR_REGISTRATION_INFO_ACTION_ID,\n        executionParameters: JSON.stringify({\n          value: appValue,\n          instanceId: app.id,\n        }),\n      },\n      refetchQueries,\n    });\n\n    updateIsEditMode(false);\n    updateIsSaving(false);\n  }\n\n  function handleCancelEdit() {\n    updateIsEditMode(false);\n  }\n\n  if (isEditMode) {\n    return (\n      <AppStyleWrapper>\n        <EditInstanceForm\n          id={ app.id }\n          label=\"App Value:\"\n          value={ appValue }\n          onChange={handleAppValueChange}\n          onSave={handleAppValueSave}\n          onCancel={handleCancelEdit}\n          disabled={isSaving}\n        />\n      </AppStyleWrapper>\n    );\n  }\n\n  async function handleDelete() {\n    updateIsDeleting(true);\n\n    try {\n      await deleteInstance({\n        variables: {\n          actionId: DELETE_APP_FOR_REGISTRATION_INFO_ACTION_ID,\n          executionParameters: JSON.stringify({\n            parentInstanceId: parentId,\n            instanceId: app.id,\n          }),\n        },\n        refetchQueries\n      });\n    } catch (e) {\n      updateIsDeleting(false);\n    }\n  }\n\n  function handleCancelDelete() {\n    updateIsDeleteMode(false);\n  }\n\n  if (isDeleteMode) {\n    return (\n      <AppStyleWrapper\n        selected={selected}\n        isDeleting={isDeleting}\n      >\n        { appValue }\n        <DeleteInstanceMenu\n          onDelete={handleDelete}\n          onCancel={handleCancelDelete}\n          disabled={isDeleting}\n        />\n      </AppStyleWrapper>\n    );\n  }\n\n  return (\n    <AppStyleWrapper selected={selected}>\n      { appValue }\n      <Button\n        type=\"button\"\n        onClick={() => updateIsEditMode(true)}\n      >\n        &#9998;\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => updateIsDeleteMode(true)}\n      >\n        &#128465;\n      </Button>\n\n      \n< Descriptions\n              descriptions = { descriptions }\n              appId = { app.id }\n              label=\"Description?\"\n              refetchQueries={refetchQueries}\n      />\n\n\n    </AppStyleWrapper>\n  );\n}\n\nexport default compose(\n  graphql(EXECUTE_ACTION, { name: 'updateInstance' }),\n  graphql(EXECUTE_ACTION, { name: 'deleteInstance' })\n)(App);\n","import gql from 'graphql-tag';\n\n  export const SOURCE_REGISTRATION_INFO_QUERY = gql`\n  query UNIT(\n    $id: ID!\n    $typeRelationships: String!\n    $parameters: String\n  ) {\n    unitData(\n      unitId: $id\n      typeRelationships: $typeRelationships\n      parameters: $parameters\n    )\n    {\n      \n        instance {\n            id\n            value\n        }\n        children {\n            typeId\n            instances {\n                \n\t\tinstance {\n\t\t    id\n\t\t    value\n\t\t}\n            }\n        }\n    \n    }\n  }\n`;\n\nexport const REGISTRATION_INFO_RELATIONSHIPS = {\n   app: {\n        description: null\n    },\n};\n","import React, { Component, createRef } from 'react';\nimport { Unit } from '@nostack/no-stack';\nimport styled from 'styled-components';\nimport { v4 } from 'uuid';\n\nimport { flattenData } from '../../../flattenData';\n\nimport AppCreationForm from '../AppCreationForm';\nimport App from '../App';\n\nimport { SOURCE_REGISTRATION_INFO_ID } from '../../../config';\nimport { REGISTRATION_INFO_RELATIONSHIPS, SOURCE_REGISTRATION_INFO_QUERY } from '../../source-props/appInfo';\n\n// add styling here\nconst AppsStyleWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nclass Apps extends Component {\n  state = {\n    selectedAppId: null,\n  };\n\n  wrapperRef = createRef();\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  handleClick = e => {\n    const node = this.wrapperRef.current;\n\n    if (\n      node &&\n      node !== e.target &&\n      !node.contains(e.target)\n    ) {\n      this.setState({ selectedAppId: null });\n    }\n  }\n\n  handleSelect = id => this.setState({ selectedAppId: id });\n\n  render() {\n    const { customerId } = this.props;\n    const { selectedAppId } = this.state;\n\n    const parameters = {\n      ignoredParameter: customerId,\n    };\n\n    return (\n      <Unit\n        id={ SOURCE_REGISTRATION_INFO_ID }\n        typeRelationships={ REGISTRATION_INFO_RELATIONSHIPS }\n        query={ SOURCE_REGISTRATION_INFO_QUERY }\n        parameters={parameters}\n      >\n        {({loading, error, data, refetchQueries}) => {\n          if (loading) return 'Loading...';\n\n          if (error) {\n            console.error(error);\n            return `Error: ${error.graphQLErrors}`\n          };\n\n          const apps = data.unitData.map(el => flattenData(el));\n\n          return (\n            <>\n              <AppCreationForm  customerId={ customerId } refetchQueries={refetchQueries}/>\n              <AppsStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\n                { apps && apps.map(app => (\n                  <App\n                    key={v4()}\n                    parentId={ customerId }\n                    app={ app }\n                    selected={ app.id === selectedAppId }\n                    refetchQueries={refetchQueries}\n                    onSelect={this.handleSelect}\n                  />\n                )) }\n              </AppsStyleWrapper>\n            </>\n          );\n        }}\n      </Unit>\n    );\n  }\n}\n\nexport default Apps;\n","import React, { useState } from 'react';\nimport { \n  Formik,\n  Form as BareForm,\n  Field as BareField \n} from 'formik';\nimport { graphql } from '@apollo/react-hoc';\nimport { withNoStack, EXECUTE } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\nimport styled from 'styled-components';\nimport {SUBMIT_FORM_FOR_REGISTRATION_INFO_ACTION_ID} from \"../../config\";\n\nconst Form = styled(BareForm)`\n  padding: 2em;\n  border: 1px solid black;\n`;\n\nconst Row = styled.p``;\n\nconst Error = styled.p``;\n\nconst Field = styled(BareField)``;\n\nconst Label = styled.label``;\n\nconst SubmitButton = styled.button``;\n\nconst CancelButton = styled.button``;\n\nconst SampleForm = ({ currentUser, onCancel, submitForm, successView }) => {\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [error, setError] = useState('');\n\n  const initialValues = {\n    app: '',\n    description: '',\n    creditCardNumber: '',\n    expirationDate: '',\n    csv: '',\n    creditCardName: '',\n  };\n\n  const handleSubmit = async ({ app, description, creditCardNumber, expirationDate, csv, creditCardName }, { setSubmitting }) => {\n    setError('');\n\n    const executionParameters = JSON.stringify({\n      parentInstanceId: currentUser.id,\n      values: { app, description, creditCardNumber, expirationDate, csv },\n    });\n\n    try {\n      const { data } = await submitForm({\n        variables: {\n          actionId: SUBMIT_FORM_FOR_REGISTRATION_INFO_ACTION_ID,\n          executionParameters,\n          unrestricted: false,\n        },\n      });\n\n      if (!data.Execute) {\n        throw new Error('Null API response.');\n      }\n\n      setIsCompleted(true);\n    } catch (e) {\n      console.log(e);\n\n      setError('Something wrong happened.');\n    }\n\n    setSubmitting(false);\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  if (isCompleted) {\n    return successView;\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Row>\n            <Label htmlFor=\"app\">App</Label>\n            <Field id=\"app\" name=\"app\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"description\">Description</Label>\n            <Field name=\"description\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"creditCardNumber\">Credit Card Number</Label>\n            <Field name=\"creditCardNumber\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"creditCardName\">Credit Card Owner</Label>\n            <Field name=\"creditCardName\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"expirationDate\">Expiration Date</Label>\n            <Field name=\"expirationDate\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"csv\">CSV (Special code on the back)</Label>\n            <Field name=\"csv\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <SubmitButton\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Submit\n            </SubmitButton>\n            <CancelButton \n              type=\"button\"\n              disabled={isSubmitting}\n              onClick={handleCancel}\n            >\n              Cancel\n            </CancelButton>\n          </Row>\n          {error && <Error>{error}</Error>}\n        </Form>\n      )}\n    </Formik>\n  )\n};\n\nexport default compose(\n  withNoStack,\n  graphql( EXECUTE, { name: 'submitForm' }),\n)(SampleForm);\n","import React from 'react';\nimport styled from 'styled-components'; \n\nconst Wrapper = styled.div`\n  padding: 2em;\n  border: 1px solid black;\n`;\n\nconst Row = styled.p``;\n\nconst Button = styled.button``;\n\nconst FormSuccess = ({ onDismiss }) => {\n  const handleDismiss = () => onDismiss();\n\n  return (\n    <Wrapper>\n      <Row>\n        Form submitted successfully!\n      </Row>\n      \n      <Row>\n        <Button \n          type=\"button\"\n          onClick={handleDismiss}\n        >\n          Dismiss\n        </Button>\n      </Row>\n    </Wrapper>\n  )\n};\n\nexport default FormSuccess;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport styled from 'styled-components';\n\nimport SampleForm from '../SampleForm';\nimport FormSuccess from '../FormSuccess';\n\nconst Button = styled.button``;\n\nconst modalStyle = {\n  content : {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  }\n};\n\nModal.setAppElement(document.getElementById('root'));\n\nconst FormModal = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const openModal = () => setIsModalVisible(true);\n\n  const closeModal = () => setIsModalVisible(false);\n\n  return (\n    <div>\n      <Button type=\"button\" onClick={openModal}>Open Sample Form Modal</Button>\n      <Modal\n        isOpen={isModalVisible}\n        onRequestClose={closeModal}\n        contentLabel=\"Sample Form\"\n        style={modalStyle}\n      >\n        <SampleForm\n          onCancel={closeModal}\n          successView={\n            <FormSuccess onDismiss={closeModal}/>\n          }\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default FormModal;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport SampleForm from '../SampleForm';\nimport FormSuccess from '../FormSuccess';\n\nconst Wrapper = styled.div`\n  margin: 1em;\n`;\n\nconst Button = styled.button``;\n\nconst FormToggle = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const toggleModal = () => setIsModalVisible(!isModalVisible);\n\n  const closeModal = () => setIsModalVisible(false);\n\n  return (\n    <Wrapper>\n      <Button type=\"button\" onClick={toggleModal}>\n        Show/Hide Sample Form\n      </Button>\n      {isModalVisible && (\n        <SampleForm\n          onCancel={closeModal}\n          successView={\n            <FormSuccess onDismiss={closeModal}/>\n          }\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default FormToggle;\n","import React from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport { NoStackConsumer } from '@nostack/no-stack';\n\nimport { PLATFORM_ID, TYPE_CUSTOMER_ID } from './config';\n\nimport NavBar from './components/NavBar';\nimport AuthTabs from './components/AuthTabs';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport Apps from './components/AppInfo/Apps';\n\nimport FormModal from './components/FormModal';\nimport FormToggle from './components/FormToggle';\n\nconst Wrapper = styled.div`\n  padding: 5em 5em;\n  min-width: 480px;\n`;\n\nconst LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst App = () => (\n  <>\n    <NavBar />\n    <Wrapper className=\"App\">\n      <NoStackConsumer>\n        {({ loading, currentUser }) => {\n          if (loading) return null;\n\n          if (!currentUser) {\n            return (\n              <LoginWrapper>\n                <AuthTabs\n                  menuTitles={[\n                    'Login',\n                    'Register',\n                  ]}\n                >\n                  <LoginForm />\n                  <RegistrationForm\n                    platformId={PLATFORM_ID}\n                    userClassId={ TYPE_CUSTOMER_ID }\n                  />\n                </AuthTabs>\n              </LoginWrapper>\n            );\n          }\n\n          return (\n            <>\n              <FormModal />\n              <FormToggle />\n              <Apps customerId={ currentUser.id } />\n            </>\n          );\n        }}\n      </NoStackConsumer>\n    </Wrapper>\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { v4 } from 'uuid';\n\nimport { createAuthLink, httpLink } from '@nostack/no-stack';\n\nimport { PLATFORM_ID } from '../config';\n\nconst authLink = createAuthLink(PLATFORM_ID);\n\nconst link = ApolloLink.from([authLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache: new InMemoryCache({\n    dataIdFromObject: object => object.id ? object.id + object.__typename : v4(),\n  }),\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { NoStackProvider } from '@nostack/no-stack';\n\nimport { PLATFORM_ID } from './config';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport client from './client';\n\nReactDOM.render(\n  <NoStackProvider client={client} platformId={PLATFORM_ID}>\n    <App />\n  </NoStackProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}