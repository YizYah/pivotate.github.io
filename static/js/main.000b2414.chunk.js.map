{"version":3,"sources":["components/RegistrationForm/RegistrationForm.style.js","components/RegistrationForm/RegistrationField.js","components/RegistrationForm/stepper/BasicDetailsForm.js","components/RegistrationForm/stepper/AppDetailsForm.js","components/RegistrationForm/stepper/registration-util.js","components/RegistrationForm/stepper/CreditCardDetailsForm.js","components/Modal/index.js","components/RegistrationForm/index.js","components/ForgotPasswordButton/SendCodeForm.js","components/ForgotPasswordButton/ResetPasswordForm.js","components/ForgotPasswordButton/index.js","components/LoginForm/index.js","components/AppHeader/index.js","components/AppFooter/index.js","components/Pages/Home/index.js","components/Pages/Pricing/index.js","components/AuthTabs/index.js","flattenData/index.js","components/AppInfo/AppCreationForm/index.js","components/EditInstanceForm/index.js","components/DeleteInstanceMenu/index.js","components/AppInfo/DescriptionCreationForm/index.js","components/AppInfo/Description/index.js","config/index.js","components/AppInfo/Descriptions/index.js","components/AppInfo/App/index.js","components/source-props/appInfo.js","components/AppInfo/Apps/index.js","components/SampleForm/index.js","components/FormSuccess/index.js","components/FormModal/index.js","components/FormToggle/index.js","App.js","serviceWorker.js","client/index.js","index.js"],"names":["styled","div","ErrorContainer","Row","RegistrationField","fieldLabel","type","name","as","placeholder","options","value","style","width","className","length","map","opt","index","key","label","field","form","BasicDetailsForm","initialValues","validationSchema","onSubmit","formError","props","isSubmitting","isValid","dirty","isValidating","class","disabled","height","src","href","onClick","onSwitch","AppDetailsForm","validationSchemaBasic","Yup","shape","username","required","firstName","lastName","email","password","matches","min","passwordConfirmation","oneOf","validationSchemaApp","app","description","terms","validationSchemaCreditCard","cardNumber","max","test","valid","number","cardName","cvc","expiryMonth","expiryYear","creditCardExpirationYear","years","dateStart","moment","dateEnd","add","diff","year","format","push","creditCardExpirationMonth","months","monthNumber","monthName","CreditCardDetailsForm","marginLeft","Modal","onClose","progress","aria-label","children","RegistrationForm","userClassId","onSuccess","useMutation","REGISTER_USER","register","useState","setRegistrationCompleted","setFormError","step","setStep","setUsername","setFirstName","setLastName","setEmail","setPassword","setApp","setDescription","handleSubmit","values","a","async","setSubmitting","formValuesTemp","creditCardNumber","creditCardName","expirationDate","csv","variables","formValues","console","log","graphQLErrors","nextStep","handleSubmitBasicForm","handleSubmitAppForm","displayCurrentDescription","enterText","buttonText","progressWidth","displayCurrentStep","SendCodeForm","onCancel","error","e","preventDefault","onChange","target","ResetPasswordForm","passwordConfirm","setPasswordConfirm","code","setCode","formIncomplete","Button","button","withNoStack","compose","graphql","FORGOT_PASSWORD","RESET_PASSWORD","getPasswordResetCode","resetPassword","platformId","formVisible","setFormVisible","userNameOrEmail","setUsernameOrEmail","passwordReset","setPasswordReset","setError","submitting","hideForm","stackId","loading","currentUser","login","setIsSubmitting","message","htmlFor","id","NavBar","state","modalRegistration","modalLogin","modalHandlerRegistration","setState","modalHandlerLogin","modalHandlerSwitchForm","alt","this","data-menu","Component","AppFooter","Home","role","Pricing","selected","flattenData","element","flatData","instance","filter","child","typeId","instances","flattenChildData","Form","EXECUTE_ACTION","customerId","createApp","refetchQueries","appValue","updateAppValue","updateLoading","onKeyPress","charCode","hoverColor","EditInstanceForm","onSave","Container","DeleteInstanceMenu","onDelete","parentId","createDescription","descriptionValue","updateDescriptionValue","DescriptionStyleWrapper","isDeleting","updateInstance","deleteInstance","onSelect","isEditMode","updateIsEditMode","isSaving","updateIsSaving","isDeleteMode","updateIsDeleteMode","updateIsDeleting","actionId","executionParameters","JSON","stringify","instanceId","parentInstanceId","DescriptionsStyleWrapper","Descriptions","selectedDescriptionId","wrapperRef","createRef","handleClick","node","current","contains","handleSelect","document","addEventListener","removeEventListener","appId","descriptions","onUpdate","ref","v4","AppStyleWrapper","descriptionData","find","SOURCE_REGISTRATION_INFO_QUERY","gql","REGISTRATION_INFO_RELATIONSHIPS","AppsStyleWrapper","BareForm","p","Error","Field","BareField","Label","SubmitButton","CancelButton","EXECUTE","submitForm","successView","isCompleted","setIsCompleted","handleCancel","unrestricted","data","Execute","setAppElement","getElementById","App","AppHeader","exact","path","component","Boolean","window","location","hostname","match","authLink","createAuthLink","link","ApolloLink","from","httpLink","ApolloClient","cache","InMemoryCache","dataIdFromObject","object","__typename","ReactDOM","render","client","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.000b2414.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 250px;\n\n  padding: 1em 0;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px 10px 10px 10px;\n  box-shadow: 10px 10px 8px -1px rgba(0, 0, 0, 0.6);\n`;\n\nexport const ErrorContainer = styled.div`\n  font-size: 0.75rem;\n  color: tomato;\n`;\n\nexport const Row = styled.div`\n  \n  }\n`;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport { Row, ErrorContainer } from \"./RegistrationForm.style\";\n\nconst RegistrationField = ({\n  fieldLabel,\n  type,\n  name,\n  as,\n  placeholder,\n  options = [],\n  value\n}) => (\n  <Row>\n    {type !== \"checkbox\" && (\n      <label style={{ width: \"100%\" }}>\n        {!as && (\n          <Field\n            className=\"form__input\"\n            type={type}\n            name={name}\n            placeholder={placeholder}\n          />\n        )}\n        {as && (\n          <Field name={name} as={as} placeholder={placeholder}>\n            {options.length !== 0 &&\n              options.map((opt, index) => (\n                <option key={index} value={opt.value}>\n                  {opt.label}\n                </option>\n              ))}\n          </Field>\n        )}\n      </label>\n    )}\n    {type === \"checkbox\" && (\n      <Field name={name}>\n        {({ field, form }) => {\n          return (\n            <label>\n              <input {...field} type=\"checkbox\" />I agree to our\n              <b> Terms of Use</b> and <b>Privacy Policy</b> by signing up\n            </label>\n          );\n        }}\n      </Field>\n    )}\n    <ErrorContainer>\n      <ErrorMessage name={name} />\n    </ErrorContainer>\n  </Row>\n);\n\nexport default RegistrationField;\n","import React from \"react\";\nimport { Formik, Form } from \"formik\";\n\nimport { Wrapper, Row, ErrorContainer } from \"../RegistrationForm.style\";\nimport RegistrationField from \"../RegistrationField\";\n\nconst BasicDetailsForm = ({\n  initialValues,\n  validationSchema,\n  onSubmit,\n  formError,\n  ...props\n}) => {\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, isValid, dirty, isValidating }) => (\n          <Form class=\"form\">\n            <div class=\"form__input\">\n              <RegistrationField\n                placeholder=\"Username\"\n                type=\"text\"\n                name=\"username\"\n              />\n            </div>\n            <div class=\"form__input\">\n              <RegistrationField\n                placeholder=\"First Name\"\n                type=\"text\"\n                name=\"firstName\"\n              />\n            </div>\n            <div class=\"form__input\">\n              <RegistrationField\n                placeholder=\"Last Name\"\n                type=\"text\"\n                name=\"lastName\"\n              />\n            </div>\n            <div class=\"form__input\">\n              <RegistrationField\n                placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n              />\n            </div>\n            <div class=\"form__input\">\n              <RegistrationField\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n              />\n            </div>\n            <div class=\"form__input\">\n              <RegistrationField\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                name=\"passwordConfirmation\"\n              />\n            </div>\n\n            <div class=\"form__input\">\n              <button\n                class=\"button button--yellow\"\n                type=\"submit\"\n                disabled={isSubmitting || !isValid || isValidating || !dirty}\n              >\n                SIGN UP\n              </button>\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\n            </div>\n            <br />\n            <div>\n              <small>or</small>\n            </div>\n            <div class=\"flex justify-space-between\">\n              <button type=\"button\" class=\"button button--fb\">\n                Sign up with{\" \"}\n                <img\n                  class=\"social-icon\"\n                  height=\"14\"\n                  src=\"images/facebook.png\"\n                />\n              </button>\n              <div style={{ width: \"50px\" }}></div>\n              <button type=\"button\" class=\"button button--google\">\n                Sign up with\n                <img\n                  class=\"social-icon\"\n                  height=\"14\"\n                  src=\"images/google plus.png\"\n                />\n              </button>\n            </div>\n            <br />\n            <small>\n              Already have an account?\n              <a href=\"#\" class=\"teal--text\" onClick={props.onSwitch}>\n                &nbsp;Log In\n              </a>\n            </small>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default BasicDetailsForm;\n","import React from \"react\";\nimport { Formik, Form } from \"formik\";\n\nimport { Wrapper, Row, ErrorContainer } from \"../RegistrationForm.style\";\nimport RegistrationField from \"../RegistrationField\";\n\nconst AppDetailsForm = ({\n  initialValues,\n  validationSchema,\n  onSubmit,\n  formError\n}) => {\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, isValid, dirty, isValidating }) => (\n          <Form class=\"form\">\n            <div class=\"form__input\">\n              <RegistrationField\n                placeholder=\"App Name:\"\n                type=\"text\"\n                name=\"app\"\n              />\n            </div>\n            <div class=\"form__input\">\n              <RegistrationField\n                placeholder=\"Description:\"\n                as=\"textarea\"\n                name=\"description\"\n              />\n            </div>\n            <br></br>\n            <div class=\"\">\n              <RegistrationField\n                name=\"terms\"\n                type=\"checkbox\"\n                fieldLabel=\"I agree to our Terms of Use and Privacy Policy by signing up\"\n              />\n            </div>\n            <div class=\"form__input\">\n              <button\n                className=\"button button--yellow\"\n                type=\"submit\"\n                disabled={isSubmitting || !isValid || isValidating || !dirty}\n              >\n                MAKE MY APP NOW\n              </button>\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AppDetailsForm;\n","import * as Yup from 'yup';\nimport valid from 'card-validator';\nimport moment from 'moment';\n\nexport const validationSchemaBasic = Yup.object().shape({\n  username: Yup.string()\n    .label('username')\n    .required('Please enter desired username.'),\n  firstName: Yup.string()\n    .label('firstName')\n    .required('Please enter your first name.'),\n  lastName: Yup.string()\n    .label('lastName')\n    .required('Please enter your last name.'),\n  email: Yup.string()\n    .label('email')\n    .email('Enter a valid email.')\n    .required('Please enter your email.'),\n  password: Yup.string()\n    .label('password')\n    .matches(/[a-z]/, 'at least one lowercase char')\n    .matches(/[A-Z]/, 'at least one uppercase char')\n    .matches(/[a-zA-Z]+[^a-zA-Z\\s]+/, 'at least 1 number or special char (@,!,#, etc).')\n    .min(8, 'Must be at least 8 characters.')\n    .required('Please enter your desired password.'),\n  passwordConfirmation: Yup.string()\n    .oneOf([Yup.ref('password'), '', null], 'Passwords must match.')\n    .required('Please confirm your password.'),\n  \n});\n\nexport const validationSchemaApp = Yup.object().shape({\n  app: Yup.string()\n    .label('app')\n    .required('Please enter desired app name.'),\n  description: Yup.string()\n    .label('description')\n    .required('Please enter app description.'),\n  terms: Yup.boolean()\n    .label('terms')\n    .oneOf([true], 'Must Accept Terms and Conditions')\n    .required('Please click agree on terms before you can proceed'),\n});\n\n\n\nexport const validationSchemaCreditCard = Yup.object().shape({\n  cardNumber: Yup.string()\n    .label('Card number')\n    .max(16)\n    .test('test-number',\n    'Credit Card number is invalid',\n     value => valid.number(value).isValid)\n    .required(),\n  cardName: Yup.string()\n    .label('Name on card')\n    .required(),\n  cvc: Yup.string()\n    .label('CVC')\n    .min(3)\n    .max(4)\n    .required(),\n  expiryMonth: Yup.string()\n    .label('Expiry month')\n    .min(2)\n    .max(2)\n    .required(),\n  expiryYear: Yup.string()\n    .label('Expiry year')\n    .min(4)\n    .max(4)\n    .required(),\n});\n\nexport const creditCardExpirationYear = () => {\n  const years = [];\n  const dateStart = moment();\n  const dateEnd = moment().add(10, 'y');\n  while (dateEnd.diff(dateStart, 'years') >= 0) {\n    const year = dateStart.format('YYYY');\n    years.push({ value: year, label: year });\n    dateStart.add(1, 'year');\n  }\n  return years;\n}\n\nexport const creditCardExpirationMonth = () => {\n  const months = [];\n  const dateStart = moment();\n  const dateEnd = moment().add(11, 'month');\n  while (dateEnd.diff(dateStart, 'months') >= 0) {\n    const monthNumber = dateStart.format('MM');\n    const monthName = dateStart.format('MMMM');\n    months.push({ value: monthNumber, label: monthName });\n    dateStart.add(1, 'month');\n  }\n  return months;\n}","import React from \"react\";\nimport { Formik, Form } from \"formik\";\n\nimport { Wrapper, Row, ErrorContainer } from \"../RegistrationForm.style\";\nimport RegistrationField from \"../RegistrationField\";\n\nimport {\n  creditCardExpirationMonth,\n  creditCardExpirationYear\n} from \"./registration-util.js\";\n\nconst CreditCardDetailsForm = ({\n  initialValues,\n  validationSchema,\n  onSubmit,\n  formError\n}) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ isSubmitting, isValid, dirty, isValidating }) => (\n        <Form class=\"form\">\n          <div class=\"form__input\">\n            <RegistrationField\n              placeholder=\"Name on Card:\"\n              type=\"text\"\n              name=\"cardName\"\n            />\n          </div>\n          <div class=\"form__input flex-row\">\n            <div class=\"flex\">\n              <div class=\"form__input\" style={{ width: \"300px\" }}>\n                <RegistrationField\n                  placeholder=\"Card Number:\"\n                  type=\"text\"\n                  name=\"cardNumber\"\n                />\n              </div>\n              <div class=\"\" style={{ width: \"100px\", marginLeft: \"8px\" }}>\n                <RegistrationField placeholder=\"CVC:\" type=\"text\" name=\"cvc\" />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form__input flex-row\">\n            <div class=\"flex items-center\">\n              <div>Expiration Date</div>\n\n              <div class=\"\" style={{ marginLeft: \"8px\" }}>\n                <RegistrationField\n                  placeholder=\"Month\"\n                  as=\"select\"\n                  name=\"expiryMonth\"\n                  options={creditCardExpirationMonth()}\n                />\n              </div>\n              <div class=\"\" style={{ marginLeft: \"8px\" }}>\n                <RegistrationField\n                  placeholder=\"Year\"\n                  as=\"select\"\n                  name=\"expiryYear\"\n                  options={creditCardExpirationYear()}\n                />\n              </div>\n            </div>\n          </div>\n          <div class=\"form__input\">\n            <button\n              type=\"submit\"\n              class=\"button button--yellow\"\n              disabled={isSubmitting || !isValid || isValidating || !dirty}\n            >\n              Sign Up!\n            </button>\n          </div>\n          {formError && <ErrorContainer>{formError}</ErrorContainer>}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreditCardDetailsForm;\n","import React, { useState } from \"react\";\nimport \"./modal.css\";\nconst Modal = props => (\n  <>\n    <div class=\"dialog__backdrop\" onClick={props.onClose}></div>\n    <div\n      className={\n        props.progress\n          ? \"dialog text-center dialog__bordered\"\n          : \"dialog text-center\"\n      }\n    >\n      <div class=\"dialog__close\">\n        <button\n          onClick={props.onClose}\n          type=\"button\"\n          aria-label=\"Close Account Info Modal Box\"\n        >\n          &times;\n        </button>\n      </div>\n      {props.progress && (\n        <div class=\"dialog__progress\" style={{ width: props.progress }}></div>\n      )}\n      {props.children}\n    </div>\n  </>\n);\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { REGISTER_USER } from \"@nostack/no-stack\";\n\nimport { Wrapper } from \"./RegistrationForm.style\";\nimport BasicDetailsForm from \"./stepper/BasicDetailsForm\";\nimport AppDetailsForm from \"./stepper/AppDetailsForm.js\";\nimport CreditCardDetailsForm from \"./stepper/CreditCardDetailsForm\";\nimport Modal from \"../Modal\";\n\nimport {\n  validationSchemaBasic,\n  validationSchemaApp,\n  validationSchemaCreditCard\n} from \"./stepper/registration-util.js\";\n\nconst initialValues = {\n  username: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  passwordConfirmation: \"\",\n  app: \"\",\n  description: \"\",\n  cardName: \"\",\n  cardNumber: \"\",\n  cvc: \"\",\n  expiryMonth: \"\",\n  expiryYear: \"\"\n};\n\nconst RegistrationForm = (props, { userClassId, onSuccess }) => {\n  const [register] = useMutation(REGISTER_USER);\n  const [registrationCompleted, setRegistrationCompleted] = useState(false);\n  const [formError, setFormError] = useState(\"\");\n\n  /*\n    A \"stepper\" is created and uses state to be sure that:\n     1. no child form is visible (haven't pushed \"submit\")\n     2. the child form (or it's child) is visible;\n     3. the submit has been pushed on the sequence of child forms, and it's time to call submit\n     4. The submission succeeded, and the final welcome message should be visible.\n   */\n  const [step, setStep] = useState(1);\n\n  const [username, setUsername] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [app, setApp] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // const formValuesTemp = \"{\\\"app\\\":\\\"newApp\\\",\\\"description\\\":\\\"newApp Desc\\\",\\\"creditCardNumber\\\":\\\"232\\\",\\\"expirationDate\\\":\\\"234243\\\",\\\"csv\\\":\\\"46\\\"}\";\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    setFormError(\"\");\n    if (values.password !== values.passwordConfirmation) {\n      return;\n    }\n    const formValuesTemp = {\n      app,\n      description,\n      creditCardNumber: values.cardNumber,\n      creditCardName: values.cardName,\n      expirationDate: `${values.expiryMonth}/${values.expiryYear}`,\n      csv: values.cvc\n    };\n\n    try {\n      await register({\n        variables: {\n          userClassId,\n          username: username,\n          firstName,\n          lastName,\n          email,\n          password,\n          formValues: formValuesTemp\n        }\n      });\n\n      setRegistrationCompleted(true);\n\n      if (onSuccess) {\n        onSuccess();\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(error.graphQLErrors);\n\n      setFormError(\"Something went wrong. Please try again.\");\n    }\n\n    setSubmitting(false);\n  };\n\n  // if (registrationCompleted) {\n  //   return (\n  //     <Wrapper>\n  //       <p>\n  //         Successfully created account! Please check your email for a\n  //         verification message. Push that, and you're in!\n  //       </p>\n  //     </Wrapper>\n  //   );\n  // }\n\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n\n  const handleSubmitBasicForm = (values, { setSubmitting }) => {\n    setFormError(\"\");\n    if (values.password !== values.passwordConfirmation) {\n      return;\n    }\n    setUsername(values.username);\n    setFirstName(values.firstName);\n    setLastName(values.lastName);\n    setEmail(values.email);\n    setPassword(values.password);\n    setSubmitting(false);\n    nextStep();\n  };\n\n  const handleSubmitAppForm = (values, { setSubmitting }) => {\n    setFormError(\"\");\n    setApp(values.app);\n    setDescription(values.description);\n    setSubmitting(false);\n    nextStep();\n  };\n\n  const displayCurrentStep = () => {\n    switch (step) {\n      case 1:\n        return (\n          <BasicDetailsForm\n            onSwitch={props.onSwitch}\n            initialValues={initialValues}\n            validationSchema={validationSchemaBasic}\n            onSubmit={handleSubmitBasicForm}\n            formError={formError}\n          />\n        );\n\n      case 2:\n        return (\n          <AppDetailsForm\n            initialValues={initialValues}\n            validationSchema={validationSchemaApp}\n            onSubmit={handleSubmitAppForm}\n            formError={formError}\n          />\n        );\n\n      case 3:\n        return (\n          <CreditCardDetailsForm\n            initialValues={initialValues}\n            validationSchema={validationSchemaCreditCard}\n            onSubmit={handleSubmit}\n            formError={formError}\n          />\n        );\n\n      default:\n        return (\n          <BasicDetailsForm\n            initialValues={initialValues}\n            validationSchema={validationSchemaBasic}\n            onSubmit={handleSubmitBasicForm}\n            formError={formError}\n          />\n        );\n    }\n  };\n\n  const displayCurrentDescription = () => {\n    switch (step) {\n      case 1:\n        return {\n          enterText: \"ENTER DETAILS\",\n          buttonText: \"SIGN UP\",\n          progressWidth: \"33%\"\n        };\n\n      case 2:\n        return {\n          enterText: \"ENTER APP DESCRIPTION\",\n          buttonText: \"MAKE MY APP NOW\",\n          progressWidth: \"66%\"\n        };\n\n      case 3:\n        return {\n          enterText: \"CREDIT CARD DETAILS\",\n          buttonText: \"MAKE MY APP NOW\",\n          progressWidth: \"100%\"\n        };\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        progress={displayCurrentDescription().progressWidth}\n        onClose={props.onClose}\n      >\n        <div class=\"dialog__title\">\n          <div class=\"dialog__step\">\n            STEP <span class=\"teal--text\"> {step} </span> of 3\n          </div>\n          <h3>{displayCurrentDescription().enterText}</h3>\n        </div>\n        {step == 3 && (\n          <p class=\"dialog__text\">\n            You won’t be charged a thing until you commit to it explicitly. In\n            fact, the initial consultation is{\" \"}\n            <strong class=\"teal--text\">FREE</strong>.\n            <br />\n            <br />\n            We just need your credit card in advance to cover ourselves.\n          </p>\n        )}\n        {displayCurrentStep()}\n      </Modal>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import React, { useState } from 'react';\n\nconst SendCodeForm = ({ onSubmit, onCancel, error, disabled }) => {\n  const [email, setEmail] = useState('');\n\n  const handleChange = e => {\n    e.preventDefault();\n\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(email);\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n\n    onCancel();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Reset Password</h3>\n      <div>\n        Your Username/Email:\n        <input type=\"text\" onChange={handleChange} disabled={disabled} />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={disabled || !email}>\n          Send Code\n        </button>\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>\n          Cancel\n        </button>\n      </div>\n      {error && <div>{error}</div>}\n    </form>\n  );\n};\n\nexport default SendCodeForm;\n","import React, { useState } from 'react';\n\nconst ResetPasswordForm = ({ onSubmit, onCancel, disabled, error }) =>{\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [code, setCode] = useState('');\n  const [formError, setFormError] = useState('');\n\n  const handlePasswordChange = e => {\n    e.preventDefault();\n\n    setPassword(e.target.value);\n  };\n\n  const handlePasswordConfirmChange = e => {\n    e.preventDefault();\n\n    setPasswordConfirm(e.target.value);\n  };\n\n  const handleCodeChange = e => {\n    e.preventDefault();\n\n    setCode(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setFormError('');\n\n    if (password !== passwordConfirm) {\n      setFormError('New password and confirmation must match.');\n      return;\n    }\n\n    onSubmit(password, code);\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n\n    onCancel();\n  }\n\n  const formIncomplete = !password || !passwordConfirm || !code;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Reset Password</h3>\n      <p>A password reset code has been sent to your email. Enter the code below.</p>\n      <div>\n        New Password:\n        <input type=\"password\" onChange={handlePasswordChange} disabled={disabled} />\n      </div>\n      <div>\n        Confirm Password:\n        <input \n          type=\"password\"\n          onChange={handlePasswordConfirmChange} \n          disabled={disabled} \n        />\n      </div>\n      <div>\n        Password Reset Code:\n        <input type=\"password\" onChange={handleCodeChange} disabled={disabled} />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={disabled || formIncomplete}>Change Password</button>\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>Cancel</button>\n      </div>\n      {error && <div>{error}</div>}\n      {formError && <div>{formError}</div>}\n    </form>\n  );\n};\n\nexport default ResetPasswordForm;\n","import React, { useState } from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport compose from '@shopify/react-compose';\nimport styled from 'styled-components';\nimport { withNoStack, FORGOT_PASSWORD, RESET_PASSWORD } from '@nostack/no-stack';\n\nimport SendCodeForm from './SendCodeForm';\nimport ResetPasswordForm from './ResetPasswordForm';\n\nconst Button = styled.button`\n  border: none;\n  text-decoration: underline;\n  background: none;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nconst ForgotPasswordButton = ({ getPasswordResetCode, resetPassword, platformId }) => {\n  const [formVisible, setFormVisible] = useState(false);\n  const [userNameOrEmail, setUsernameOrEmail] = useState('');\n  const [passwordReset, setPasswordReset] = useState(false);\n  const [error, setError] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const showForm = () => setFormVisible(true);\n\n  const hideForm = () => {\n    setError('');\n    setSubmitting(false);\n    setPasswordReset(false);\n    setFormVisible(false);\n    setUsernameOrEmail('');\n  };\n\n  const handleEmailSubmit = async userNameOrEmail => {\n    setError('');\n    setSubmitting(true);\n    \n    try {\n      await getPasswordResetCode({\n        variables: {\n          userNameOrEmail,\n          stackId: platformId,\n        },\n      });\n\n      setUsernameOrEmail(userNameOrEmail);\n    } catch (e) {\n      setError('Something went wrong. Please try again.');\n    }\n\n    setSubmitting(false);\n  };\n\n  const handlePasswordSubmit = async (password, code) => {\n    setError('');\n    setSubmitting(true);\n\n    try {\n      await resetPassword({\n        variables: {\n          userNameOrEmail, \n          password,\n          code,\n          stackId: platformId,\n        },\n      });\n\n      setPasswordReset(true);\n    } catch (e) {\n      setError('Something went wrong. Please try again.');\n    }\n\n    setSubmitting(false);\n  };\n\n  if (!formVisible) {\n    return (\n      <Button type=\"button\" onClick={showForm}>\n        Forgot Password?\n      </Button>\n    );\n  }\n\n  if (!userNameOrEmail) {\n    return (\n      <SendCodeForm \n        onSubmit={handleEmailSubmit}\n        onCancel={hideForm} \n        disabled={submitting}\n        error={error}\n      /> \n    );\n  }\n\n  if (userNameOrEmail && !passwordReset) {\n    return (\n      <ResetPasswordForm\n        onSubmit={handlePasswordSubmit}\n        onCancel={hideForm} \n        disabled={submitting}\n        error={error}\n      />\n    );\n  }\n\n  return (\n    <p>\n      Your password has been reset. You may now login.\n      <Button type=\"button\" onClick={hideForm}>Ok.</Button>\n    </p>\n  );\n};\n\nexport default compose(\n  graphql(FORGOT_PASSWORD, { name: 'getPasswordResetCode' }),\n  graphql(RESET_PASSWORD, { name: 'resetPassword' }),\n  withNoStack,\n)(ForgotPasswordButton);\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"../Modal\";\nimport { withNoStack } from \"@nostack/no-stack\";\n\nimport ForgotPasswordButton from \"../ForgotPasswordButton\";\n\nconst LoginForm = (props, { loading, currentUser, login }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  if (loading || currentUser) {\n    return null;\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    setIsSubmitting(true);\n\n    try {\n      await login({\n        username,\n        password\n      });\n    } catch (error) {\n      setError(\n        error.message ||\n          (error.graphQLErrors &&\n            error.graphQLErrors.length &&\n            error.graphQLErrors[0]) ||\n          error\n      );\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Modal onClose={props.onClose}>\n      <div class=\"dialog__title\">\n        <img src=\"images/Pivotate Logo.png\" />\n        <h3>LOGIN</h3>\n      </div>\n      <form onSubmit={handleSubmit} class=\"form\">\n        <div class=\"form__input\">\n          <label htmlFor=\"nostack-username\">\n            <input\n              id=\"nostack-username\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              disabled={isSubmitting}\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n          </label>\n        </div>\n        <div class=\"form__input\">\n          <label htmlFor=\"nostack-password\">\n            <input\n              id=\"nostack-password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              disabled={isSubmitting}\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n          </label>\n        </div>\n        <div class=\"form__input\">\n          <button\n            class=\"button button--yellow\"\n            type=\"submit\"\n            disabled={isSubmitting || !username || !password}\n          >\n            Log In\n          </button>\n        </div>\n        {error && <div class=\"form__input\">{error}</div>}\n\n        <br />\n        <div>\n          <small>or</small>\n        </div>\n        <div class=\"flex justify-space-between\">\n          <button type=\"button\" class=\"button button--fb\">\n            Log in with\n            <img class=\"social-icon\" height=\"14\" src=\"images/facebook.png\" />\n          </button>\n          <div style={{ width: \"50px\" }}></div>\n          <button type=\"button\" class=\"button button--google\">\n            Log in with\n            <img class=\"social-icon\" height=\"14\" src=\"images/google plus.png\" />\n          </button>\n        </div>\n        <br />\n        <small>\n          Dont have an account?\n          <a href=\"#\" class=\"teal--text\" onClick={props.onSwitch}>\n            &nbsp; Sign Up\n          </a>\n        </small>\n      </form>\n      {/* <div class=\"form__input\">\n        <ForgotPasswordButton />\n      </div> */}\n    </Modal>\n  );\n};\n\nexport default withNoStack(LoginForm);\n","import React, { Component } from \"react\";\n\nimport { LogoutButton } from \"@nostack/no-stack\";\nimport RegistrationForm from \"../../components/RegistrationForm\";\nimport LoginForm from \"../../components/LoginForm\";\n\nclass NavBar extends Component {\n  state = {\n    modalRegistration: false,\n    modalLogin: false\n  };\n\n  // Events\n  modalHandlerRegistration = () => {\n    this.setState({\n      modalRegistration: !this.state.modalRegistration\n    });\n  };\n\n  modalHandlerLogin = () => {\n    this.setState({\n      modalLogin: !this.state.modalLogin\n    });\n  };\n\n  modalHandlerSwitchForm = () => {\n    this.modalHandlerRegistration();\n    this.modalHandlerLogin();\n  };\n\n  render() {\n    return (\n      <header className=\"container header flex items-center\">\n        <div className=\"header__logo\">\n          <a href=\"/\">\n            <img src=\"images/Pivotate Logo.png\" alt=\"Pivotate Logo\" />\n          </a>\n        </div>\n        {this.state.modalRegistration && (\n          <RegistrationForm\n            onSwitch={this.modalHandlerSwitchForm}\n            onClose={this.modalHandlerRegistration}\n          />\n        )}\n        {this.state.modalLogin && (\n          <LoginForm\n            onSwitch={this.modalHandlerSwitchForm}\n            onClose={this.modalHandlerLogin}\n          />\n        )}\n        <nav className=\"hide-tablet\">\n          <ul className=\"flex header__nav\">\n            <li>\n              <a href=\"/pricing\">PRICING</a>\n            </li>\n            <li>\n              <a href=\"#\">HOW IT WORKS </a>\n            </li>\n            <li>\n              <a href=\"#\">ABOUT US </a>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"grow-12 text-right hide-tablet\">\n          <a onClick={this.modalHandlerLogin}> LOGIN </a>\n          <LogoutButton />\n          <a\n            onClick={this.modalHandlerRegistration}\n            className=\"button button--yellow button__sign-up\"\n          >\n            SIGN UP\n          </a>\n        </div>\n        <div className=\"show-tablet\">\n          <div id=\"amp-burger\">\n            <div className=\"lines\">\n              <input type=\"checkbox\" className=\"checkbox\" />\n              <div className=\"lines-icon\" data-menu=\"\">\n                <div className=\"icon-left\"></div>\n                <div className=\"icon-right\"></div>\n              </div>\n              <div className=\"mobile-menu__wrapper\">\n                <ul>\n                  <li>\n                    <a href=\"/pricing\">PRICING</a>\n                  </li>\n                  <li>\n                    <a href=\"#\">HOW IT WORKS </a>\n                  </li>\n                  <li>\n                    <a href=\"#\">ABOUT US </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" onClick={this.modalHandlerLogin}>\n                      {\" \"}\n                      LOGIN{\" \"}\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"/dialogs.html\"\n                      className=\"button button--yellow button__sign-up\"\n                    >\n                      FREE CONSULTATION\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nconst AppFooter = () => (\n  <footer class=\"footer\">\n    <div class=\"footer__sign-up  \">\n      <div class=\"container triangle--white triangle\">\n        <div class=\"flex\">\n          <div class=\"grow-6\">\n            <h2>\n              <div>Don't settle with</div>\n              <div>templates or freelancers!</div>\n            </h2>\n          </div>\n          <div class=\"grow-6 text-center\">\n            <a href=\"/dialogs.html\" class=\"button button--large button--teal\">\n              SIGN UP <span class=\"chevron right\"></span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"footer__content\">\n      <div class=\"container\">\n        <div class=\"flex\">\n          <div class=\" grow-6\">\n            <div>\n              <img src=\"images/Pivotate Logo Invert.png\" alt=\"Pivotate Logo\" />\n            </div>\n            <div>\n              <ul class=\"flex external__links\">\n                <li>FAQs</li>\n                <li>Blog</li>\n                <li>Contact</li>\n              </ul>\n            </div>\n            <div class=\"powered-by\">\n              <span class=\"grey--text\"> Powered By </span>\n              <a href=\"#\" class=\"teal--text\">\n                {\" \"}\n                NoStack\n              </a>\n            </div>\n          </div>\n          <div class=\"grow-6 \">\n            <div class=\"flex footer__group-links\">\n              <div class=\"grow-4\">\n                <div class=\"footer__title\">Connect with us</div>\n                <ul class=\"footer__links\">\n                  <li>Facebook</li>\n                  <li>LinkedIn</li>\n                </ul>\n              </div>\n              <div class=\"grow-4\">\n                <div class=\"footer__title\">About</div>\n                <ul class=\"footer__links\">\n                  <li>About Us</li>\n                  <li>How it Works</li>\n                  <li>Pricing</li>\n                  <li>\n                    <a href=\"/dialogs.html\" class=\"teal--text\">\n                      Sign Up Now\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              <div class=\"grow-4\">\n                <div class=\"footer__title\">Terms</div>\n                <ul class=\"footer__links\">\n                  <li>Terms of Use</li>\n                  <li>Privacy</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"text-center copyright\">Copyright © 2020 Pivotate</div>\n      </div>\n    </div>\n  </footer>\n);\n\nexport default AppFooter;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <main role=\"main\">\n      {/* hero */}\n      <section className=\"hero triangle--teal triangle\">\n        <div className=\"container full-width\">\n          <div className=\"flex items-center\">\n            <div className=\"hero__header\">\n              <div className=\"hero__text\">\n                <strong>CREATE A </strong>\n              </div>\n              <h1 className=\"yellow--text\">PRO WEB APP</h1>\n              <div className=\"hero__text has--underline\">\n                <strong>WITHOUT A TEAM</strong>\n              </div>\n              <p>\n                So you know what you want in your app, but you don’t have a\n                programming team? Pivotate is the answer.\n                <br />\n                <br />\n                We custom design your web app or site for a low price, and allow\n                you to change it almost as easily as if you had your own team.\n              </p>\n              <div className=\"button__wrapper\">\n                <a\n                  href=\"/dialogs.html\"\n                  className=\"button button--rounded button--yellow\"\n                >\n                  GET STARTED <span className=\"chevron right\"></span>\n                </a>\n              </div>\n            </div>\n            <img\n              className=\"hero__img\"\n              src=\"images/Pivotate Hero.png\"\n              alt=\"Pivotate Hero\"\n            />\n          </div>\n        </div>\n      </section>\n      {/* hero end */}\n\n      {/* about */}\n      <section className=\"about\">\n        <h2 className=\"text-center\">\n          <span className=\"headline headline--teal\"> ABOUT PIVOTATE </span>\n        </h2>\n        <div className=\"container\">\n          <div className=\"flex items-center\">\n            <img\n              src=\"images/About Pivotate.png\"\n              className=\"about__img\"\n              alt=\"About Pivotate\"\n            />\n            <p className=\"about__text\">\n              Outsourcing your app to freelancers leads to huge headaches, and\n              burns all of your cash when you start to pivot.\n              <br />\n              <br />\n              Pivotate offers a more natural approach than freelancer sites and\n              outsourcing companies. We maintain a very flexible version of your\n              app. You can work in small, inexpensive steps.\n              <br />\n              <br />\n              See what your market really wants, and pivot as needed!\n            </p>\n          </div>\n        </div>\n      </section>\n      {/* end about */}\n\n      {/* how it works */}\n      <section className=\"how-it-works  triangle--grey triangle\">\n        <h2 className=\"text-center\">\n          <span className=\"headline headline--teal\"> HOW IT WORKS </span>\n        </h2>\n        <div className=\"subheadline text-center\">\n          Pay a small monthly fee, but pivot with ease!\n        </div>\n        <div className=\"container\">\n          <div\n            id=\"how-it-works__img\"\n            className=\"how-it-works__img\"\n            alt=\"How It Works\"\n          />\n        </div>\n      </section>\n      {/* how it works end */}\n\n      {/* why it works */}\n      <section className=\"why-it-works\">\n        <div className=\"flex flex-column \">\n          <h2 className=\"text-center\">\n            <span className=\"headline headline--yellow\">WHY IT WORKS</span>\n          </h2>\n          <div className=\"container full-width flex items-center\">\n            <p className=\"why-it-works__text\">\n              Our framework makes coding simpler and easier. The developer just\n              works on the user interface.\n            </p>\n            <img\n              className=\"why-it-works__img\"\n              src=\"images/Why It Works.png\"\n              alt=\"Why It Works\"\n            />\n          </div>\n        </div>\n      </section>\n      {/* why it works end */}\n\n      <section className=\"pricing\">\n        <h2 className=\"text-center\">\n          <span className=\"headline headline--yellow\">PRICING</span>\n        </h2>\n        <div className=\"subheadline text-center\">\n          Hosting (Server): $20/month.\n          <div>\n            Pay By the Change (see for\n            <a href=\"pricing.html\" className=\"teal--text\">\n              price list\n            </a>\n            precise details):\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"flex\">\n            <div className=\"grow-3\">\n              <div className=\"card\">\n                <div className=\"card__title\">Minimal App</div>\n                <div className=\"card__price\">$200</div>\n              </div>\n            </div>\n            <div className=\"grow-3\">\n              <div className=\"card\">\n                <div className=\"card__title\">Landing Page + App</div>\n                <div className=\"card__price\">$380</div>\n              </div>\n            </div>\n            <div className=\"grow-3\">\n              <div className=\"card\">\n                <div className=\"card__title\">Standard Pivot</div>\n                <div className=\"card__price\">$5-100</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Pricing = () => {\n  return (\n    <div className=\"container\" style={{ height: \"50vh\" }}>\n      <h3>Pricing </h3>\n      <br></br>\n    </div>\n  );\n};\n\nexport default Pricing;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst MenuContainer = styled.div`\n  padding: 1em;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  box-shadow: 10px 10px 8px rgba(0, 0, 0, 0.6);\n\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button(({ selected }) => `\n  font-size: 1.25em;\n  background-color: #ffffff;\n  opacity: ${selected ? 1.0 : 0.5};\n  border: none;\n  padding: 5px;\n  cursor: ${selected ? 'initial' : 'pointer'};\n  transition: opacity 0.5s ease;\n\n  &:hover {\n    opacity: 1.0;\n    text-decoration: underline;\n  }\n`);\n\nconst AuthTabs = ({ menuTitles, children }) => {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <div>\n      <MenuContainer>\n        {menuTitles.map((title, index) => (\n          <Button\n            key={index}\n            selected={index === selectedTab}\n            onClick={e => {\n              e.preventDefault();\n              setSelectedTab(index);\n            }}\n          >\n            {title}\n          </Button>\n        ))}\n      </MenuContainer>\n      <div>\n        {React.Children.map(children, (child, index) => {\n          if (index !== selectedTab) {\n            return null;\n          }\n\n          return (\n            <div className=\"test\" key={index}>{child}</div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default AuthTabs;\n","export function flattenChildData(element) {\n  const flatData ={\n    typeId: element.typeId,\n    instances: []\n  };\n\n  if (element.instances && element.instances.length > 0) {\n    flatData.instances = element.instances.filter(child => !!child).map(\n      instance => flattenData(instance)\n    );\n  }\n\n  return flatData;\n};\n\nexport function flattenData(element) {\n  const flatData = {\n    ...element.instance,\n    children: []\n  };\n\n  if (element.children && element.children.length > 0) {\n    flatData.children = element.children.filter(child => !!child).map(\n      child => flattenChildData(child)\n    );\n  }\n\n  return flatData;\n};\n","import React, { useState } from \"react\";\nimport { graphql } from \"@apollo/react-hoc\";\nimport styled from \"styled-components\";\nimport { EXECUTE_ACTION } from \"@nostack/no-stack\";\nimport compose from \"@shopify/react-compose\";\n\n// import { CREATE_APP_FOR_REGISTRATION_INFO_ACTION_ID } from '../../../config';\n\n// change styling here\nconst Form = styled.div`\n  margin: 2em;\n  padding: 1.5em;\n  border: none;\n  border-radius: 5px;\n  background-color: #f5f5f5;\n`;\n\nconst Button = styled.button`\n  margin-left: 1em;\n`;\n\nfunction AppCreationForm({ customerId, createApp, refetchQueries }) {\n  const [appValue, updateAppValue] = useState(\"\");\n  const [loading, updateLoading] = useState(false);\n\n  function handleChange(e) {\n    updateAppValue(e.target.value);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!appValue) {\n      return;\n    }\n    updateLoading(true);\n\n    // const createAppResponse = await createApp({\n    //   variables: {\n    //     actionId: CREATE_APP_FOR_REGISTRATION_INFO_ACTION_ID,\n    //     executionParameters: JSON.stringify({\n    //       parentInstanceId: customerId,\n    //       value: appValue,\n    //     }),\n    //     unrestricted: false,\n    //   },\n    //   refetchQueries\n    // });\n\n    // const newAppData = JSON.parse(createAppResponse.data.ExecuteAction);\n\n    updateAppValue(\"\");\n    updateLoading(false);\n  }\n\n  function handleKeyPress(e) {\n    if (e.charCode === 13) {\n      handleSubmit(e);\n    }\n  }\n\n  return (\n    <Form>\n      <label htmlFor=\"app-value\">\n        App:\n        <input\n          id=\"app-value\"\n          type=\"text\"\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          value={appValue}\n          disabled={loading}\n        />\n      </label>\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\n        {loading ? \"Creating App...\" : \"Create App\"}\n      </Button>\n    </Form>\n  );\n}\n\nexport default compose(graphql(EXECUTE_ACTION, { name: \"createApp\" }))(\n  AppCreationForm\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nfunction EditInstanceForm({\n  id,\n  label,\n  value,\n  onChange,\n  onSave,\n  onCancel,\n  disabled,\n}) {\n  return (\n    <>\n      <label htmlFor={id}>\n        {label}\n        <input\n          id={id}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      </label>\n      <Button\n        type=\"button\"\n        hoverColor=\"#00FF00\"\n        onClick={onSave}\n        disabled={disabled}\n      >\n        &#10003;\n      </Button>\n      <Button\n        type=\"button\"\n        hoverColor=\"#FF0000\"\n        onClick={onCancel}\n        disabled={disabled}\n      >\n        &#10005;\n      </Button>\n    </>\n  );\n}\n\nexport default EditInstanceForm;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nconst Container = styled.div`\n  color: red;\n  margin: 1em;\n  padding: 1em;\n  border: 1px solid #eeeeee;\n`;\n\nfunction DeleteInstanceMenu({\n  onDelete,\n  onCancel,\n  disabled,\n}) {\n  return (\n    <Container>\n      Delete?\n      <Button\n        type=\"button\"\n        hoverColor=\"#00FF00\"\n        onClick={onDelete}\n        disabled={disabled}\n      >\n        &#10003;\n      </Button>\n      <Button\n        type=\"button\"\n        hoverColor=\"#FF0000\"\n        onClick={onCancel}\n        disabled={disabled}\n      >\n        &#10005;\n      </Button>\n    </Container>\n  )\n}\n\nexport default DeleteInstanceMenu;\n","import React, { useState } from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport styled from 'styled-components';\nimport { EXECUTE_ACTION } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\n\n// import { CREATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID } from '../../../config';\n\n// change styling here\nconst Form = styled.div`\n  margin: 2em;\n  padding: 1.5em;\n  border: none;\n  border-radius: 5px;\n  background-color: #F5F5F5;\n`;\n\nconst Button = styled.button`\n  margin-left: 1em;\n`;\n\nfunction DescriptionCreationForm({ parentId, createDescription, refetchQueries }) {\n  const [ descriptionValue, updateDescriptionValue ] = useState('');\n  const [ loading, updateLoading ] = useState(false);\n\n  function handleChange(e) {\n    updateDescriptionValue(e.target.value);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!descriptionValue) {\n      return;\n    }\n\n    updateLoading(true);\n\n    // const createDescriptionResponse = await createDescription({\n    //   variables: {\n    //     actionId: CREATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n    //     executionParameters: JSON.stringify({\n    //       parentInstanceId: parentId,\n    //       value: descriptionValue,\n    //     }),\n    //     unrestricted: false,\n    //   },\n    //   refetchQueries\n    // });\n\n    // const newDescriptionData = JSON.parse(createDescriptionResponse.data.ExecuteAction);\n\n    \n\n\n    updateDescriptionValue('');\n    updateLoading(false);\n  }\n\n  function handleKeyPress(e) {\n    if (e.charCode === 13) {\n      handleSubmit(e);\n    }\n  }\n\n  return (\n    <Form>\n      <label htmlFor=\"description-value\">\n        Description:\n        <input\n          id=\"description-value\"\n          type=\"text\"\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          value={ descriptionValue }\n          disabled={loading}\n        />\n      </label>\n      <Button type=\"submit\"  disabled={loading}  onClick={handleSubmit}>\n        {\n          loading\n            ? 'Creating Description...'\n            : 'Create Description'\n        }\n      </Button>\n    </Form>\n  );\n}\n\nexport default compose(\n  graphql(EXECUTE_ACTION, { name: 'createDescription' }),\n  \n)(DescriptionCreationForm);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { EXECUTE_ACTION } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\nimport { graphql } from '@apollo/react-hoc';\n\nimport {\n  UPDATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n  DELETE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n} from '../../../config';\n\nimport EditInstanceForm from '../../EditInstanceForm';\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\n\n\n\n\n\n// add styling here\nconst DescriptionStyleWrapper = styled.div(({\n  selected,\n  isDeleting,\n}) => `\n  margin: 2em 1em;\n  padding: 1.5em;\n  border: ${selected ? '1px solid aquamarine': '1px solid white'};\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px #888888;\n  background-color: ${isDeleting && 'tomato'};\n  cursor: ${selected ? 'auto' : 'pointer'};\n\n  &:hover {\n    border: 1px solid aquamarine;\n  }\n`);\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nfunction Description({\n  description,\n  parentId,\n  selected,\n  updateInstance,\n  deleteInstance,\n  refetchQueries,\n  onSelect,\n}) {\n  const [descriptionValue, updateDescriptionValue] = useState(description.value);\n  const [isEditMode, updateIsEditMode] = useState(false);\n  const [isSaving, updateIsSaving] = useState(false);\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\n  const [isDeleting, updateIsDeleting] = useState(false);\n\n  \n\n\n  if (!selected) {\n    return (\n      <DescriptionStyleWrapper onClick={() => onSelect(description.id)}>\n        { descriptionValue }\n      </DescriptionStyleWrapper>\n    );\n  }\n\n  function handleDescriptionValueChange(e) {\n    updateDescriptionValue(e.target.value);\n  }\n\n  async function handleDescriptionValueSave() {\n    updateIsSaving(true);\n\n    await updateInstance({\n      variables: {\n        actionId: UPDATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n        executionParameters: JSON.stringify({\n          value: descriptionValue,\n          instanceId: description.id,\n        }),\n      },\n      refetchQueries,\n    });\n\n    updateIsEditMode(false);\n    updateIsSaving(false);\n  }\n\n  function handleCancelEdit() {\n    updateIsEditMode(false);\n  }\n\n  if (isEditMode) {\n    return (\n      <DescriptionStyleWrapper>\n        <EditInstanceForm\n          id={ description.id }\n          label=\"Description Value:\"\n          value={ descriptionValue }\n          onChange={handleDescriptionValueChange}\n          onSave={handleDescriptionValueSave}\n          onCancel={handleCancelEdit}\n          disabled={isSaving}\n        />\n      </DescriptionStyleWrapper>\n    );\n  }\n\n  async function handleDelete() {\n    updateIsDeleting(true);\n\n    try {\n      await deleteInstance({\n        variables: {\n          actionId: DELETE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID,\n          executionParameters: JSON.stringify({\n            parentInstanceId: parentId,\n            instanceId: description.id,\n          }),\n        },\n        refetchQueries\n      });\n    } catch (e) {\n      updateIsDeleting(false);\n    }\n  }\n\n  function handleCancelDelete() {\n    updateIsDeleteMode(false);\n  }\n\n  if (isDeleteMode) {\n    return (\n      <DescriptionStyleWrapper\n        selected={selected}\n        isDeleting={isDeleting}\n      >\n        { descriptionValue }\n        <DeleteInstanceMenu\n          onDelete={handleDelete}\n          onCancel={handleCancelDelete}\n          disabled={isDeleting}\n        />\n      </DescriptionStyleWrapper>\n    );\n  }\n\n  return (\n    <DescriptionStyleWrapper selected={selected}>\n      { descriptionValue }\n      <Button\n        type=\"button\"\n        onClick={() => updateIsEditMode(true)}\n      >\n        &#9998;\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => updateIsDeleteMode(true)}\n      >\n        &#128465;\n      </Button>\n\n      \n\n\n    </DescriptionStyleWrapper>\n  );\n}\n\nexport default compose(\n  graphql(EXECUTE_ACTION, { name: 'updateInstance' }),\n  graphql(EXECUTE_ACTION, { name: 'deleteInstance' })\n)(Description);\n","/*\n  This file was generated automatically by nostack 'makecode' for the app 'pivotate2a'.\n  If you build a new stack from a template, this version will probably need to change.\n\n  For instance, it will update if you run 'makecode' again. Fair warning, that will\n  change a lot of your code. If you modify your current stack to add actions, sources,\n  or types, it would make sense to add constants here.\n\n  But, you should *not* add permanent, separate configuration material or other material that is not directly\n  'managed by NoStack, because this will will be replaced with every call to 'makecode'.\n */\n\n// stack id\nexport const PLATFORM_ID = 'us-east-1_Lq8L4ZLfA';\n\n// sources\nexport const SOURCE_REGISTRATION_INFO_ID='1b219263-3125-4bb4-a82e-1e181780fbb7';\n\n// types\nexport const TYPE_MODERATOR_ID='us-east-1_Lq8L4ZLfAmoderatorClass';\nexport const TYPE_CUSTOMER_ID='20a2b531-c0be-4509-aee3-2593d0524cfd';\nexport const TYPE_APP_ID='ea1e6967-4ed7-4019-bb47-3f7b7ccd5950';\nexport const TYPE_DESCRIPTION_ID='a0deeed9-bd18-4e96-aaf8-10b83a49cdc0';\nexport const TYPE_CREDIT_CARD_NUMBER_ID='a158f062-f084-4153-826f-cc8765380dc2';\nexport const TYPE_EXPIRATION_DATE_ID='0e7f5ae3-24d0-4e83-8640-fa0087b258ce';\nexport const TYPE_CSV_ID='a807220a-b28f-40eb-a45c-9bdc668dce95';\n\n// actions\n// CREATE_INSTANCE\nexport const CREATE_APP_FOR_REGISTRATION_INFO_ACTION_ID='01b49a59-ac70-479b-a699-31c07209751a';\nexport const CREATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='d618936e-245b-46c8-88a9-288a972c5714';\nexport const CREATE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='72b23144-5b82-4d0a-8c46-399da55c77c8';\nexport const CREATE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='dab0b3c7-5619-4083-bdff-43090e907277';\nexport const CREATE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='fd5c036a-30c6-4576-8cb9-9e1ace40eda7';\n\n// UPDATE_INSTANCE\nexport const UPDATE_APP_FOR_REGISTRATION_INFO_ACTION_ID='2340727a-1309-479e-bcb2-65b76d1686bf';\nexport const UPDATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='b1de94df-2aeb-47c0-8853-a412f02e5315';\nexport const UPDATE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='da20f80c-7165-4c56-be15-f4f18d7e156f';\nexport const UPDATE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='d5639c9b-66ca-49ce-b9f2-923666a6846d';\nexport const UPDATE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='158c6a0c-01a0-4d82-8bf9-bc0c2e19ccd4';\n\n// DELETE_INSTANCE\nexport const DELETE_APP_FOR_REGISTRATION_INFO_ACTION_ID='30d86ee4-d585-4fb9-9a4c-54c8e5902327';\nexport const DELETE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='03a6b7ee-8d8b-47c2-a977-4912060f2c41';\nexport const DELETE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='1f1efa77-3f87-41a4-9c51-5d0e1d842f1e';\nexport const DELETE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='c780d8ff-7f74-4d44-b09e-c69a8656f01f';\nexport const DELETE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='392a2c85-8306-4267-9187-24dd6ec2a7c5';\n\n// ADD_INSTANCE_ASSN\n\n// UPDATE_INSTANCE_ASSN\n\n// DELETE_INSTANCE_ASSN\n\n// CREATE_INSTANCE_WITH_UNOWNED_PARENT\n\n// ADDED\n\n// SUBMIT_FORM\nexport const SUBMIT_FORM_FOR_REGISTRATION_INFO_ACTION_ID='form-submission-add-version-9d2dd0e7-2aca-4212-88bc-59f8bf74e992';\n","import React, { Component, createRef } from 'react';\nimport styled from 'styled-components';\nimport { v4 } from 'uuid';\n\nimport DescriptionCreationForm from '../DescriptionCreationForm';\nimport Description from '../Description';\n\nconst DescriptionsStyleWrapper = styled.div``;\n\n// const Button = styled.button`\n//   display: block;\n//   margin: 0 auto;\n// `;\n\nclass Descriptions extends Component {\n  state = {\n    selectedDescriptionId: null,\n  };\n\n  wrapperRef = createRef();\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  handleClick = e => {\n    const node = this.wrapperRef.current;\n\n    if (\n      node &&\n      node !== e.target &&\n      !node.contains(e.target)\n    ) {\n      this.setState({ selectedDescriptionId: null });\n    }\n  }\n\n  handleSelect = id => this.setState({ selectedDescriptionId: id });\n\n  render () {\n    const { appId, descriptions, refetchQueries, onUpdate } = this.props;\n    const { selectedDescriptionId } = this.state;\n\n    return (\n      <DescriptionsStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\n        <DescriptionCreationForm\n          parentId={ appId }\n          refetchQueries={refetchQueries}\n        />\n\n        { descriptions.map(description => (\n          <Description\n            key={v4()}\n            description={ description }\n            selected={ description.id === selectedDescriptionId }\n            onUpdate={onUpdate}\n            parentId={ appId }\n            refetchQueries={refetchQueries}\n            onSelect={this.handleSelect}\n          />\n        )) }\n      </DescriptionsStyleWrapper>\n    )\n  }\n}\n\nexport default Descriptions;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { EXECUTE_ACTION } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\nimport { graphql } from '@apollo/react-hoc';\n\nimport {\n  UPDATE_APP_FOR_REGISTRATION_INFO_ACTION_ID,\n  DELETE_APP_FOR_REGISTRATION_INFO_ACTION_ID, TYPE_DESCRIPTION_ID,\n} from '../../../config';\n\nimport EditInstanceForm from '../../EditInstanceForm';\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\n\n\nimport Descriptions from '../Descriptions';\n\n\n\n// add styling here\nconst AppStyleWrapper = styled.div(({\n  selected,\n  isDeleting,\n}) => `\n  margin: 2em 1em;\n  padding: 1.5em;\n  border: ${selected ? '1px solid aquamarine': '1px solid white'};\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px #888888;\n  background-color: ${isDeleting && 'tomato'};\n  cursor: ${selected ? 'auto' : 'pointer'};\n\n  &:hover {\n    border: 1px solid aquamarine;\n  }\n`);\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  padding: 0;\n  color: #bbbbbb;\n  transition: color 0.5s ease;\n  &:hover {\n    color: ${props => props.hoverColor || '#000000'};\n  }\n`;\n\nfunction App({\n  app,\n  parentId,\n  selected,\n  updateInstance,\n  deleteInstance,\n  refetchQueries,\n  onSelect,\n}) {\n  const [appValue, updateAppValue] = useState(app.value);\n  const [isEditMode, updateIsEditMode] = useState(false);\n  const [isSaving, updateIsSaving] = useState(false);\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\n  const [isDeleting, updateIsDeleting] = useState(false);\n\n  \n  const descriptionData = app.children && app.children.find(child => child.typeId === TYPE_DESCRIPTION_ID);\n  const descriptions = descriptionData ? descriptionData.instances : [];\n\n\n  if (!selected) {\n    return (\n      <AppStyleWrapper onClick={() => onSelect(app.id)}>\n        { appValue }\n      </AppStyleWrapper>\n    );\n  }\n\n  function handleAppValueChange(e) {\n    updateAppValue(e.target.value);\n  }\n\n  async function handleAppValueSave() {\n    updateIsSaving(true);\n\n    await updateInstance({\n      variables: {\n        actionId: UPDATE_APP_FOR_REGISTRATION_INFO_ACTION_ID,\n        executionParameters: JSON.stringify({\n          value: appValue,\n          instanceId: app.id,\n        }),\n      },\n      refetchQueries,\n    });\n\n    updateIsEditMode(false);\n    updateIsSaving(false);\n  }\n\n  function handleCancelEdit() {\n    updateIsEditMode(false);\n  }\n\n  if (isEditMode) {\n    return (\n      <AppStyleWrapper>\n        <EditInstanceForm\n          id={ app.id }\n          label=\"App Value:\"\n          value={ appValue }\n          onChange={handleAppValueChange}\n          onSave={handleAppValueSave}\n          onCancel={handleCancelEdit}\n          disabled={isSaving}\n        />\n      </AppStyleWrapper>\n    );\n  }\n\n  async function handleDelete() {\n    updateIsDeleting(true);\n\n    try {\n      await deleteInstance({\n        variables: {\n          actionId: DELETE_APP_FOR_REGISTRATION_INFO_ACTION_ID,\n          executionParameters: JSON.stringify({\n            parentInstanceId: parentId,\n            instanceId: app.id,\n          }),\n        },\n        refetchQueries\n      });\n    } catch (e) {\n      updateIsDeleting(false);\n    }\n  }\n\n  function handleCancelDelete() {\n    updateIsDeleteMode(false);\n  }\n\n  if (isDeleteMode) {\n    return (\n      <AppStyleWrapper\n        selected={selected}\n        isDeleting={isDeleting}\n      >\n        { appValue }\n        <DeleteInstanceMenu\n          onDelete={handleDelete}\n          onCancel={handleCancelDelete}\n          disabled={isDeleting}\n        />\n      </AppStyleWrapper>\n    );\n  }\n\n  return (\n    <AppStyleWrapper selected={selected}>\n      { appValue }\n      <Button\n        type=\"button\"\n        onClick={() => updateIsEditMode(true)}\n      >\n        &#9998;\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => updateIsDeleteMode(true)}\n      >\n        &#128465;\n      </Button>\n\n      \n< Descriptions\n              descriptions = { descriptions }\n              appId = { app.id }\n              label=\"Description?\"\n              refetchQueries={refetchQueries}\n      />\n\n\n    </AppStyleWrapper>\n  );\n}\n\nexport default compose(\n  graphql(EXECUTE_ACTION, { name: 'updateInstance' }),\n  graphql(EXECUTE_ACTION, { name: 'deleteInstance' })\n)(App);\n","import gql from 'graphql-tag';\n\n  export const SOURCE_REGISTRATION_INFO_QUERY = gql`\n  query UNIT(\n    $id: ID!\n    $typeRelationships: String!\n    $parameters: String\n  ) {\n    unitData(\n      unitId: $id\n      typeRelationships: $typeRelationships\n      parameters: $parameters\n    )\n    {\n      \n        instance {\n            id\n            value\n        }\n        children {\n            typeId\n            instances {\n                \n\t\tinstance {\n\t\t    id\n\t\t    value\n\t\t}\n            }\n        }\n    \n    }\n  }\n`;\n\nexport const REGISTRATION_INFO_RELATIONSHIPS = {\n   app: {\n        description: null\n    },\n};\n","import React, { Component, createRef } from 'react';\nimport { Unit } from '@nostack/no-stack';\nimport styled from 'styled-components';\nimport { v4 } from 'uuid';\n\nimport { flattenData } from '../../../flattenData';\n\nimport AppCreationForm from '../AppCreationForm';\nimport App from '../App';\n\nimport { SOURCE_REGISTRATION_INFO_ID } from '../../../config';\nimport { REGISTRATION_INFO_RELATIONSHIPS, SOURCE_REGISTRATION_INFO_QUERY } from '../../source-props/appInfo';\n\n// add styling here\nconst AppsStyleWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nclass Apps extends Component {\n  state = {\n    selectedAppId: null,\n  };\n\n  wrapperRef = createRef();\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  handleClick = e => {\n    const node = this.wrapperRef.current;\n\n    if (\n      node &&\n      node !== e.target &&\n      !node.contains(e.target)\n    ) {\n      this.setState({ selectedAppId: null });\n    }\n  }\n\n  handleSelect = id => this.setState({ selectedAppId: id });\n\n  render() {\n    const { customerId } = this.props;\n    const { selectedAppId } = this.state;\n\n    const parameters = {\n      ignoredParameter: customerId,\n    };\n\n    return (\n      <Unit\n        id={ SOURCE_REGISTRATION_INFO_ID }\n        typeRelationships={ REGISTRATION_INFO_RELATIONSHIPS }\n        query={ SOURCE_REGISTRATION_INFO_QUERY }\n        parameters={parameters}\n      >\n        {({loading, error, data, refetchQueries}) => {\n          if (loading) return 'Loading...';\n\n          if (error) {\n            console.error(error);\n            return `Error: ${error.graphQLErrors}`\n          };\n\n          const apps = data.unitData.map(el => flattenData(el));\n\n          return (\n            <>\n              <AppCreationForm  customerId={ customerId } refetchQueries={refetchQueries}/>\n              <AppsStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\n                { apps && apps.map(app => (\n                  <App\n                    key={v4()}\n                    parentId={ customerId }\n                    app={ app }\n                    selected={ app.id === selectedAppId }\n                    refetchQueries={refetchQueries}\n                    onSelect={this.handleSelect}\n                  />\n                )) }\n              </AppsStyleWrapper>\n            </>\n          );\n        }}\n      </Unit>\n    );\n  }\n}\n\nexport default Apps;\n","import React, { useState } from 'react';\nimport { \n  Formik,\n  Form as BareForm,\n  Field as BareField \n} from 'formik';\nimport { graphql } from '@apollo/react-hoc';\nimport { withNoStack, EXECUTE } from '@nostack/no-stack';\nimport compose from '@shopify/react-compose';\nimport styled from 'styled-components';\nimport {SUBMIT_FORM_FOR_REGISTRATION_INFO_ACTION_ID} from \"../../config\";\n\nconst Form = styled(BareForm)`\n  padding: 2em;\n  border: 1px solid black;\n`;\n\nconst Row = styled.p``;\n\nconst Error = styled.p``;\n\nconst Field = styled(BareField)``;\n\nconst Label = styled.label``;\n\nconst SubmitButton = styled.button``;\n\nconst CancelButton = styled.button``;\n\nconst SampleForm = ({ currentUser, onCancel, submitForm, successView }) => {\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [error, setError] = useState('');\n\n  const initialValues = {\n    app: '',\n    description: '',\n    creditCardNumber: '',\n    expirationDate: '',\n    csv: '',\n    creditCardName: '',\n  };\n\n  const handleSubmit = async ({ app, description, creditCardNumber, expirationDate, csv, creditCardName }, { setSubmitting }) => {\n    setError('');\n\n    const executionParameters = JSON.stringify({\n      parentInstanceId: currentUser.id,\n      values: { app, description, creditCardNumber, expirationDate, csv },\n    });\n\n    try {\n      const { data } = await submitForm({\n        variables: {\n          actionId: SUBMIT_FORM_FOR_REGISTRATION_INFO_ACTION_ID,\n          executionParameters,\n          unrestricted: false,\n        },\n      });\n\n      if (!data.Execute) {\n        throw new Error('Null API response.');\n      }\n\n      setIsCompleted(true);\n    } catch (e) {\n      console.log(e);\n\n      setError('Something wrong happened.');\n    }\n\n    setSubmitting(false);\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  if (isCompleted) {\n    return successView;\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Row>\n            <Label htmlFor=\"app\">App</Label>\n            <Field id=\"app\" name=\"app\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"description\">Description</Label>\n            <Field name=\"description\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"creditCardNumber\">Credit Card Number</Label>\n            <Field name=\"creditCardNumber\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"creditCardName\">Credit Card Owner</Label>\n            <Field name=\"creditCardName\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"expirationDate\">Expiration Date</Label>\n            <Field name=\"expirationDate\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <Label htmlFor=\"csv\">CSV (Special code on the back)</Label>\n            <Field name=\"csv\" disabled={isSubmitting} />\n          </Row>\n\n          <Row>\n            <SubmitButton\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Submit\n            </SubmitButton>\n            <CancelButton \n              type=\"button\"\n              disabled={isSubmitting}\n              onClick={handleCancel}\n            >\n              Cancel\n            </CancelButton>\n          </Row>\n          {error && <Error>{error}</Error>}\n        </Form>\n      )}\n    </Formik>\n  )\n};\n\nexport default compose(\n  withNoStack,\n  graphql( EXECUTE, { name: 'submitForm' }),\n)(SampleForm);\n","import React from 'react';\nimport styled from 'styled-components'; \n\nconst Wrapper = styled.div`\n  padding: 2em;\n  border: 1px solid black;\n`;\n\nconst Row = styled.p``;\n\nconst Button = styled.button``;\n\nconst FormSuccess = ({ onDismiss }) => {\n  const handleDismiss = () => onDismiss();\n\n  return (\n    <Wrapper>\n      <Row>\n        Form submitted successfully!\n      </Row>\n      \n      <Row>\n        <Button \n          type=\"button\"\n          onClick={handleDismiss}\n        >\n          Dismiss\n        </Button>\n      </Row>\n    </Wrapper>\n  )\n};\n\nexport default FormSuccess;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport styled from 'styled-components';\n\nimport SampleForm from '../SampleForm';\nimport FormSuccess from '../FormSuccess';\n\nconst Button = styled.button``;\n\nconst modalStyle = {\n  content : {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  }\n};\n\nModal.setAppElement(document.getElementById('root'));\n\nconst FormModal = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const openModal = () => setIsModalVisible(true);\n\n  const closeModal = () => setIsModalVisible(false);\n\n  return (\n    <div>\n      <Button type=\"button\" onClick={openModal}>Open Sample Form Modal</Button>\n      <Modal\n        isOpen={isModalVisible}\n        onRequestClose={closeModal}\n        contentLabel=\"Sample Form\"\n        style={modalStyle}\n      >\n        <SampleForm\n          onCancel={closeModal}\n          successView={\n            <FormSuccess onDismiss={closeModal}/>\n          }\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default FormModal;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport SampleForm from '../SampleForm';\nimport FormSuccess from '../FormSuccess';\n\nconst Wrapper = styled.div`\n  margin: 1em;\n`;\n\nconst Button = styled.button``;\n\nconst FormToggle = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const toggleModal = () => setIsModalVisible(!isModalVisible);\n\n  const closeModal = () => setIsModalVisible(false);\n\n  return (\n    <Wrapper>\n      <Button type=\"button\" onClick={toggleModal}>\n        Show/Hide Sample Form\n      </Button>\n      {isModalVisible && (\n        <SampleForm\n          onCancel={closeModal}\n          successView={\n            <FormSuccess onDismiss={closeModal}/>\n          }\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default FormToggle;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.min.css\";\nimport { NoStackConsumer } from \"@nostack/no-stack\";\n\nimport { PLATFORM_ID, TYPE_CUSTOMER_ID } from \"./config\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\n// Default Layout\nimport AppHeader from \"./components/AppHeader\";\nimport AppFooter from \"./components/AppFooter\";\n\n// Pages\nimport Home from \"./components/Pages/Home\";\nimport Pricing from \"./components/Pages/Pricing\";\n\nimport AuthTabs from \"./components/AuthTabs\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport Apps from \"./components/AppInfo/Apps\";\n\nimport FormModal from \"./components/FormModal\";\nimport FormToggle from \"./components/FormToggle\";\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <AppHeader />\n      {/* main */}\n      <Route exact path=\"/\" component={Home}></Route>\n      <Route path=\"/pricing\" component={Pricing}></Route>\n      <AppFooter />\n      {/* main end */}\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ApolloClient } from \"apollo-client\";\nimport { ApolloLink } from \"apollo-link\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { v4 } from \"uuid\";\n\nimport { createAuthLink, httpLink } from \"@nostack/no-stack\";\n\nimport { PLATFORM_ID } from \"../config\";\n\nconst authLink = createAuthLink(PLATFORM_ID);\n\nconst link = ApolloLink.from([authLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache: new InMemoryCache({\n    dataIdFromObject: object =>\n      object.id ? object.id + object.__typename : v4()\n  })\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { NoStackProvider } from '@nostack/no-stack';\n\nimport { PLATFORM_ID } from './config';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport client from './client';\n\nReactDOM.render(\n  <NoStackProvider client={client} platformId={PLATFORM_ID}>\n    <App />\n  </NoStackProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}