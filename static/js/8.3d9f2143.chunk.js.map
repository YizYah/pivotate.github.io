{"version":3,"sources":["components/EditInstanceForm/index.js","components/DeleteInstanceMenu/index.js","actions/index.js","components/Modal/index.js","flattenData/index.js","components/AppSpec/AppCreationForm/index.js","components/AppSpec/DescriptionCreationForm/index.js","components/source-props/appSpec.js","components/AppSpec/UserTypeCreationForm/index.js","components/AppSpec/ScreenCreationForm/index.js","components/AppSpec/InfoTypeCreationForm/index.js","components/AppSpec/InfoType/index.js","components/AppSpec/InfoTypes/index.js","components/AppSpec/Screen/index.js","components/AppSpec/Screens/index.js","components/AppSpec/UserType/index.js","components/AppSpec/UserTypes/index.js","components/AppSpec/App/index.js","components/AppSpec/Description/index.js","components/AppSpec/Descriptions/index.js","components/RegistrationForm/RegistrationForm.style.js","components/RegistrationForm/RegistrationField.js","components/RegistrationForm/stepper/BasicDetailsForm.js","components/RegistrationForm/stepper/AppDetailsForm.js","components/RegistrationForm/stepper/registration-util.js","components/RegistrationForm/stepper/CreditCardDetailsForm.js","components/RegistrationForm/index.js","components/ForgotPasswordButton/SendCodeForm.js","components/ForgotPasswordButton/ResetPasswordForm.js","components/ForgotPasswordButton/index.js","components/LoginForm/index.js","components/meetingSteps/createUserType.js","components/meetingSteps/jobSeeker.js","components/AuthTabs/index.js","components/AppSpec/Apps/index.js","components/meetingSteps/createApp.js","components/Pages/Staging/index.js"],"names":["Button","styled","button","props","hoverColor","EditInstanceForm","id","label","value","onChange","onSave","onCancel","disabled","htmlFor","type","onClick","Container","div","DeleteInstanceMenu","onDelete","increment","decrement","currentUser","Modal","className","onClose","styleName","progress","fullScreen","aria-label","style","width","children","flattenData","element","flatData","instance","length","filter","child","map","typeId","instances","flattenChildData","compose","graphql","EXECUTE","name","customerId","createApp","refetchQueries","useState","appValue","updateAppValue","loading","updateLoading","dispatch","useHistory","useSelector","state","counter","useDispatch","useRef","handleSubmit","e","a","async","preventDefault","variables","actionId","CREATE_APP_FOR_APP_SPEC_ACTION_ID","executionParameters","JSON","stringify","parentInstanceId","unrestricted","createAppResponse","newAppData","parse","data","Execute","current","wrappedInstance","yell","maxWidth","margin","placeholder","target","onKeyPress","charCode","ref","marginTop","display","marginLeft","DescriptionCreationForm","forwardRef","useImperativeHandle","param","createDescription","descriptionValue","updateDescriptionValue","CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","instanceId","createDescriptionResponse","ExecuteAction","EXECUTE_ACTION","withRef","SOURCE_APP_SPEC_QUERY","gql","APP_SPEC_RELATIONSHIPS","app","userType","screen","infoType","description","parentId","createUserType","userTypeValue","updateUserTypeValue","CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","createUserTypeResponse","createScreen","screenValue","updateScreenValue","CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID","createScreenResponse","createInfoType","infoTypeValue","updateInfoTypeValue","CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","createInfoTypeResponse","InfoTypeStyleWrapper","selected","isDeleting","updateInstance","deleteInstance","onSelect","isEditMode","updateIsEditMode","isSaving","updateIsSaving","isDeleteMode","updateIsDeleteMode","updateIsDeleting","UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","InfoTypes","selectedInfoTypeId","wrapperRef","createRef","handleClick","node","contains","setState","handleSelect","document","addEventListener","this","removeEventListener","screenId","infoTypes","onUpdate","key","v4","Component","ScreenStyleWrapper","infoTypeData","find","TYPE_INFO_TYPE_ID","DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID","Screens","selectedScreenId","userTypeId","screens","UserTypeStyleWrapper","screenData","TYPE_SCREEN_ID","UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","mapDispatchToProps","UserTypes","selectedUserTypeId","appId","userTypes","connect","userTypeData","TYPE_USER_TYPE_ID","descriptionData","TYPE_DESCRIPTION_ID","descriptions","UPDATE_APP_FOR_APP_SPEC_ACTION_ID","DELETE_APP_FOR_APP_SPEC_ACTION_ID","Descriptions","DescriptionStyleWrapper","UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","selectedDescriptionId","ErrorContainer","Row","RegistrationField","fieldLabel","as","options","opt","index","field","form","href","BasicDetailsForm","initialValues","validationSchema","onSubmit","formError","isSubmitting","isValid","dirty","isValidating","checked","onSwitch","AppDetailsForm","validationSchemaBasic","Yup","shape","firstName","required","lastName","email","terms","oneOf","validationSchemaApp","validationSchemaCreditCard","cardNumber","max","test","valid","number","cardName","cvc","min","expiryMonth","expiryYear","creditCardExpirationYear","years","dateStart","moment","dateEnd","add","diff","year","format","push","creditCardExpirationMonth","months","monthNumber","monthName","CreditCardDetailsForm","dt","Date","username","password","passwordConfirmation","getMonth","toString","padStart","getFullYear","RegistrationForm","userClassId","onSuccess","useMutation","REGISTER_USER","register","registrationCompleted","setRegistrationCompleted","setFormError","step","setStep","setUsername","setFirstName","setLastName","setEmail","setPassword","setApp","setDescription","values","setSubmitting","creditCardNumber","creditCardName","expirationDate","csv","formValues","nextStep","console","log","graphQLErrors","window","history","pushState","registered","src","fontSize","to","handleSubmitBasicForm","handleSubmitAppForm","displayCurrentDescription","enterText","buttonText","progressWidth","displayCurrentStep","SendCodeForm","error","ResetPasswordForm","passwordConfirm","setPasswordConfirm","code","setCode","formIncomplete","FORGOT_PASSWORD","RESET_PASSWORD","withNoStack","getPasswordResetCode","resetPassword","platformId","formVisible","setFormVisible","userNameOrEmail","setUsernameOrEmail","passwordReset","setPasswordReset","setError","submitting","hideForm","stackId","login","setIsSubmitting","autofill","method","message","Apps","selectedAppId","parameters","currentCustomer","SOURCE_APP_SPEC_ID","typeRelationships","query","apps","unitData","el","i","MenuContainer","AuthTabs","menuTitles","selectedTab","setSelectedTab","title","React","Children","AppsStyleWrapper","AppCreationForm","hasApp","user","jumpToStep","onNext","LoginWrapper","App","backgroundColor","LoginForm","PLATFORM_ID","TYPE_CUSTOMER_ID"],"mappings":"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","file":"static/js/8.3d9f2143.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${props => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nfunction EditInstanceForm({\r\n  id,\r\n  label,\r\n  value,\r\n  onChange,\r\n  onSave,\r\n  onCancel,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>\r\n        {label}\r\n        <input\r\n          id={id}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n        />\r\n      </label>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#00FF00\"\r\n        onClick={onSave}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#FF0000\"\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditInstanceForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${props => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  color: red;\r\n  margin: 1em;\r\n  padding: 1em;\r\n  border: 1px solid #eeeeee;\r\n`;\r\n\r\nfunction DeleteInstanceMenu({\r\n  onDelete,\r\n  onCancel,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <Container>\r\n      Delete?\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#00FF00\"\r\n        onClick={onDelete}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#FF0000\"\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DeleteInstanceMenu;\r\n","export const increment = () => {\r\n  return {\r\n    type: \"INCREMENT\",\r\n  };\r\n};\r\n\r\nexport const decrement = () => {\r\n  return {\r\n    type: \"DECREMENT\",\r\n  };\r\n};\r\n\r\nexport const currentUser = () => {\r\n  return {\r\n    type: \"CURRENT_USER\",\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nconst Modal = (props, className) => (\r\n  <>\r\n    <div className=\"dialog__backdrop\" onClick={props.onClose}></div>\r\n    <div\r\n      className={`dialog text-center ${props.styleName}\r\n         ${props.progress ? \" dialog__bordered\" : \"\"}\r\n         ${props.fullScreen ? \" dialog__fullscreen\" : \"\"}\r\n      `}\r\n    >\r\n      <div className=\"dialog__close\">\r\n        <button\r\n          onClick={props.onClose}\r\n          type=\"button\"\r\n          aria-label=\"Close Account Info Modal Box\"\r\n        >\r\n          &times;\r\n        </button>\r\n      </div>\r\n      {props.progress && (\r\n        <div\r\n          className=\"dialog__progress\"\r\n          style={{ width: props.progress }}\r\n        ></div>\r\n      )}\r\n      {props.children}\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Modal;\r\n","export function flattenChildData(element) {\r\n  const flatData ={\r\n    typeId: element.typeId,\r\n    instances: []\r\n  };\r\n\r\n  if (element.instances && element.instances.length > 0) {\r\n    flatData.instances = element.instances.filter(child => !!child).map(\r\n      instance => flattenData(instance)\r\n    );\r\n  }\r\n\r\n  return flatData;\r\n};\r\n\r\nexport function flattenData(element) {\r\n  const flatData = {\r\n    ...element.instance,\r\n    children: []\r\n  };\r\n\r\n  if (element.children && element.children.length > 0) {\r\n    flatData.children = element.children.filter(child => !!child).map(\r\n      child => flattenChildData(child)\r\n    );\r\n  }\r\n\r\n  return flatData;\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport DescriptionCreationForm from \"../DescriptionCreationForm\";\r\nimport Descriptions from \"../Descriptions\";\r\nimport { CREATE_APP_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nfunction AppCreationForm({ customerId, createApp, refetchQueries }) {\r\n  const [appValue, updateAppValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n  const history = useHistory();\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n  const child = useRef();\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!appValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createAppResponse = await createApp({\r\n      variables: {\r\n        actionId: CREATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: customerId,\r\n          value: appValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n    const newAppData = JSON.parse(createAppResponse.data.Execute);\r\n\r\n    await child.current.wrappedInstance.yell(newAppData);\r\n\r\n    updateAppValue(\"\");\r\n    // child.current.wrappedInstance.handleSubmit();\r\n    updateLoading(false);\r\n\r\n    dispatch(increment());\r\n\r\n    // history.push(\"/meeting-step/create-user-type\");\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <div\r\n          className=\"text-center\"\r\n          style={{ maxWidth: \"350px\", margin: \"1em auto 2em auto\" }}\r\n        >\r\n          <strong>Tell us more about what you want in your web app! </strong>\r\n        </div>\r\n        <form>\r\n          <label htmlFor=\"app-value\">\r\n            <input\r\n              className=\"input\"\r\n              placeholder=\"Create Name\"\r\n              id=\"app-value\"\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              onKeyPress={handleKeyPress}\r\n              value={appValue}\r\n              disabled={loading}\r\n            />\r\n\r\n            <DescriptionCreationForm\r\n              parentInstanceId\r\n              ref={child}\r\n              refetchQueries={refetchQueries}\r\n            >\r\n              {\" \"}\r\n            </DescriptionCreationForm>\r\n          </label>\r\n        </form>\r\n      </div>\r\n      <div style={{ marginTop: \"1em\" }}>\r\n        <button\r\n          style={{ display: \"block\", marginLeft: \"auto\" }}\r\n          className=\"button button--yellow\"\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          onClick={handleSubmit}\r\n        >\r\n          {loading ? \"Creating App...\" : \"Create App\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createApp\" }))(\r\n  AppCreationForm\r\n);\r\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE_ACTION } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nconst DescriptionCreationForm = forwardRef((props, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    handleSubmit,\r\n    yell: (param) => handleSubmit(param),\r\n  }));\r\n\r\n  const parentId = props.parentInstanceId;\r\n  const createDescription = props.createDescription;\r\n  const refetchQueries = props.refetchQueries;\r\n  const parentInstanceId = props.parentInstanceId;\r\n  const [descriptionValue, updateDescriptionValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(param) {\r\n    if (!descriptionValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createDescriptionResponse = await createDescription({\r\n      variables: {\r\n        actionId: CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: param.instanceId,\r\n          value: descriptionValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newDescriptionData = JSON.parse(\r\n      createDescriptionResponse.data.ExecuteAction\r\n    );\r\n\r\n    updateDescriptionValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  // function handleKeyPress(e) {\r\n  //   if (e.charCode === 13) {\r\n  //     handleSubmit(e);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        placeholder=\"Description\"\r\n        className=\"input\"\r\n        id=\"description-value\"\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        // onKeyPress={handleKeyPress}\r\n        value={descriptionValue}\r\n        disabled={loading}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default compose(\r\n  graphql(EXECUTE_ACTION, { name: \"createDescription\", withRef: true })\r\n)(DescriptionCreationForm);\r\n","import gql from 'graphql-tag';\r\n\r\n  export const SOURCE_APP_SPEC_QUERY = gql`\r\n  query UNIT(\r\n    $id: ID!\r\n    $typeRelationships: String!\r\n    $parameters: String\r\n  ) {\r\n    unitData(\r\n      unitId: $id\r\n      typeRelationships: $typeRelationships\r\n      parameters: $parameters\r\n    )\r\n    {\r\n      \r\n        instance {\r\n            id\r\n            value\r\n        }\r\n        children {\r\n            typeId\r\n            instances {\r\n                \r\n\t\tinstance {\r\n\t\t    id\r\n\t\t    value\r\n\t\t}\r\n\t\tchildren {\r\n\t\t    typeId\r\n\t\t    instances {\r\n\t\t        \r\n\t\t\tinstance {\r\n\t\t\t    id\r\n\t\t\t    value\r\n\t\t\t}\r\n\t\t\tchildren {\r\n\t\t\t    typeId\r\n\t\t\t    instances {\r\n\t\t\t        \r\n\t\t\t\tinstance {\r\n\t\t\t\t    id\r\n\t\t\t\t    value\r\n\t\t\t\t}\r\n\t\t\t    }\r\n\t\t\t}\r\n\t\t    }\r\n\t\t}\r\n            }\r\n        }\r\n    \r\n    }\r\n  }\r\n`;\r\n\r\nexport const APP_SPEC_RELATIONSHIPS = {\r\n   app: {\r\n        userType: {\r\n        screen: {\r\n        infoType: null\r\n    }\r\n    }, description: null\r\n    },\r\n};","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\nimport { CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction UserTypeCreationForm({ parentId, createUserType, refetchQueries }) {\r\n  const [userTypeValue, updateUserTypeValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n  function handleChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!userTypeValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createUserTypeResponse = await createUserType({\r\n      variables: {\r\n        actionId: CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: userTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n    dispatch(increment());\r\n\r\n    const newUserTypeData = JSON.parse(createUserTypeResponse.data.Execute);\r\n\r\n    updateUserTypeValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"userType-value\">\r\n        <input\r\n          placeholder=\"New User Type\"\r\n          className=\"input\"\r\n          id=\"userType-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={userTypeValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating UserType...\" : \"Create UserType\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createUserType\" }))(\r\n  UserTypeCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction ScreenCreationForm({ parentId, createScreen, refetchQueries }) {\r\n  const [screenValue, updateScreenValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!screenValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createScreenResponse = await createScreen({\r\n      variables: {\r\n        actionId: CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: screenValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newScreenData = JSON.parse(createScreenResponse.data.Execute);\r\n\r\n    updateScreenValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"screen-value\">\r\n        <input\r\n          placeholder=\"New Screen\"\r\n          className=\"input\"\r\n          id=\"screen-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={screenValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating Screen...\" : \"Create Screen\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createScreen\" }))(\r\n  ScreenCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\nimport styled from \"styled-components\";\r\nimport { withNoStack, EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\n\r\nimport { CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID } from \"../../../config\";\r\n\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction InfoTypeCreationForm({ parentId, createInfoType, refetchQueries }) {\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(\"\");\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!infoTypeValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createInfoTypeResponse = await createInfoType({\r\n      variables: {\r\n        actionId: CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: infoTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newInfoTypeData = JSON.parse(createInfoTypeResponse.data.Execute);\r\n\r\n    updateInfoTypeValue(\"\");\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"infoType-value\">\r\n        <input\r\n          className=\"input\"\r\n          placeholder=\"New Type of Info\"\r\n          id=\"infoType-value\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={infoTypeValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" disabled={loading} onClick={handleSubmit}>\r\n        {loading ? \"Creating InfoType...\" : \"Create InfoType\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: \"createInfoType\" }))(\r\n  InfoTypeCreationForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\n// add styling here\r\nconst InfoTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction InfoType({\r\n  infoType,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(infoType.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <InfoTypeStyleWrapper onClick={() => onSelect(infoType.id)}>\r\n  //       { infoTypeValue }\r\n  //     </InfoTypeStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleInfoTypeValueChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleInfoTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: infoType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={infoType.id}\r\n          label=\"InfoType Value:\"\r\n          value={infoTypeValue}\r\n          onChange={handleInfoTypeValueChange}\r\n          onSave={handleInfoTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: infoType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"box box--small\" selected={selected}>\r\n      <span> {infoTypeValue} </span>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(InfoType);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport InfoTypeCreationForm from \"../InfoTypeCreationForm\";\r\nimport InfoType from \"../InfoType\";\r\n\r\n// np__added_start unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nconst InfoTypesStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nclass InfoTypes extends Component {\r\n  state = {\r\n    selectedInfoTypeId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedInfoTypeId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedInfoTypeId: id });\r\n\r\n  render() {\r\n    const { screenId, infoTypes, refetchQueries, onUpdate } = this.props;\r\n    const { selectedInfoTypeId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {infoTypes.map((infoType) => (\r\n          <InfoType\r\n            key={v4()}\r\n            infoType={infoType}\r\n            selected={infoType.id === selectedInfoTypeId}\r\n            onUpdate={onUpdate}\r\n            parentId={screenId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        <br></br>\r\n        <InfoTypeCreationForm\r\n          parentId={screenId}\r\n          refetchQueries={refetchQueries}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoTypes;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_INFO_TYPE_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport InfoTypes from \"../InfoTypes\";\r\n\r\n// add styling here\r\nconst ScreenStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction Screen({\r\n  screen,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [screenValue, updateScreenValue] = useState(screen.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const infoTypeData =\r\n    screen.children &&\r\n    screen.children.find((child) => child.typeId === TYPE_INFO_TYPE_ID);\r\n  const infoTypes = infoTypeData ? infoTypeData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <ScreenStyleWrapper onClick={() => onSelect(screen.id)}>\r\n  //       {screenValue}\r\n  //     </ScreenStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleScreenValueChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleScreenValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: screenValue,\r\n          instanceId: screen.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  // if (isEditMode) {\r\n  //   return (\r\n  //     <ScreenStyleWrapper>\r\n  //       <EditInstanceForm\r\n  //         id={ screen.id }\r\n  //         label=\"Screen Value:\"\r\n  //         value={ screenValue }\r\n  //         onChange={handleScreenValueChange}\r\n  //         onSave={handleScreenValueSave}\r\n  //         onCancel={handleCancelEdit}\r\n  //         disabled={isSaving}\r\n  //       />\r\n  //     </ScreenStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: screen.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <ScreenStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {screenValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </ScreenStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"box\" selected={selected}>\r\n      <strong> {screenValue} </strong>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <InfoTypes\r\n        infoTypes={infoTypes}\r\n        screenId={screen.id}\r\n        label=\"InfoType?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(Screen);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport ScreenCreationForm from \"../ScreenCreationForm\";\r\nimport Screen from \"../Screen\";\r\n\r\n// np__added_start unit: appSpec, comp: Screens, loc: styling\r\n\r\nconst ScreensStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: Screens, loc: styling\r\n\r\nclass Screens extends Component {\r\n  state = {\r\n    selectedScreenId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedScreenId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedScreenId: id });\r\n\r\n  render() {\r\n    const { userTypeId, screens, refetchQueries, onUpdate } = this.props;\r\n    const { selectedScreenId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: Screens, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: Screens, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {screens.map((screen) => (\r\n          <Screen\r\n            key={v4()}\r\n            screen={screen}\r\n            selected={screen.id === selectedScreenId}\r\n            onUpdate={onUpdate}\r\n            parentId={userTypeId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        <br></br>\r\n        <ScreenCreationForm\r\n          parentId={userTypeId}\r\n          refetchQueries={refetchQueries}\r\n        />\r\n\r\n        {/* np__added_start unit: appSpec, comp: Screens, loc: renderEnding */}\r\n        {/* np__added_end unit: appSpec, comp: Screens, loc: renderEnding */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Screens;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_SCREEN_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport Screens from \"../Screens\";\r\n\r\n// add styling here\r\nconst UserTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction UserType({\r\n  userType,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [userTypeValue, updateUserTypeValue] = useState(userType.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const screenData =\r\n    userType.children &&\r\n    userType.children.find((child) => child.typeId === TYPE_SCREEN_ID);\r\n  const screens = screenData ? screenData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <UserTypeStyleWrapper onClick={() => onSelect(userType.id)}>\r\n  //       { userTypeValue }\r\n  //     </UserTypeStyleWrapper>\r\n  //   );\r\n  // }\r\n\r\n  function handleUserTypeValueChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleUserTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: userTypeValue,\r\n          instanceId: userType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <UserTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={userType.id}\r\n          label=\"UserType Value:\"\r\n          value={userTypeValue}\r\n          onChange={handleUserTypeValueChange}\r\n          onSave={handleUserTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: userType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <UserTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {userTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"box\" selected={selected}>\r\n      <strong> {userTypeValue} </strong>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <Screens\r\n        screens={screens}\r\n        userTypeId={userType.id}\r\n        label=\"Screen?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(UserType);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport UserTypeCreationForm from \"../UserTypeCreationForm\";\r\nimport UserType from \"../UserType\";\r\nimport { connect } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    counter: state.counter,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  increment,\r\n  decrement,\r\n};\r\n\r\nclass UserTypes extends Component {\r\n  state = {\r\n    selectedUserTypeId: null,\r\n  };\r\n  wrapperRef = createRef();\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedUserTypeId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedUserTypeId: id });\r\n\r\n  render() {\r\n    const { appId, userTypes, refetchQueries, onUpdate } = this.props;\r\n    const { selectedUserTypeId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: UserTypes, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: UserTypes, loc: renderBeginning */\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n          <div>\r\n            {userTypes.map((userType) => (\r\n              <UserType\r\n                key={v4()}\r\n                userType={userType}\r\n                selected={userType.id === selectedUserTypeId}\r\n                onUpdate={onUpdate}\r\n                parentId={appId}\r\n                refetchQueries={refetchQueries}\r\n                onSelect={this.handleSelect}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          <br></br>\r\n\r\n          <UserTypeCreationForm\r\n            parentId={appId}\r\n            refetchQueries={refetchQueries}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTypes);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_USER_TYPE_ID,\r\n  TYPE_DESCRIPTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\nimport UserTypes from \"../UserTypes\";\r\nimport Descriptions from \"../Descriptions\";\r\n\r\n// add styling here\r\nconst div = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction App({\r\n  app,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [appValue, updateAppValue] = useState(app.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const userTypeData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_USER_TYPE_ID);\r\n  const userTypes = userTypeData ? userTypeData.instances : [];\r\n  const descriptionData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_DESCRIPTION_ID);\r\n  const descriptions = descriptionData ? descriptionData.instances : [];\r\n\r\n  // if (!selected) {\r\n  //   return (\r\n  //     <div onClick={() => onSelect(app.id)}>\r\n  //       {appValue}\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  function handleAppValueChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n\r\n  async function handleAppValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: appValue,\r\n          instanceId: app.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <div>\r\n        <EditInstanceForm\r\n          id={app.id}\r\n          label=\"App Value:\"\r\n          value={appValue}\r\n          onChange={handleAppValueChange}\r\n          onSave={handleAppValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: app.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <div selected={selected} isDeleting={isDeleting}>\r\n        {appValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div selected={selected} className=\"box\" style={{ width: \"100%\" }}>\r\n      <div className=\"flex justify-between\">\r\n        <strong> {appValue} </strong>\r\n        <div>\r\n          <Descriptions\r\n            descriptions={descriptions}\r\n            appId={app.id}\r\n            label=\"Description?\"\r\n            refetchQueries={refetchQueries}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <UserTypes\r\n        userTypes={userTypes}\r\n        appId={app.id}\r\n        label=\"UserType?\"\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(App);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EXECUTE } from \"@nostack/no-stack\";\r\nimport compose from \"@shopify/react-compose\";\r\nimport { graphql } from \"@apollo/react-hoc\";\r\n\r\nimport {\r\n  UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n} from \"../../../config\";\r\n\r\nimport EditInstanceForm from \"../../EditInstanceForm\";\r\nimport DeleteInstanceMenu from \"../../DeleteInstanceMenu\";\r\n\r\n// add styling here\r\nconst DescriptionStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? \"1px solid aquamarine\" : \"1px solid white\"};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && \"tomato\"};\r\n  cursor: ${selected ? \"auto\" : \"pointer\"};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || \"#000000\"};\r\n  }\r\n`;\r\n\r\nfunction Description({\r\n  description,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [descriptionValue, updateDescriptionValue] = useState(\r\n    description.value\r\n  );\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  if (!selected) {\r\n    return <div> {descriptionValue} </div>;\r\n  }\r\n\r\n  function handleDescriptionValueChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleDescriptionValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: descriptionValue,\r\n          instanceId: description.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <DescriptionStyleWrapper>\r\n        <EditInstanceForm\r\n          id={description.id}\r\n          label=\"Description Value:\"\r\n          value={descriptionValue}\r\n          onChange={handleDescriptionValueChange}\r\n          onSave={handleDescriptionValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: description.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <DescriptionStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {descriptionValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DescriptionStyleWrapper selected={selected}>\r\n      {descriptionValue}\r\n      <Button type=\"button\" onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n    </DescriptionStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: \"updateInstance\" }),\r\n  graphql(EXECUTE, { name: \"deleteInstance\" })\r\n)(Description);\r\n","import React, { Component, createRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport DescriptionCreationForm from \"../DescriptionCreationForm\";\r\nimport Description from \"../Description\";\r\n\r\n// np__added_start unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nconst DescriptionsStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// np__added_end unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nclass Descriptions extends Component {\r\n  state = {\r\n    selectedDescriptionId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedDescriptionId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedDescriptionId: id });\r\n\r\n  render() {\r\n    const { appId, descriptions, refetchQueries, onUpdate } = this.props;\r\n    const { selectedDescriptionId } = this.state;\r\n\r\n    {\r\n      /* np__added_start unit: appSpec, comp: Descriptions, loc: renderBeginning */\r\n    }\r\n    {\r\n      /* np__added_end unit: appSpec, comp: Descriptions, loc: renderBeginning */\r\n    }\r\n\r\n    // return (\r\n    //   <DescriptionsStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\r\n    //     <DescriptionCreationForm\r\n    //       parentId={appId}\r\n    //       refetchQueries={refetchQueries}\r\n    //     />\r\n\r\n    //     {descriptions.map(description => (\r\n    //       <Description\r\n    //         key={v4()}\r\n    //         description={description}\r\n    //         selected={description.id === selectedDescriptionId}\r\n    //         onUpdate={onUpdate}\r\n    //         parentId={appId}\r\n    //         refetchQueries={refetchQueries}\r\n    //         onSelect={this.handleSelect}\r\n    //       />\r\n    //     ))}\r\n    //     {/* np__added_start unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n    //     {/* np__added_end unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n\r\n    //   </DescriptionsStyleWrapper>\r\n    // )\r\n    return (\r\n      <div ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {descriptions.map((description) => (\r\n          <Description\r\n            key={v4()}\r\n            description={description}\r\n            selected={description.id === selectedDescriptionId}\r\n            onUpdate={onUpdate}\r\n            parentId={appId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        ))}\r\n        {/* np__added_start unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n        {/* np__added_end unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Descriptions;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 250px;\r\n\r\n  padding: 1em 0;\r\n\r\n  border: 1px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px 10px 10px 10px;\r\n  box-shadow: 10px 10px 8px -1px rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const ErrorContainer = styled.div`\r\n  font-size: 0.75rem;\r\n  color: tomato;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  \r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport { Row, ErrorContainer } from \"./RegistrationForm.style\";\r\n\r\nconst RegistrationField = ({\r\n  fieldLabel,\r\n  type,\r\n  name,\r\n  as,\r\n  placeholder,\r\n  options = [],\r\n  value\r\n}) => (\r\n  <Row>\r\n    {type !== \"checkbox\" && (\r\n      <label style={{ width: \"100%\" }}>\r\n        {!as && (\r\n          <Field\r\n            className=\"form__input\"\r\n            type={type}\r\n            name={name}\r\n            placeholder={placeholder}\r\n          />\r\n        )}\r\n        {as && (\r\n          <Field name={name} as={as} placeholder={placeholder}>\r\n            {options.length !== 0 &&\r\n              options.map((opt, index) => (\r\n                <option key={index} value={opt.value}>\r\n                  {opt.label}\r\n                </option>\r\n              ))}\r\n          </Field>\r\n        )}\r\n      </label>\r\n    )}\r\n    {type === \"checkbox\" && (\r\n      <Field name={name}>\r\n        {({ field, form }) => {\r\n          return (\r\n            <label>\r\n              <input {...field} type=\"checkbox\" />I agree to our\r\n              <b>\r\n                <a href=\"/terms-and-conditions\" target=\"_blank\">\r\n                  &nbsp; Terms of Use &nbsp;\r\n                </a>\r\n              </b>\r\n              and\r\n              <b>\r\n                <a href=\"/privacy-policy\" target=\"_blank\">\r\n                  &nbsp; Privacy Policy &nbsp;\r\n                </a>\r\n              </b>\r\n              by signing up\r\n            </label>\r\n          );\r\n        }}\r\n      </Field>\r\n    )}\r\n    <ErrorContainer>\r\n      <ErrorMessage name={name} />\r\n    </ErrorContainer>\r\n  </Row>\r\n);\r\n\r\nexport default RegistrationField;\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport { Wrapper, Row, ErrorContainer } from \"../RegistrationForm.style\";\r\nimport RegistrationField from \"../RegistrationField\";\r\n\r\nconst BasicDetailsForm = ({\r\n  initialValues,\r\n  validationSchema,\r\n  onSubmit,\r\n  formError,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ isSubmitting, isValid, dirty, isValidating }) => (\r\n          <Form className=\"form\">\r\n            {/* <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Username\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n              />\r\n            </div> */}\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"First Name\"\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Last Name\"\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n            </div>\r\n            {/* \r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"passwordConfirmation\"\r\n              />\r\n            </div> */}\r\n\r\n            <div className=\"\" style={{ marginTop: \"0.5em\" }}>\r\n              <RegistrationField\r\n                name=\"terms\"\r\n                type=\"checkbox\"\r\n                checked=\"false\"\r\n                fieldLabel=\"I agree to our Terms of Use and Privacy Policy by signing up\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <button\r\n                className=\"button button--yellow\"\r\n                type=\"submit\"\r\n                // disabled={isSubmitting || !isValid || isValidating || !dirty}\r\n              >\r\n                SIGN UP\r\n              </button>\r\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\r\n            </div>\r\n\r\n            <small>\r\n              Already have an account?\r\n              <a href=\"#\" className=\"teal--text\" onClick={props.onSwitch}>\r\n                &nbsp;Log In\r\n              </a>\r\n            </small>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicDetailsForm;\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport { Wrapper, Row, ErrorContainer } from \"../RegistrationForm.style\";\r\nimport RegistrationField from \"../RegistrationField\";\r\n\r\nconst AppDetailsForm = ({\r\n  initialValues,\r\n  validationSchema,\r\n  onSubmit,\r\n  formError\r\n}) => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ isSubmitting, isValid, dirty, isValidating }) => (\r\n          <Form className=\"form\">\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"App Name:\"\r\n                type=\"text\"\r\n                name=\"app\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <RegistrationField\r\n                placeholder=\"Description:\"\r\n                as=\"textarea\"\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n            <br></br>\r\n            <div className=\"\">\r\n              <RegistrationField\r\n                name=\"terms\"\r\n                type=\"checkbox\"\r\n                fieldLabel=\"I agree to our Terms of Use and Privacy Policy by signing up\"\r\n              />\r\n            </div>\r\n            <div className=\"form__input\">\r\n              <button\r\n                className=\"button button--yellow\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting || !isValid || isValidating || !dirty}\r\n              >\r\n                MAKE MY APP NOW\r\n              </button>\r\n              {formError && <ErrorContainer>{formError}</ErrorContainer>}\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppDetailsForm;\r\n","import * as Yup from \"yup\";\r\nimport valid from \"card-validator\";\r\nimport moment from \"moment\";\r\n\r\nexport const validationSchemaBasic = Yup.object().shape({\r\n  // username: Yup.string()\r\n  //   .label('username')\r\n  //   .required('Please enter desired username.'),\r\n  firstName: Yup.string()\r\n    .label(\"firstName\")\r\n    .required(\"Please enter your first name.\"),\r\n  lastName: Yup.string()\r\n    .label(\"lastName\")\r\n    .required(\"Please enter your last name.\"),\r\n  email: Yup.string()\r\n    .label(\"email\")\r\n    .email(\"Enter a valid email.\")\r\n    .required(\"Please enter your email.\"),\r\n  terms: Yup.boolean()\r\n    .label(\"terms\")\r\n    .oneOf([true], \"Must Accept Terms and Conditions\")\r\n    .required(\"Please click agree on terms before you can proceed\"),\r\n  // password: Yup.string()\r\n  //   .label('password')\r\n  //   .matches(/[a-z]/, 'at least one lowercase char')\r\n  //   .matches(/[A-Z]/, 'at least one uppercase char')\r\n  //   .matches(/[a-zA-Z]+[^a-zA-Z\\s]+/, 'at least 1 number or special char (@,!,#, etc).')\r\n  //   .min(8, 'Must be at least 8 characters.')\r\n  //   .required('Please enter your desired password.'),\r\n  // passwordConfirmation: Yup.string()\r\n  //   .oneOf([Yup.ref('password'), '', null], 'Passwords must match.')\r\n  //   .required('Please confirm your password.'),\r\n});\r\n\r\nexport const validationSchemaApp = Yup.object().shape({\r\n  app: Yup.string().label(\"app\").required(\"Please enter desired app name.\"),\r\n  description: Yup.string()\r\n    .label(\"description\")\r\n    .required(\"Please enter app description.\"),\r\n  terms: Yup.boolean()\r\n    .label(\"terms\")\r\n    .oneOf([true], \"Must Accept Terms and Conditions\")\r\n    .required(\"Please click agree on terms before you can proceed\"),\r\n});\r\n\r\nexport const validationSchemaCreditCard = Yup.object().shape({\r\n  cardNumber: Yup.string()\r\n    .label(\"Card number\")\r\n    .max(16)\r\n    .test(\r\n      \"test-number\",\r\n      \"Credit Card number is invalid\",\r\n      (value) => valid.number(value).isValid\r\n    )\r\n    .required(),\r\n  cardName: Yup.string().label(\"Name on card\").required(),\r\n  cvc: Yup.string().label(\"CVC\").min(3).max(4).required(),\r\n  expiryMonth: Yup.string().label(\"Expiry month\").min(2).max(2).required(),\r\n  expiryYear: Yup.string().label(\"Expiry year\").min(4).max(4).required(),\r\n});\r\n\r\nexport const creditCardExpirationYear = () => {\r\n  const years = [];\r\n  const dateStart = moment();\r\n  const dateEnd = moment().add(10, \"y\");\r\n  while (dateEnd.diff(dateStart, \"years\") >= 0) {\r\n    const year = dateStart.format(\"YYYY\");\r\n    years.push({ value: year, label: year });\r\n    dateStart.add(1, \"year\");\r\n  }\r\n  return years;\r\n};\r\n\r\nexport const creditCardExpirationMonth = () => {\r\n  const months = [];\r\n  const dateStart = moment();\r\n  const dateEnd = moment().add(11, \"month\");\r\n  while (dateEnd.diff(dateStart, \"months\") >= 0) {\r\n    const monthNumber = dateStart.format(\"MM\");\r\n    const monthName = dateStart.format(\"MMMM\");\r\n    months.push({ value: monthNumber, label: monthName });\r\n    dateStart.add(1, \"month\");\r\n  }\r\n  return months;\r\n};\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport { Wrapper, Row, ErrorContainer } from \"../RegistrationForm.style\";\r\nimport RegistrationField from \"../RegistrationField\";\r\n\r\nimport {\r\n  creditCardExpirationMonth,\r\n  creditCardExpirationYear\r\n} from \"./registration-util.js\";\r\n\r\nconst CreditCardDetailsForm = ({\r\n  initialValues,\r\n  validationSchema,\r\n  onSubmit,\r\n  formError\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ isSubmitting, isValid, dirty, isValidating }) => (\r\n        <Form className=\"form\">\r\n          <div className=\"form__input\">\r\n            <RegistrationField\r\n              placeholder=\"Name on Card:\"\r\n              type=\"text\"\r\n              name=\"cardName\"\r\n            />\r\n          </div>\r\n          <div className=\"form__input flex-row\">\r\n            <div className=\"flex\">\r\n              <div className=\"form__input\" style={{ width: \"300px\" }}>\r\n                <RegistrationField\r\n                  placeholder=\"Card Number:\"\r\n                  type=\"text\"\r\n                  name=\"cardNumber\"\r\n                />\r\n              </div>\r\n              <div className=\"\" style={{ width: \"100px\", marginLeft: \"8px\" }}>\r\n                <RegistrationField placeholder=\"CVC:\" type=\"text\" name=\"cvc\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__input flex-row\">\r\n            <div className=\"flex items-center\">\r\n              <div>Expiration Date</div>\r\n\r\n              <div className=\"\" style={{ marginLeft: \"8px\" }}>\r\n                <RegistrationField\r\n                  placeholder=\"Month\"\r\n                  as=\"select\"\r\n                  name=\"expiryMonth\"\r\n                  options={creditCardExpirationMonth()}\r\n                />\r\n              </div>\r\n              <div className=\"\" style={{ marginLeft: \"8px\" }}>\r\n                <RegistrationField\r\n                  placeholder=\"Year\"\r\n                  as=\"select\"\r\n                  name=\"expiryYear\"\r\n                  options={creditCardExpirationYear()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form__input\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button button--yellow\"\r\n              disabled={isSubmitting || !isValid || isValidating || !dirty}\r\n            >\r\n              Sign Up!\r\n            </button>\r\n          </div>\r\n          {formError && <ErrorContainer>{formError}</ErrorContainer>}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default CreditCardDetailsForm;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { REGISTER_USER } from \"@nostack/no-stack\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\n\r\nimport { Wrapper } from \"./RegistrationForm.style\";\r\nimport BasicDetailsForm from \"./stepper/BasicDetailsForm\";\r\nimport AppDetailsForm from \"./stepper/AppDetailsForm.js\";\r\nimport CreditCardDetailsForm from \"./stepper/CreditCardDetailsForm\";\r\nimport Modal from \"../Modal\";\r\n\r\nimport {\r\n  validationSchemaBasic,\r\n  validationSchemaApp,\r\n  validationSchemaCreditCard,\r\n} from \"./stepper/registration-util.js\";\r\n\r\n// Get Current Month\r\nlet dt = new Date();\r\nlet mm = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\nlet yyyy = dt.getFullYear();\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  username: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  passwordConfirmation: \"\",\r\n  app: \"\",\r\n  description: \"\",\r\n  terms: false,\r\n  cardName: \"\",\r\n  cardNumber: \"\",\r\n  cvc: \"\",\r\n  expiryMonth: mm,\r\n  expiryYear: yyyy,\r\n};\r\n\r\nconst RegistrationForm = (props, { userClassId, onSuccess }) => {\r\n  const [register] = useMutation(REGISTER_USER);\r\n  const [registrationCompleted, setRegistrationCompleted] = useState(false);\r\n  const [formError, setFormError] = useState(\"\");\r\n\r\n  /*\r\n    A \"stepper\" is created and uses state to be sure that:\r\n     1. no child form is visible (haven't pushed \"submit\")\r\n     2. the child form (or it's child) is visible;\r\n     3. the submit has been pushed on the sequence of child forms, and it's time to call submit\r\n     4. The submission succeeded, and the final welcome message should be visible.\r\n   */\r\n  const [step, setStep] = useState(1);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [app, setApp] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  // const formValuesTemp =\r\n  //   '{\"app\":\"newApp\",\"description\":\"newApp Desc\",\"creditCardNumber\":\"232\",\"expirationDate\":\"234243\",\"csv\":\"46\"}';\r\n  const handleSubmit = async (values, { setSubmitting }) => {\r\n    setFormError(\"\");\r\n    // setUsername(values);\r\n\r\n    // console.log(app);\r\n    // console.log(description);\r\n    setFirstName(values.firstName);\r\n    setLastName(values.lastName);\r\n    setEmail(values.email);\r\n\r\n    // if (values.password !== values.passwordConfirmation) {\r\n    //   return;\r\n    // }\r\n    const formValuesTemp = {\r\n      app,\r\n      description,\r\n      creditCardNumber: values.cardNumber,\r\n      creditCardName: values.cardName,\r\n      expirationDate: `${values.expiryMonth}/${values.expiryYear}`,\r\n      csv: values.cvc,\r\n    };\r\n\r\n    try {\r\n      await register({\r\n        variables: {\r\n          userClassId: props.userClassId,\r\n          name: username,\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n          email: values.email,\r\n          password,\r\n          formValues: JSON.stringify({}),\r\n        },\r\n      });\r\n\r\n      setRegistrationCompleted(true);\r\n\r\n      if (onSuccess) {\r\n        nextStep();\r\n        onSuccess();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(error.graphQLErrors);\r\n\r\n      setFormError(\"Something went wrong. Please try again.\");\r\n    }\r\n\r\n    setSubmitting(false);\r\n  };\r\n\r\n  if (registrationCompleted) {\r\n    window.history.pushState(\r\n      { registered: \"success\" },\r\n      \"Registration Complete\",\r\n      \"?registered=success\"\r\n    );\r\n\r\n    // return (\r\n    //   <Modal onClose={props.onClose}>\r\n    //     <div className=\"dialog__title\">\r\n    //       <h3>Awesome, </h3>\r\n    //     </div>\r\n    //     <p className=\"text-center\">\r\n    //       <div>\r\n    //         <Link\r\n    //           onClick={props.onClose}\r\n    //           style={{ marginBottom: \"2em\" }}\r\n    //           className=\"button button--rounded button--yellow\"\r\n    //           to=\"/schedule\"\r\n    //         >\r\n    //           Schedule a Meeting\r\n    //         </Link>\r\n    //       </div>\r\n    //       <div>\r\n    //         <Link\r\n    //           onClick={props.onClose}\r\n    //           className=\"button button--rounded button--yellow\"\r\n    //           to=\"/contact?s=ny\"\r\n    //         >\r\n    //           Not Yet\r\n    //         </Link>\r\n    //       </div>\r\n    //     </p>\r\n    //   </Modal>\r\n    // );\r\n    return (\r\n      <Modal onClose={props.onClose} styleName=\"dialogConfirm\">\r\n        <div className=\"dialog__title\">\r\n          <img src=\"/images/mail.png\" />\r\n        </div>\r\n        <p className=\"text-center\">\r\n          <div>\r\n            <div style={{ margin: \"1.25em 0\", fontSize: \"18px\" }}>\r\n              {\" \"}\r\n              Confirm your email!{\" \"}\r\n            </div>\r\n            <p style={{ margin: \"1.25em 0\" }}>\r\n              Please check your email <strong> sample@gmail.com </strong> for a\r\n              message to confirm that it’s really you. Then you can log in.\r\n            </p>\r\n            <div>\r\n              <Link\r\n                onClick={props.onClose}\r\n                className=\"button button--rounded button--yellow\"\r\n                to=\"/schedule\"\r\n              >\r\n                LOGIN\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                style={{ marginTop: \"1em\" }}\r\n                onClick={props.onClose}\r\n                className=\"button button--rounded\"\r\n                to=\"/schedule\"\r\n              >\r\n                SEND AGAIN\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                style={{ marginTop: \"1em\" }}\r\n                onClick={props.onClose}\r\n                className=\"button button--rounded\"\r\n                to=\"/schedule\"\r\n              >\r\n                CHANGE EMAIL\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </p>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  const nextStep = () => {\r\n    setStep(step + 1);\r\n  };\r\n\r\n  const handleSubmitBasicForm = (values, { setSubmitting }) => {\r\n    console.log(values);\r\n    setFormError(\"\");\r\n    if (values.password !== values.passwordConfirmation) {\r\n      return;\r\n    }\r\n\r\n    setUsername(values.username);\r\n    setFirstName(values.firstName);\r\n    setLastName(values.lastName);\r\n    setEmail(values.email);\r\n    setPassword(values.password);\r\n    // setSubmitting(false);\r\n  };\r\n\r\n  const handleSubmitAppForm = (values, { setSubmitting }) => {\r\n    setFormError(\"\");\r\n    setApp(values.app);\r\n    setDescription(values.description);\r\n    setSubmitting(false);\r\n    nextStep();\r\n  };\r\n\r\n  const displayCurrentStep = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <BasicDetailsForm\r\n            onSwitch={props.onSwitch}\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchemaBasic}\r\n            // onSubmit={handleSubmitBasicForm}\r\n            onSubmit={handleSubmit}\r\n            formError={formError}\r\n          />\r\n        );\r\n\r\n      case 2:\r\n        return (\r\n          <AppDetailsForm\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchemaApp}\r\n            onSubmit={handleSubmitAppForm}\r\n            formError={formError}\r\n          />\r\n        );\r\n\r\n      case 3:\r\n        return (\r\n          <CreditCardDetailsForm\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchemaCreditCard}\r\n            onSubmit={handleSubmit}\r\n            formError={formError}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <BasicDetailsForm\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchemaBasic}\r\n            onSubmit={handleSubmitBasicForm}\r\n            formError={formError}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const displayCurrentDescription = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return {\r\n          enterText: \"ENTER DETAILS\",\r\n          buttonText: \"SIGN UP\",\r\n          progressWidth: \"33%\",\r\n        };\r\n\r\n      case 2:\r\n        return {\r\n          enterText: \"ENTER APP DESCRIPTION\",\r\n          buttonText: \"MAKE MY APP NOW\",\r\n          progressWidth: \"66%\",\r\n        };\r\n\r\n      case 3:\r\n        return {\r\n          enterText: \"CREDIT CARD DETAILS\",\r\n          buttonText: \"MAKE MY APP NOW\",\r\n          progressWidth: \"100%\",\r\n        };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        progress={displayCurrentDescription().progressWidth}\r\n        onClose={props.onClose}\r\n      >\r\n        <div className=\"dialog__title\">\r\n          {/* <div className=\"dialog__step\">\r\n            STEP <span className=\"teal--text\"> {step} </span> of 3\r\n          </div> */}\r\n          <h3>{displayCurrentDescription().enterText}</h3>\r\n        </div>\r\n        {step == 3 && (\r\n          <p className=\"dialog__text\">\r\n            You won’t be charged a thing until you commit to it explicitly. In\r\n            fact, the initial consultation is{\" \"}\r\n            <strong className=\"teal--text\">FREE</strong>.\r\n            <br />\r\n            <br />\r\n            We just need your credit card in advance to cover ourselves.\r\n          </p>\r\n        )}\r\n        {displayCurrentStep()}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst SendCodeForm = ({ onSubmit, onCancel, error, disabled }) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(email);\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault();\r\n\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Reset Password</h3>\r\n      <div>\r\n        Your Username/Email:\r\n        <input type=\"text\" onChange={handleChange} disabled={disabled} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" disabled={disabled || !email}>\r\n          Send Code\r\n        </button>\r\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {error && <div>{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SendCodeForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst ResetPasswordForm = ({ onSubmit, onCancel, disabled, error }) =>{\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [formError, setFormError] = useState('');\r\n\r\n  const handlePasswordChange = e => {\r\n    e.preventDefault();\r\n\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handlePasswordConfirmChange = e => {\r\n    e.preventDefault();\r\n\r\n    setPasswordConfirm(e.target.value);\r\n  };\r\n\r\n  const handleCodeChange = e => {\r\n    e.preventDefault();\r\n\r\n    setCode(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setFormError('');\r\n\r\n    if (password !== passwordConfirm) {\r\n      setFormError('New password and confirmation must match.');\r\n      return;\r\n    }\r\n\r\n    onSubmit(password, code);\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault();\r\n\r\n    onCancel();\r\n  }\r\n\r\n  const formIncomplete = !password || !passwordConfirm || !code;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Reset Password</h3>\r\n      <p>A password reset code has been sent to your email. Enter the code below.</p>\r\n      <div>\r\n        New Password:\r\n        <input type=\"password\" onChange={handlePasswordChange} disabled={disabled} />\r\n      </div>\r\n      <div>\r\n        Confirm Password:\r\n        <input \r\n          type=\"password\"\r\n          onChange={handlePasswordConfirmChange} \r\n          disabled={disabled} \r\n        />\r\n      </div>\r\n      <div>\r\n        Password Reset Code:\r\n        <input type=\"password\" onChange={handleCodeChange} disabled={disabled} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" disabled={disabled || formIncomplete}>Change Password</button>\r\n        <button type=\"button\" onClick={handleCancel} disabled={disabled}>Cancel</button>\r\n      </div>\r\n      {error && <div>{error}</div>}\r\n      {formError && <div>{formError}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","import React, { useState } from 'react';\r\nimport { graphql } from '@apollo/react-hoc';\r\nimport compose from '@shopify/react-compose';\r\nimport styled from 'styled-components';\r\nimport { withNoStack, FORGOT_PASSWORD, RESET_PASSWORD } from '@nostack/no-stack';\r\n\r\nimport SendCodeForm from './SendCodeForm';\r\nimport ResetPasswordForm from './ResetPasswordForm';\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  text-decoration: underline;\r\n  background: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst ForgotPasswordButton = ({ getPasswordResetCode, resetPassword, platformId }) => {\r\n  const [formVisible, setFormVisible] = useState(false);\r\n  const [userNameOrEmail, setUsernameOrEmail] = useState('');\r\n  const [passwordReset, setPasswordReset] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const showForm = () => setFormVisible(true);\r\n\r\n  const hideForm = () => {\r\n    setError('');\r\n    setSubmitting(false);\r\n    setPasswordReset(false);\r\n    setFormVisible(false);\r\n    setUsernameOrEmail('');\r\n  };\r\n\r\n  const handleEmailSubmit = async userNameOrEmail => {\r\n    setError('');\r\n    setSubmitting(true);\r\n    \r\n    try {\r\n      await getPasswordResetCode({\r\n        variables: {\r\n          userNameOrEmail,\r\n          stackId: platformId,\r\n        },\r\n      });\r\n\r\n      setUsernameOrEmail(userNameOrEmail);\r\n    } catch (e) {\r\n      setError('Something went wrong. Please try again.');\r\n    }\r\n\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const handlePasswordSubmit = async (password, code) => {\r\n    setError('');\r\n    setSubmitting(true);\r\n\r\n    try {\r\n      await resetPassword({\r\n        variables: {\r\n          userNameOrEmail, \r\n          password,\r\n          code,\r\n          stackId: platformId,\r\n        },\r\n      });\r\n\r\n      setPasswordReset(true);\r\n    } catch (e) {\r\n      setError('Something went wrong. Please try again.');\r\n    }\r\n\r\n    setSubmitting(false);\r\n  };\r\n\r\n  if (!formVisible) {\r\n    return (\r\n      <Button type=\"button\" onClick={showForm}>\r\n        Forgot Password?\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  if (!userNameOrEmail) {\r\n    return (\r\n      <SendCodeForm \r\n        onSubmit={handleEmailSubmit}\r\n        onCancel={hideForm} \r\n        disabled={submitting}\r\n        error={error}\r\n      /> \r\n    );\r\n  }\r\n\r\n  if (userNameOrEmail && !passwordReset) {\r\n    return (\r\n      <ResetPasswordForm\r\n        onSubmit={handlePasswordSubmit}\r\n        onCancel={hideForm} \r\n        disabled={submitting}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <p>\r\n      Your password has been reset. You may now login.\r\n      <Button type=\"button\" onClick={hideForm}>Ok.</Button>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  graphql(FORGOT_PASSWORD, { name: 'getPasswordResetCode' }),\r\n  graphql(RESET_PASSWORD, { name: 'resetPassword' }),\r\n  withNoStack,\r\n)(ForgotPasswordButton);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"../Modal\";\r\nimport { withNoStack } from \"@nostack/no-stack\";\r\n\r\nimport ForgotPasswordButton from \"../ForgotPasswordButton\";\r\n\r\nconst LoginForm = ({ onSwitch, loading, currentUser, login, onClose }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  if (loading || currentUser) {\r\n    return null;\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      await login({\r\n        username,\r\n        password,\r\n      });\r\n    } catch (error) {\r\n      setError(\r\n        error.message ||\r\n          (error.graphQLErrors &&\r\n            error.graphQLErrors.length &&\r\n            error.graphQLErrors[0]) ||\r\n          error\r\n      );\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={onClose}>\r\n      <div className=\"dialog__title\">\r\n        <img\r\n          src=\"http://pivotatestaticassets.com/images/Pivotate Logo.svg\"\r\n          width=\"170\"\r\n        />\r\n        <h3>LOGIN</h3>\r\n      </div>\r\n      <form\r\n        autofill=\"false\"\r\n        method=\"post\"\r\n        onSubmit={handleSubmit}\r\n        className=\"form\"\r\n      >\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"nostack-username\">\r\n            <input\r\n              id=\"nostack-username\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              disabled={isSubmitting}\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form__input\">\r\n          <label htmlFor=\"nostack-password\">\r\n            <input\r\n              id=\"nostack-password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              disabled={isSubmitting}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form__input\">\r\n          <button\r\n            className=\"button button--yellow\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting || !username || !password}\r\n          >\r\n            Log In\r\n          </button>\r\n        </div>\r\n        {error && (\r\n          <div className=\"form__input\">\r\n            {\" \"}\r\n            You have entered an invalid username or password{\" \"}\r\n          </div>\r\n        )}\r\n\r\n        <br />\r\n        {/* <div>\r\n          <small>or</small>\r\n        </div> */}\r\n        {/* Temporarility Hide Social icons */}\r\n        {/* <div className=\"flex justify-space-between\">\r\n          <button type=\"button\" className=\"button button--fb\">\r\n            Log in with\r\n            <img className=\"social-icon\" height=\"14\" src=\"http://pivotatestaticassets.com/images/facebook.png\" />\r\n          </button>\r\n          <div style={{ width: \"50px\" }}></div>\r\n          <button type=\"button\" className=\"button button--google\">\r\n            Log in with\r\n            <img className=\"social-icon\" height=\"14\" src=\"http://pivotatestaticassets.com/images/google plus.png\" />\r\n          </button>\r\n        </div> */}\r\n        <br />\r\n        <small>\r\n          Dont have an account?\r\n          <a href=\"#\" className=\"teal--text\" onClick={onSwitch}>\r\n            &nbsp; Sign Up\r\n          </a>\r\n        </small>\r\n      </form>\r\n      {/* <div className=\"form__input\">\r\n        <ForgotPasswordButton />\r\n      </div> */}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default withNoStack(LoginForm);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { Unit } from \"@nostack/no-stack\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\nimport { withNoStack } from \"@nostack/no-stack\";\r\n\r\nimport { flattenData } from \"../../flattenData\";\r\n\r\nimport AppCreationForm from \"../AppSpec/AppCreationForm\";\r\nimport App from \"../AppSpec/App\";\r\n\r\nimport { SOURCE_APP_SPEC_ID } from \"../../config\";\r\nimport {\r\n  APP_SPEC_RELATIONSHIPS,\r\n  SOURCE_APP_SPEC_QUERY,\r\n} from \"../source-props/appSpec\";\r\n\r\n// np__added_start unit: appSpec2, comp: Apps, loc: styling\r\n\r\n// add styling here\r\nconst AppsStyleWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n// np__added_end unit: appSpec2, comp: Apps, loc: styling\r\n\r\nclass Apps extends Component {\r\n  // np__added_start unit: appSpec2, comp: Apps, loc: beginning\r\n  // np__added_end unit: appSpec2, comp: Apps, loc: beginning\r\n  state = {\r\n    selectedAppId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedAppId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedAppId: id });\r\n\r\n  render() {\r\n    const customerId = \"2ea51c4a-c072-4797-9de7-4bec0fc11db3\";\r\n    const { selectedAppId } = this.state;\r\n\r\n    const parameters = {\r\n      currentCustomer: customerId,\r\n    };\r\n\r\n    return (\r\n      <Unit\r\n        id={SOURCE_APP_SPEC_ID}\r\n        typeRelationships={APP_SPEC_RELATIONSHIPS}\r\n        query={SOURCE_APP_SPEC_QUERY}\r\n        parameters={parameters}\r\n      >\r\n        {({ loading, error, data, refetchQueries }) => {\r\n          if (loading) return \"Loading...\";\r\n\r\n          if (error) {\r\n            console.error(error);\r\n            return `Error: ${error.graphQLErrors}`;\r\n          }\r\n\r\n          const apps = data.unitData.map((el) => flattenData(el));\r\n\r\n          return (\r\n            <>\r\n              <div className=\"box\">\r\n                <div className=\"flex flex-column\">\r\n                  {apps &&\r\n                    apps.map((app, i) => (\r\n                      <App\r\n                        key={v4()}\r\n                        parentId={customerId}\r\n                        app={app}\r\n                        selected={app.id === selectedAppId}\r\n                        refetchQueries={refetchQueries}\r\n                        onSelect={this.handleSelect}\r\n                      />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n            </>\r\n          );\r\n        }}\r\n      </Unit>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withNoStack(Apps);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { Unit } from \"@nostack/no-stack\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\nimport { withNoStack } from \"@nostack/no-stack\";\r\n\r\nimport { flattenData } from \"../../flattenData\";\r\n\r\nimport AppCreationForm from \"../AppSpec/AppCreationForm\";\r\nimport App from \"../AppSpec/App\";\r\n\r\nimport { SOURCE_APP_SPEC_ID } from \"../../config\";\r\nimport {\r\n  APP_SPEC_RELATIONSHIPS,\r\n  SOURCE_APP_SPEC_QUERY,\r\n} from \"../source-props/appSpec\";\r\n\r\n// np__added_start unit: appSpec, comp: Apps, loc: styling\r\n\r\n// add styling here\r\nconst AppsStyleWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n// np__added_end unit: appSpec, comp: Apps, loc: styling\r\n\r\nclass Apps extends Component {\r\n  // np__added_start unit: appSpec, comp: Apps, loc: beginning\r\n  // np__added_end unit: appSpec, comp: Apps, loc: beginning\r\n  state = {\r\n    selectedAppId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedAppId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedAppId: id });\r\n\r\n  render() {\r\n    const customerId = \"2ea51c4a-c072-4797-9de7-4bec0fc11db3\";\r\n    const { selectedAppId } = this.state;\r\n\r\n    const parameters = {\r\n      currentCustomer: customerId,\r\n    };\r\n\r\n    return (\r\n      <Unit\r\n        id={SOURCE_APP_SPEC_ID}\r\n        typeRelationships={APP_SPEC_RELATIONSHIPS}\r\n        query={SOURCE_APP_SPEC_QUERY}\r\n        parameters={parameters}\r\n      >\r\n        {({ loading, error, data, refetchQueries }) => {\r\n          if (loading) return \"Loading...\";\r\n\r\n          if (error) {\r\n            console.error(error);\r\n            return `Error: ${error.graphQLErrors}`;\r\n          }\r\n\r\n          const apps = data.unitData.map((el) => flattenData(el));\r\n\r\n          return (\r\n            <>\r\n              <div className=\"box\">\r\n                <div className=\"flex flex-column\">\r\n                  {apps &&\r\n                    apps.map((app, i) => (\r\n                      <App\r\n                        key={v4()}\r\n                        parentId={customerId}\r\n                        app={app}\r\n                        selected={app.id === selectedAppId}\r\n                        refetchQueries={refetchQueries}\r\n                        onSelect={this.handleSelect}\r\n                      />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n            </>\r\n          );\r\n        }}\r\n      </Unit>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withNoStack(Apps);\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MenuContainer = styled.div`\r\n  padding: 1em;\r\n  border: 1px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n  box-shadow: 10px 10px 8px rgba(0, 0, 0, 0.6);\r\n\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Button = styled.button(({ selected }) => `\r\n  font-size: 1.25em;\r\n  background-color: #ffffff;\r\n  opacity: ${selected ? 1.0 : 0.5};\r\n  border: none;\r\n  padding: 5px;\r\n  cursor: ${selected ? 'initial' : 'pointer'};\r\n  transition: opacity 0.5s ease;\r\n\r\n  &:hover {\r\n    opacity: 1.0;\r\n    text-decoration: underline;\r\n  }\r\n`);\r\n\r\nconst AuthTabs = ({ menuTitles, children }) => {\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <MenuContainer>\r\n        {menuTitles.map((title, index) => (\r\n          <Button\r\n            key={index}\r\n            selected={index === selectedTab}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              setSelectedTab(index);\r\n            }}\r\n          >\r\n            {title}\r\n          </Button>\r\n        ))}\r\n      </MenuContainer>\r\n      <div>\r\n        {React.Children.map(children, (child, index) => {\r\n          if (index !== selectedTab) {\r\n            return null;\r\n          }\r\n\r\n          return (\r\n            <div className=\"test\" key={index}>{child}</div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthTabs;\r\n","import React, { Component, createRef } from \"react\";\r\nimport { Unit } from \"@nostack/no-stack\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\n\r\nimport { flattenData } from \"../../../flattenData\";\r\n\r\nimport AppCreationForm from \"../AppCreationForm\";\r\nimport DescriptionCreationForm from \"../DescriptionCreationForm\";\r\nimport App from \"../App\";\r\nimport { connect } from \"react-redux\";\r\nimport { increment, decrement, currentUser } from \"../../../actions\";\r\n\r\nimport { SOURCE_APP_SPEC_ID } from \"../../../config\";\r\nimport {\r\n  APP_SPEC_RELATIONSHIPS,\r\n  SOURCE_APP_SPEC_QUERY,\r\n} from \"../../source-props/appSpec\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    counter: state.counter,\r\n    user: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  increment,\r\n  currentUser,\r\n});\r\n// np__added_start unit: appSpec, comp: Apps, loc: styling\r\n\r\n// add styling here\r\nconst AppsStyleWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n// np__added_end unit: appSpec, comp: Apps, loc: styling\r\n\r\nclass Apps extends Component {\r\n  // np__added_start unit: appSpec, comp: Apps, loc: beginning\r\n  // np__added_end unit: appSpec, comp: Apps, loc: beginning\r\n  state = {\r\n    selectedAppId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedAppId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedAppId: id });\r\n\r\n  render() {\r\n    const { customerId } = this.props;\r\n    const { selectedAppId } = this.state;\r\n\r\n    const parameters = {\r\n      currentCustomer: customerId,\r\n    };\r\n\r\n    return (\r\n      <Unit\r\n        id={SOURCE_APP_SPEC_ID}\r\n        typeRelationships={APP_SPEC_RELATIONSHIPS}\r\n        query={SOURCE_APP_SPEC_QUERY}\r\n        parameters={parameters}\r\n      >\r\n        {({ loading, error, data, refetchQueries }) => {\r\n          if (loading) return \"Loading...\";\r\n\r\n          if (error) {\r\n            console.error(error);\r\n            return `Error: ${error.graphQLErrors}`;\r\n          }\r\n\r\n          const apps = data.unitData.map((el) => flattenData(el));\r\n\r\n          return (\r\n            <div style={{ maxWidth: \"769px\" }}>\r\n              {/* <button\r\n                onClick={() => this.props.dispatch({ type: \"CURRENT_USER\" })}\r\n              /> */}\r\n\r\n              {apps.length == 0 ? (\r\n                <AppCreationForm\r\n                  customerId={customerId}\r\n                  refetchQueries={refetchQueries}\r\n                />\r\n              ) : (\r\n                <div> </div>\r\n              )}\r\n              {apps.length > 0 ? (\r\n                <AppsStyleWrapper\r\n                  ref={this.wrapperRef}\r\n                  onClick={this.handleClick}\r\n                >\r\n                  {apps &&\r\n                    apps.map((app) => (\r\n                      <App\r\n                        hasApp={apps.length > 0}\r\n                        key={v4()}\r\n                        parentId={customerId}\r\n                        app={app}\r\n                        selected={app.id === selectedAppId}\r\n                        refetchQueries={refetchQueries}\r\n                        onSelect={this.handleSelect}\r\n                      />\r\n                    ))}\r\n                </AppsStyleWrapper>\r\n              ) : (\r\n                <div> </div>\r\n              )}\r\n              {/* np__added_start unit: appSpec, comp: Apps, loc: renderEnding */}\r\n              {/* np__added_end unit: appSpec, comp: Apps, loc: renderEnding */}\r\n            </div>\r\n          );\r\n        }}\r\n      </Unit>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Apps);\r\n","import React, { useState } from \"react\";\r\nimport { withNoStack } from \"@nostack/no-stack\";\r\nimport { NoStackConsumer } from \"@nostack/no-stack\";\r\nimport Apps from \"../AppSpec/Apps\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../actions\";\r\n\r\nconst meetingApp = ({ loading, currentUser, login, jumpToStep }) => {\r\n  const onNext = () => {\r\n    jumpToStep(1);\r\n  };\r\n\r\n  // const mapDispatchToProps = (dispatch) => {\r\n  //   dispatch({\r\n  //     type: \"SEARCHTERMCHANGE\",\r\n  //     payLoad: {\r\n  //       userId: \"1\",\r\n  //       sample: \"wew\",\r\n  //     },\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Apps customerId={currentUser.id} onNext={() => onNext()}></Apps>\r\n      {/* <button onClick={() => dispatch(increment())}>+</button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withNoStack(meetingApp);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NoStackConsumer } from \"@nostack/no-stack\";\r\n\r\nimport { PLATFORM_ID, TYPE_CUSTOMER_ID } from \"../../../config\";\r\n\r\nimport AuthTabs from \"../../AuthTabs\";\r\nimport CreateApp from \"../../meetingSteps/createApp\";\r\nimport UserType from \"../../meetingSteps/createUserType\";\r\nimport JobSeeker from \"../../meetingSteps/jobSeeker\";\r\nimport LoginForm from \"../../LoginForm\";\r\nimport RegistrationForm from \"../../RegistrationForm\";\r\nimport Apps from \"../../AppSpec/Apps\";\r\nimport StepZilla from \"react-stepzilla\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../../../actions\";\r\n\r\nconst LoginWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst App = ({ loading, currentUser, login }) => {\r\n  const counter = useSelector((state) => state.counter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {/* <NavBar /> */}\r\n      <div className=\"App\" style={{ backgroundColor: \"#f7f7f7\" }}>\r\n        <NoStackConsumer>\r\n          {({ loading, currentUser }) => {\r\n            if (loading) return null;\r\n\r\n            if (!currentUser) {\r\n              return (\r\n                <LoginWrapper>\r\n                  <AuthTabs menuTitles={[\"Login\", \"Register\"]}>\r\n                    <LoginForm />\r\n                    <RegistrationForm\r\n                      platformId={PLATFORM_ID}\r\n                      userClassId={TYPE_CUSTOMER_ID}\r\n                    />\r\n                  </AuthTabs>\r\n                </LoginWrapper>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <>\r\n                {/* <button onClick={() => dispatch(increment())}>+</button>\r\n                <button onClick={() => dispatch(decrement())}>-</button>\r\n               Step: {counter} */}\r\n                <div className=\"step-progress\">\r\n                  <div className=\"flex justify-center\">\r\n                    <Apps customerId={currentUser.id}> </Apps>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          }}\r\n        </NoStackConsumer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}