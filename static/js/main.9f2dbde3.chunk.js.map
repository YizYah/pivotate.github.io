{"version":3,"sources":["App.js","serviceWorker.js","client/index.js","index.js","config/index.js"],"names":["AppHeader","React","lazy","AppFooter","Home","Pricing","privacyPolicy","underConstruction","termsAndConditions","App","childRef","useRef","Suspense","fallback","class","href","ref","path","process","exact","onSignUp","current","modalHandlerRegistration","component","Boolean","window","location","hostname","match","authLink","createAuthLink","PLATFORM_ID","link","ApolloLink","from","httpLink","ApolloClient","cache","InMemoryCache","dataIdFromObject","object","id","__typename","v4","tagManagerArgs","gtmId","js","Date","TagManager","initialize","ReactDOM","render","client","platformId","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","TYPE_CUSTOMER_ID"],"mappings":"kWAkBMA,EAAYC,IAAMC,MAAK,kBAAM,uDAC7BC,EAAYF,IAAMC,MAAK,kBAAM,iCAC7BE,EAAOH,IAAMC,MAAK,kBAAM,iCACxBG,EAAUJ,IAAMC,MAAK,kBAAM,iCAC3BI,EAAgBL,IAAMC,MAAK,kBAC/B,iCAEIK,EAAoBN,IAAMC,MAAK,kBACnC,kCAEIM,EAAqBP,IAAMC,MAAK,kBACpC,iCAqFaO,EAlFH,WACV,IAAMC,EAAWC,mBAEjB,OACE,kBAAC,IAAMC,SAAP,CACEC,SACE,6BAASC,MAAM,gCACb,yBAAKA,MAAM,wBACT,yBAAKA,MAAM,+BACT,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,cACT,iDAEF,wBAAIA,MAAM,gBACR,yBAAKA,MAAM,cACR,IACD,4CAFF,WAEoC,KAC7B,IACP,iDAEF,yBAAKA,MAAM,6BACT,sCACO,0CADP,gBAIF,2BACE,6BACA,6BAFF,8LAOA,yBAAKA,MAAM,mBACT,uBACEC,KAAK,sBACLD,MAAM,yCAFR,eAIc,0BAAMA,MAAM,yBAStC,kBAAC,aAAD,KACE,kBAAC,IAAD,KACE,kBAACd,EAAD,CAAWgB,IAAKN,IAEhB,kBAAC,IAAD,CAAOO,KAAI,UAAKC,GAAL,KAAgCC,OAAK,GAC9C,kBAACf,EAAD,CACEgB,SAAU,kBAAMV,EAASW,QAAQC,+BAIrC,kBAAC,IAAD,CACEL,KAAI,UAAKC,GAAL,YACJK,UAAWlB,IAEb,kBAAC,IAAD,CACEY,KAAI,UAAKC,GAAL,uBACJK,UAAWhB,IAEb,kBAAC,IAAD,CACEU,KAAI,UAAKC,GAAL,mBACJK,UAAWjB,IAEb,kBAAC,IAAD,CACEW,KAAI,UAAKC,GAAL,yBACJK,UAAWf,IAEb,kBAACL,EAAD,CACEiB,SAAU,kBAAMV,EAASW,QAAQC,kCC7FzBE,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sCCTEC,EAAWC,YAAeC,KAE1BC,EAAOC,IAAWC,KAAK,CAACL,EAAUM,MAEzB,MAAIC,IAAa,CAC9BJ,OACAK,MAAO,IAAIC,IAAc,CACvBC,iBAAkB,SAAAC,GAAM,OACtBA,EAAOC,GAAKD,EAAOC,GAAKD,EAAOE,WAAaC,oB,kBCL5CC,EAAiB,CACrBC,MAAO,cACPC,GAAI,IAAIC,MAGVC,IAAWC,WAAWL,GAEtBM,IAASC,OACP,kBAAC,IAAD,CAAiBC,OAAQA,EAAQC,WAAYtB,KAC3C,kBAAC,EAAD,OAEFuB,SAASC,eAAe,SF6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,gCGtInB,oEAaO,IAAM9B,EAAc,sBAOd+B,EAAiB,yC","file":"static/js/main.9f2dbde3.chunk.js","sourcesContent":["import React, { Suspense, lazy, useRef } from \"react\";\n\nimport \"./scss/style.scss\";\n\nimport { NoStackConsumer } from \"@nostack/no-stack\";\n\nimport { PLATFORM_ID, TYPE_CUSTOMER_ID } from \"./config\";\nimport {\n  BrowserRouter,\n  HashRouter,\n  useLocation,\n  Route,\n  Link,\n  withRouter\n} from \"react-router-dom\";\n\nimport ScrollToTop from \"react-router-scroll-top\";\n\nconst AppHeader = React.lazy(() => import(\"./components/AppHeader\"));\nconst AppFooter = React.lazy(() => import(\"./components/AppFooter\"));\nconst Home = React.lazy(() => import(\"./components/Pages/Home\"));\nconst Pricing = React.lazy(() => import(\"./components/Pages/Pricing\"));\nconst privacyPolicy = React.lazy(() =>\n  import(\"./components/Pages/Privacy-policy\")\n);\nconst underConstruction = React.lazy(() =>\n  import(\"./components/Pages/Under-construction\")\n);\nconst termsAndConditions = React.lazy(() =>\n  import(\"./components/Pages/Terms-and-conditions\")\n);\n\nconst App = () => {\n  const childRef = useRef();\n\n  return (\n    <React.Suspense\n      fallback={\n        <section class=\"hero triangle--teal triangle\">\n          <div class=\"container full-width\">\n            <div class=\"flex flex-wrap items-center\">\n              <div class=\"hero__header\">\n                <div class=\"hero__text\">\n                  <strong>CREATE YOUR </strong>\n                </div>\n                <h1 class=\"yellow--text\">\n                  <div class=\"word-break\">\n                    {\" \"}\n                    <strong> CUSTOM </strong> WEB APP{\" \"}\n                  </div>{\" \"}\n                  <div>WITHIN WEEKS...</div>\n                </h1>\n                <div class=\"hero__text has--underline\">\n                  <span>\n                    THEN <strong>EASILY</strong> CHANGE IT!\n                  </span>\n                </div>\n                <p>\n                  <br />\n                  <br />\n                  Unlike all other custom web app builders out there, Pivotate\n                  allows you to pivot easily as you learn your usersâ€™ needs. No\n                  more unpredictable freelancers or cookie-cutter templates.\n                </p>\n                <div class=\"button__wrapper\">\n                  <a\n                    href=\"javascript:void(0);\"\n                    class=\"button button--rounded button--yellow\"\n                  >\n                    GET STARTED <span class=\"chevron right\"></span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      }\n    >\n      <HashRouter>\n        <ScrollToTop>\n          <AppHeader ref={childRef} />\n          {/* main */}\n          <Route path={`${process.env.PUBLIC_URL}/`} exact>\n            <Home\n              onSignUp={() => childRef.current.modalHandlerRegistration()}\n            />\n          </Route>\n\n          <Route\n            path={`${process.env.PUBLIC_URL}/pricing`}\n            component={Pricing}\n          ></Route>\n          <Route\n            path={`${process.env.PUBLIC_URL}/under-construction`}\n            component={underConstruction}\n          ></Route>\n          <Route\n            path={`${process.env.PUBLIC_URL}/privacy-policy`}\n            component={privacyPolicy}\n          ></Route>\n          <Route\n            path={`${process.env.PUBLIC_URL}/terms-and-conditions`}\n            component={termsAndConditions}\n          ></Route>\n          <AppFooter\n            onSignUp={() => childRef.current.modalHandlerRegistration()}\n          />\n          {/* main end */}\n        </ScrollToTop>\n      </HashRouter>\n    </React.Suspense>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === \"[::1]\" ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      const swUrl = ``;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ApolloClient } from \"apollo-client\";\nimport { ApolloLink } from \"apollo-link\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { v4 } from \"uuid\";\n\nimport { createAuthLink, httpLink } from \"@nostack/no-stack\";\n\nimport { PLATFORM_ID } from \"../config\";\n\nconst authLink = createAuthLink(PLATFORM_ID);\n\nconst link = ApolloLink.from([authLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache: new InMemoryCache({\n    dataIdFromObject: object =>\n      object.id ? object.id + object.__typename : v4()\n  })\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { NoStackProvider } from \"@nostack/no-stack\";\n\nimport { PLATFORM_ID } from \"./config\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport client from \"./client\";\n\nimport TagManager from \"react-gtm-module\";\n\nconst tagManagerArgs = {\n  gtmId: \"GTM-TS3Q48S\",\n  js: new Date()\n};\n\nTagManager.initialize(tagManagerArgs);\n\nReactDOM.render(\n  <NoStackProvider client={client} platformId={PLATFORM_ID}>\n    <App />\n  </NoStackProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\n  This file was generated automatically by nostack 'makecode' for the app 'pivotate2a'.\n  If you build a new stack from a template, this version will probably need to change.\n\n  For instance, it will update if you run 'makecode' again. Fair warning, that will\n  change a lot of your code. If you modify your current stack to add actions, sources,\n  or types, it would make sense to add constants here.\n\n  But, you should *not* add permanent, separate configuration material or other material that is not directly\n  'managed by NoStack, because this will will be replaced with every call to 'makecode'.\n */\n\n// stack id\nexport const PLATFORM_ID = 'us-east-1_Lq8L4ZLfA';\n\n// sources\nexport const SOURCE_REGISTRATION_INFO_ID='1b219263-3125-4bb4-a82e-1e181780fbb7';\n\n// types\nexport const TYPE_MODERATOR_ID='us-east-1_Lq8L4ZLfAmoderatorClass';\nexport const TYPE_CUSTOMER_ID='20a2b531-c0be-4509-aee3-2593d0524cfd';\nexport const TYPE_APP_ID='ea1e6967-4ed7-4019-bb47-3f7b7ccd5950';\nexport const TYPE_DESCRIPTION_ID='a0deeed9-bd18-4e96-aaf8-10b83a49cdc0';\nexport const TYPE_CREDIT_CARD_NUMBER_ID='a158f062-f084-4153-826f-cc8765380dc2';\nexport const TYPE_EXPIRATION_DATE_ID='0e7f5ae3-24d0-4e83-8640-fa0087b258ce';\nexport const TYPE_CSV_ID='a807220a-b28f-40eb-a45c-9bdc668dce95';\n\n// actions\n// CREATE_INSTANCE\nexport const CREATE_APP_FOR_REGISTRATION_INFO_ACTION_ID='01b49a59-ac70-479b-a699-31c07209751a';\nexport const CREATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='d618936e-245b-46c8-88a9-288a972c5714';\nexport const CREATE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='72b23144-5b82-4d0a-8c46-399da55c77c8';\nexport const CREATE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='dab0b3c7-5619-4083-bdff-43090e907277';\nexport const CREATE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='fd5c036a-30c6-4576-8cb9-9e1ace40eda7';\n\n// UPDATE_INSTANCE\nexport const UPDATE_APP_FOR_REGISTRATION_INFO_ACTION_ID='2340727a-1309-479e-bcb2-65b76d1686bf';\nexport const UPDATE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='b1de94df-2aeb-47c0-8853-a412f02e5315';\nexport const UPDATE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='da20f80c-7165-4c56-be15-f4f18d7e156f';\nexport const UPDATE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='d5639c9b-66ca-49ce-b9f2-923666a6846d';\nexport const UPDATE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='158c6a0c-01a0-4d82-8bf9-bc0c2e19ccd4';\n\n// DELETE_INSTANCE\nexport const DELETE_APP_FOR_REGISTRATION_INFO_ACTION_ID='30d86ee4-d585-4fb9-9a4c-54c8e5902327';\nexport const DELETE_DESCRIPTION_FOR_REGISTRATION_INFO_ACTION_ID='03a6b7ee-8d8b-47c2-a977-4912060f2c41';\nexport const DELETE_CREDIT_CARD_NUMBER_FOR_REGISTRATION_INFO_ACTION_ID='1f1efa77-3f87-41a4-9c51-5d0e1d842f1e';\nexport const DELETE_EXPIRATION_DATE_FOR_REGISTRATION_INFO_ACTION_ID='c780d8ff-7f74-4d44-b09e-c69a8656f01f';\nexport const DELETE_CSV_FOR_REGISTRATION_INFO_ACTION_ID='392a2c85-8306-4267-9187-24dd6ec2a7c5';\n\n// ADD_INSTANCE_ASSN\n\n// UPDATE_INSTANCE_ASSN\n\n// DELETE_INSTANCE_ASSN\n\n// CREATE_INSTANCE_WITH_UNOWNED_PARENT\n\n// ADDED\n\n// SUBMIT_FORM\nexport const SUBMIT_FORM_FOR_REGISTRATION_INFO_ACTION_ID='form-submission-add-version-9d2dd0e7-2aca-4212-88bc-59f8bf74e992';\n"],"sourceRoot":""}