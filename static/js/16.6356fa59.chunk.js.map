{"version":3,"sources":["custom/UnitDataContext.js","flattenData/index.js","components/source-props/appSpec.js","components/EditInstanceForm/index.js","components/DeleteInstanceMenu/index.js","components/AppSpec/UserTypeCreationForm/index.jsx","components/AppSpec/ScreenCreationForm/index.jsx","components/AppSpec/InfoTypeCreationForm/index.jsx","custom/SubInfoTypeCreationForm/index.jsx","custom/SubChildInfoType/index.js","custom/SubInfoChildTypes/index.js","custom/SubInfoType/index.js","custom/getChildData.js","custom/SubInfoTypesRecursive/index.js","components/AppSpec/InfoType/index.jsx","components/AppSpec/InfoTypes/index.jsx","components/AppSpec/Screen/index.jsx","components/AppSpec/Screens/index.jsx","components/AppSpec/UserType/index.jsx","components/AppSpec/UserTypes/index.jsx","components/AppSpec/DescriptionCreationForm/index.jsx","components/AppSpec/Description/index.jsx","components/AppSpec/Descriptions/index.jsx","custom/AppTitleAccordion/index.jsx","components/AppSpec/App/index.jsx","components/AppSpec/AppCreationForm/index.jsx","components/meetingSteps/jobSeeker.js"],"names":["createDataContext","state","action","type","unitData","payload","currentStage","childState","getUnitData","dispatch","data","setCurrentStage","stage","setChildState","Context","Provider","flattenData","element","flatData","instance","children","length","filter","child","map","typeId","instances","flattenChildData","SOURCE_APP_SPEC_QUERY","gql","APP_SPEC_RELATIONSHIPS","app","userType","screen","infoType","hasParent","description","Button","styled","button","props","hoverColor","useStyles","makeStyles","theme","titleLabel","fontSize","textAlign","textArea","width","backgroundColor","EditInstanceForm","id","label","value","onChange","onSave","onCancel","disabled","styles","htmlFor","TextField","className","variant","onClick","Container","div","DeleteInstanceMenu","onDelete","Form","Label","fadeInDown","input","keyframes","CalloutBox","minWidth","customWidth","maxWidth","helpIcon","color","closeIcon","textField","compose","graphql","EXECUTE","name","parentId","createUserType","refetchQueries","validateUserTypes","userTypeCreationCount","textLabel","useState","userTypeValue","updateUserTypeValue","loading","updateLoading","callout","setCallout","showCalloutBox","callOutText","showCallout","e","target","handleChange","onKeyPress","key","a","async","preventDefault","variables","actionId","CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","executionParameters","JSON","stringify","parentInstanceId","unrestricted","createUserTypeResponse","parse","Execute","handleSubmit","endAdornment","InputAdornment","position","createScreen","validateScreens","screenValue","updateScreenValue","CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID","createInfoType","validateInfoTypes","infoTypeValueCount","infoTypeValue","updateInfoTypeValue","CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","InputProps","childId","createSubInfoType","saveInstance","validateSubInfoTypes","subInfoTypeValueCount","subInfoValue","setSubInfoValue","createInfoTypeResponse","newInfoTypeData","ADD_HAS_PARENT_FOR_PARENT_ACTION_ID","childInstanceId","instanceId","console","log","SubInfoTypeWrapper","selected","isDeleting","infoTypeId","updateInstance","hasParentId","deleteInstance","onSelect","setSubInfoTypeValue","isEditMode","setIsEditMode","isSaving","setIsSaving","isDeleteMode","setIsDeleteMode","setIsDeleting","infoTypeData","find","TYPE_INFO_TYPE_ID","UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","SubInfoChildTypes","subInfoId","subInfoTypeID","setSubInfoTypeID","createRef","subInfoTypeData","validateCount","setvalidateCount","handleSelect","SubChildInfoType","v4","handleSubInfoTypeValueChange","parentData","_","groupBy","_children","prData","Object","keys","childData","push","InfoTypesStyleWrapper","TitleWrapper","Child","show","last","currentId","parentLabel","setParentLabel","setChildCurrentId","showChild","setChildSubInfoTypeValue","isChildEditMode","setIsChildEditMode","labelValue","setLabelValue","useEffect","Fragment","SubInfoComponent","setShow","setCurrentId","selectedInfoTypeId","setselectedInfoTypeId","labelParent","setLabel","wrapperRef","ref","checkID","InputLabel","InfoTypeStyleWrapper","updateIsEditMode","updateIsSaving","updateIsDeleteMode","updateIsDeleting","parentState","setParentState","selectSubInfoId","setSubInfoId","getChildData","InfoTypes","handleClick","node","current","contains","setState","onChangeHelper","document","addEventListener","this","infoTypes","removeEventListener","screenId","onUpdate","Component","contextType","UnitDataContext","ScreenStyleWrapper","UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID","DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID","ScreensStyleWrapper","Screens","selectedScreenId","userTypeId","screens","UserTypeStyleWrapper","defaultProps","screenData","TYPE_SCREEN_ID","UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","UserTypesStyleWrapper","UserTypes","selectedUserTypeId","appId","userTypes","createDescription","descriptionValue","updateDescriptionValue","CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","charCode","DescriptionStyleWrapper","UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","DescriptionsStyleWrapper","AppTitleAccordion","panel","title","React","expanded","setExpanded","root","Accordion","event","isExpanded","accordion","AccordionSummary","expandIcon","aria-controls","classes","content","accordionSummary","Typography","heading","secondaryHeading","AccordionDetails","margin","typography","pxToRem","fontWeight","flexBasis","flexShrink","border","borderRadius","padding","display","justifyContent","AppStyleWrapper","appValue","updateAppValue","userTypeData","TYPE_USER_TYPE_ID","descriptionData","TYPE_DESCRIPTION_ID","descriptions","UPDATE_APP_FOR_APP_SPEC_ACTION_ID","DELETE_APP_FOR_APP_SPEC_ACTION_ID","customerId","createApp","CREATE_APP_FOR_APP_SPEC_ACTION_ID","Apps","selectedAppId","parameters","currentCustomer","SOURCE_APP_SPEC_ID","typeRelationships","query","error","graphQLErrors","apps","el","i","withNoStack"],"mappings":"gLA2BqCA,aAzBb,SAACC,EAAOC,GAC9B,OAAQA,EAAOC,MACb,IAAK,cACH,MAAO,CAAEC,SAAUF,EAAOG,SAC5B,IAAK,WACH,MAAO,CAAEC,aAAcJ,EAAOG,SAChC,IAAK,gBACH,OAAO,eAAKJ,EAAZ,CAAmBM,WAAYL,EAAOG,UACxC,QACE,OAAOJ,KAkBX,CAAEO,YAdgB,SAACC,GAAD,OAAc,SAACC,GACjCD,EAAS,CAAEN,KAAM,cAAeE,QAASK,MAa1BC,gBAVO,SAACF,GAAD,OAAc,SAACG,GACrCH,EAAS,CAAEN,KAAM,WAAYE,QAASO,MASNC,cANZ,SAACJ,GAAD,OAAc,SAACR,GACnCQ,EAAS,CAAEN,KAAM,gBAAiBE,QAASJ,OAM3C,CACEG,SAAU,GACVE,aAAc,EACdC,WAAY,KANDO,E,EAAAA,Q,EAASC,U,+ECZjB,SAASC,EAAYC,GAC1B,IAAMC,EAAQ,eACTD,EAAQE,SADC,CAEZC,SAAU,KASZ,OANIH,EAAQG,UAAYH,EAAQG,SAASC,OAAS,IAChDH,EAASE,SAAWH,EAAQG,SACzBE,QAAO,SAACC,GAAD,QAAaA,KACpBC,KAAI,SAACD,GAAD,OAxBJ,SAA0BN,GAC/B,IAAMC,EAAW,CACfO,OAAQR,EAAQQ,OAChBC,UAAW,IASb,OANIT,EAAQS,WAAaT,EAAQS,UAAUL,OAAS,IAClDH,EAASQ,UAAYT,EAAQS,UAC1BJ,QAAO,SAACC,GAAD,QAAaA,KACpBC,KAAI,SAACL,GAAD,OAAcH,EAAYG,OAG5BD,EAYaS,CAAiBJ,OAG9BL,I,6wECzBF,IAAMU,E,MAAwBC,GAAH,KA0ErBC,EAAyB,CAClCC,IAAK,CACDC,SAAU,CACNC,OAAQ,CACJC,SAAU,CACNC,UAAW,QAIvBC,YAAa,Q,2ZC5DrB,IAAMC,EAASC,UAAOC,OAAV,KASC,SAAAC,GAAK,OAAIA,EAAMC,YAAc,aAIpCC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,WAAY,CACRC,SAAU,QACVC,UAAW,WAGfC,SAAU,CACRC,MAAO,MACPC,gBAAiB,aAwDNC,MAnDf,YAQI,IAPFC,EAOC,EAPDA,GACAC,EAMC,EANDA,MACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,SACAC,EACC,EADDA,SAGMC,EAASjB,IAEf,OACE,oCAEE,2BAAOkB,QAASR,GAEd,kBAACS,EAAA,EAAD,CACEC,UAAWH,EAAOX,SAClBK,MAAOA,EACPD,GAAIA,EACJjD,KAAK,OACLmD,MAAOA,EACPC,SAAUA,EACVG,SAAUA,EACVK,QAAQ,cAKZ,kBAAC1B,EAAD,CACElC,KAAK,SACLsC,WAAW,UACXuB,QAASR,EACTE,SAAUA,GAJZ,UAQA,kBAACrB,EAAD,CACElC,KAAK,SACLsC,WAAW,UACXuB,QAASP,EACTC,SAAUA,GAJZ,Y,kZCzEN,IAAMrB,EAASC,UAAOC,OAAV,KASC,SAACC,GAAD,OAAWA,EAAMC,YAAc,aAItCwB,EAAY3B,UAAO4B,IAAV,KAmCAC,MA5Bf,YAII,IAHFC,EAGC,EAHDA,SACAX,EAEC,EAFDA,SACAC,EACC,EADDA,SAEA,OACE,kBAACO,EAAD,eAEE,kBAAC,EAAD,CACE9D,KAAK,SACLsC,WAAW,UACXuB,QAASI,EACTV,SAAUA,GAJZ,UAQA,kBAAC,EAAD,CACEvD,KAAK,SACLsC,WAAW,UACXuB,QAASP,EACTC,SAAUA,GAJZ,Y,8sDCxBN,IAAMW,EAAO/B,UAAO4B,IAAV,KAYJI,EAAQhC,UAAOe,MAAV,KA4BLkB,GArBQjC,UAAOkC,MAAV,KAcYlC,UAAO4B,IAAV,KAODO,oBAAH,MAWVC,EAAapC,UAAO4B,IAAV,IAEDK,GA4BT7B,EAAYC,YAAW,CAC3BJ,OAAQ,CACNoC,SAAU,GAEZC,YAAa,CACXC,SAAU,MACVF,SAAU,MACVzB,gBAAiB,QAEnB4B,SAAU,CACRhC,SAAU,SACViC,MAAO,WAETC,UAAW,CACTD,MAAO,QACPjC,SAAU,UAEZmC,UAAW,CACThC,MAAO,UAMIX,UAAOC,OAAV,KAwJG2C,UAAQC,YAAQC,IAAS,CAAEC,KAAM,mBAAjCH,EApJf,YAYI,IAAD,EAXDI,EAWC,EAXDA,SACAC,EAUC,EAVDA,eACAC,EASC,EATDA,eAEAC,EAOC,EAPDA,kBACAlC,EAMC,EANDA,SACAF,EAKC,EALDA,MACAqC,EAIC,EAJDA,sBACAhC,EAGC,EAHDA,SACAiC,EAEC,EAFDA,UAEC,EAC4CC,mBAAS,IADrD,mBACMC,EADN,KACqBC,EADrB,OAEgCF,oBAAS,GAFzC,mBAEMG,EAFN,KAEeC,EAFf,KAKKrC,EAASjB,IALd,EAM6BkD,oBAAS,GANtC,mBAMMK,EANN,KAMeC,EANf,KAOKC,EAAiBF,GAAiC,IAAtBR,EAC9BW,EAAa,GAGfA,EADCV,EAAwB,EACZC,EAED,yBAAD,OAA0BtC,EAAK,cAAUA,GAAU,IAiDhE,IAAMgD,EAAc,WAClBH,GAAYD,IAEd,OACE,kBAAC5B,EAAD,KAEE,kBAACC,EAAD,CAAOV,QAAQ,kBACb,kBAACC,EAAA,GAAD,GACGC,UAAWH,EAAOsB,UAClB5B,MAAO+C,EACP9C,MAAOuC,EACPtC,SAAU,SAAC+C,IAxDpB,SAAsBA,GACpBR,EAAoBQ,EAAEC,OAAOjD,OAuDJkD,CAAaF,GAAI/C,EAAS+C,EAAEC,OAAOjD,QACrDmD,WAvBT,SAAwBH,GAKR,UAAVA,EAAEI,KAnCR,SAA4BJ,GAA5B,QAAAK,EAAAC,OAAA,mDACEN,EAAEO,iBAEGhB,EAHP,wDAOEG,GAAc,GAPhB,WAAAW,EAAA,MASuCpB,EAAe,CAClDuB,UAAW,CACTC,SAAUC,IACVC,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClBhC,MAAOuC,IAETwB,cAAc,GAEhB7B,oBAlBJ,OASQ8B,EATR,OAqB0BJ,KAAKK,MAAMD,EAAuB5G,KAAK8G,SAK/D1B,EAAoB,IACpBE,GAAc,GA3BhB,sCAoCIyB,CAAanB,KAYX,sBAMUT,GANV,yBAOaE,GAASrC,GAPtB,wBAQW,YARX,2BASe,CACVgE,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACpB,kBAAC,IAAD,CAAiB9D,UAAWH,EAAOmB,SAAUd,QAASqC,OAZlE,KAmBDF,EACC,kBAACzB,EAAD,KACG0B,EAAa,IACd,kBAAC,IAAD,CAAWtC,UAAWH,EAAOqB,UAAWhB,QAASqC,KAEjD,S,m+DCtNV,IAAMhC,GAAO/B,UAAO4B,IAAV,MAkCJI,GAAQhC,UAAOe,MAAV,MA0BLkB,IAnBQjC,UAAOkC,MAAV,MAcYlC,UAAO4B,IAAV,MAKDO,oBAAH,MAWVC,GAAapC,UAAO4B,IAAV,IAEDK,IA4BT7B,GAAYC,YAAW,CAC3BJ,OAAQ,CACNoC,SAAU,GAEZC,YAAa,CACXC,SAAU,MACVF,SAAU,MACVzB,gBAAiB,QAEnB4B,SAAU,CACRhC,SAAU,SACViC,MAAO,WAETC,UAAW,CACTD,MAAO,QACPjC,SAAU,QAEZmC,UAAW,CACThC,MAAO,UAMIX,UAAOC,OAAV,KA+IG2C,WAAQC,YAAQC,IAAS,CAAEC,KAAM,iBAAjCH,EA3If,YAaI,IAAD,EAZDI,EAYC,EAZDA,SACAuC,EAWC,EAXDA,aACArC,EAUC,EAVDA,eAEAsC,EAQC,EARDA,gBACApE,EAOC,EAPDA,SACAH,EAMC,EANDA,SACAF,EAKC,EALDA,MACAqC,EAIC,EAJDA,sBACAC,EAGC,EAHDA,UAGC,EACwCC,mBAAS,IADjD,mBACMmC,EADN,KACmBC,EADnB,OAEgCpC,oBAAS,GAFzC,mBAEMG,EAFN,KAEeC,EAFf,KAKKrC,EAASjB,KALd,EAM6BkD,oBAAS,GANtC,mBAMMK,EANN,KAMeC,EANf,KAOKC,EAAiBF,GAA+B,IAApB6B,EAC9B1B,EAAa,GAGfA,EADCV,EAAwB,EACZC,EAED,2BAAD,OAA4BtC,EAAK,cAAUA,GAAU,IA6ClE,IAAMgD,EAAc,WAClBH,GAAYD,IAEd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOrC,QAAQ,gBACf,kBAACC,EAAA,GAAD,GACKC,UAAWH,EAAOsB,UAClB5B,MAAO+C,EACP9C,MAAOyE,EACPxE,SAAU,SAAC+C,IAnDpB,SAAsBA,GACpB0B,EAAkB1B,EAAEC,OAAOjD,OAkDFkD,CAAaF,GAAI/C,EAAS+C,EAAEC,OAAOjD,QACrDmD,WAvBT,SAAwBH,GAKR,UAAVA,EAAEI,KA9BR,SAA4BJ,GAA5B,EAAAK,EAAAC,OAAA,mDACEN,EAAEO,iBAEGkB,EAHP,wDAOE/B,GAAc,GAPhB,WAAAW,EAAA,MASqCkB,EAAa,CAC9Cf,UAAW,CACTC,SAAUkB,IACVhB,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClBhC,MAAOyE,IAETV,cAAc,GAEhB7B,oBAlBJ,cAqBEwC,EAAkB,IAClBhC,GAAc,GAtBhB,qCA+BIyB,CAAanB,KAYb,sBAMYyB,GANZ,yBAOerE,GAAUqC,GAPzB,wBAQa,YARb,2BASiB,CACV2B,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACpB,kBAAC,IAAD,CAAiB9D,UAAWH,EAAOmB,SAAUd,QAASqC,OAZpE,KAkBCF,EACG,kBAAC,GAAD,KACGC,EAAa,IACd,kBAAC,IAAD,CAAWtC,UAAWH,EAAOqB,UAAWhB,QAASqC,KAEnD,S,wjDCpOV,IAAMhC,GAAO/B,UAAO4B,IAAV,MAMJI,GAAQhC,UAAOe,MAAV,MAyBLkB,IAnBQjC,UAAOkC,MAAV,MAcYlC,UAAO4B,IAAV,MAKDO,oBAAH,OAWVC,GAAapC,UAAO4B,IAAV,KAEDK,IA4BT7B,GAAYC,YAAW,CAC3BJ,OAAQ,CACNoC,SAAU,GAEZC,YAAa,CACXC,SAAU,MACVF,SAAU,MACVzB,gBAAiB,QAEnB4B,SAAU,CACRhC,SAAU,SACViC,MAAO,WAETC,UAAW,CACTD,MAAO,QACPjC,SAAU,QAEZmC,UAAW,CACThC,MAAO,UAKIX,UAAOC,OAAV,MAmKG2C,WAAQC,YAAQC,IAAS,CAAEC,KAAM,mBAAjCH,EA/Jf,YAYI,IAXFI,EAWC,EAXDA,SACA4C,EAUC,EAVDA,eACA1C,EASC,EATDA,eAEA2C,EAOC,EAPDA,kBACA9E,EAMC,EANDA,MACAK,EAKC,EALDA,SACA0E,EAIC,EAJDA,mBACAzC,EAGC,EAHDA,UACApC,EAEC,EAFDA,SAEC,EAC4CqC,mBAAS,IADrD,mBACMyC,EADN,KACqBC,EADrB,OAEgC1C,oBAAS,GAFzC,mBAEMG,EAFN,KAEeC,EAFf,KAKKrC,EAASjB,KALd,EAM6BkD,oBAAS,GANtC,mBAMMK,EANN,KAMeC,EANf,KAOKC,EAAiBF,GAAiC,IAAtBkC,EAC9B/B,EAAa,GAGfA,EADCgC,EAAqB,EACTzC,EAED,yBAAD,OAA0BtC,EAAK,cAAUA,GAAU,IA8ChE,IAAMgD,EAAc,WAClBH,GAAYD,IAEd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOrC,QAAQ,kBACb,kBAACC,EAAA,EAAD,CACEC,UAAWH,EAAOsB,UAClB5B,MAAO+C,EACP7C,SAnDR,SAAsB+C,GACpBgC,EAAoBhC,EAAEC,OAAOjD,OAC7BC,EAAS+C,EAAEC,OAAOjD,QAkDZmD,WAtBR,SAAwBH,GAKR,UAAVA,EAAEI,KA9BR,SAA4BJ,GAA5B,EAAAK,EAAAC,OAAA,mDACEN,EAAEO,iBAEGwB,EAHP,wDAOErC,GAAc,GAPhB,WAAAW,EAAA,MASuCuB,EAAe,CAClDpB,UAAW,CACTC,SAAUwB,IACVtB,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClBhC,MAAO+E,IAEThB,cAAc,GAEhB7B,oBAlBJ,cAqBE8C,EAAoB,IACpBtC,GAAc,GAtBhB,qCA+BIyB,CAAanB,IAiBThD,MAAO+E,EACP3E,SAAUA,GAAYqC,EACtBhC,QAAQ,WACRyE,WAAY,CACVd,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAAC,IAAD,CACE9D,UAAWH,EAAOmB,SAClBd,QAASqC,SAQpBF,EACC,kBAAC,GAAD,KACGC,EAAa,IACd,kBAAC,IAAD,CAAWtC,UAAWH,EAAOqB,UAAWhB,QAASqC,KAEjD,S,4iDClNV,IAAMhC,GAAO/B,UAAO4B,IAAV,MAMJI,GAAQhC,UAAOe,MAAV,MA0BLkB,IAnBQjC,UAAOkC,MAAV,MAcYlC,UAAO4B,IAAV,MAKDO,oBAAH,OAWVC,GAAapC,UAAO4B,IAAV,KAEDK,IA4BT7B,GAAYC,YAAW,CAC3BJ,OAAQ,CACNoC,SAAU,GAEZC,YAAa,CACXC,SAAU,MACVF,SAAU,MACVzB,gBAAiB,QAEnB4B,SAAU,CACRhC,SAAU,SACViC,MAAO,WAETC,UAAW,CACTD,MAAO,QACPjC,SAAU,QAEZmC,UAAW,CACThC,MAAO,UAyKIiC,IArKA5C,UAAOC,OAAV,MAqKG2C,IACbC,YAAQC,IAAS,CAAEC,KAAM,sBACzBF,YAAQC,IAAS,CAAEC,KAAM,iBAFZH,EA/JiB,SAAC,GAa1B,IAZLuD,EAYI,EAZJA,QACAnD,EAWI,EAXJA,SACAoD,EAUI,EAVJA,kBACAlD,EASI,EATJA,eACAmD,EAQI,EARJA,aAEAC,EAMI,EANJA,qBACAvF,EAKI,EALJA,MACAK,EAII,EAJJA,SACAmF,EAGI,EAHJA,sBACAlD,EAEI,EAFJA,UAEI,EACoCC,mBAAS,IAD7C,mBACGkD,EADH,KACiBC,EADjB,OAE6BnD,oBAAS,GAFtC,mBAEGG,EAFH,KAEYC,EAFZ,KAGErC,EAASjB,KAHX,EAI0BkD,oBAAS,GAJnC,mBAIGK,EAJH,KAIYC,EAJZ,KAKEC,EAAiBF,GAAoC,IAAzB2C,EAI9BxC,EAAa,GAGfA,EADCyC,EAAwB,EACZlD,EAED,6BAAD,OAA8BtC,EAAK,cAAUA,GAAU,IA8DpE,IAAMgD,EAAc,WAClBH,GAAYD,IAEd,OACE,kBAAC,GAAD,KAEE,kBAAC,GAAD,CAAOrC,QAAQ,gBAEb,kBAACC,EAAA,EAAD,CACGC,UAAWH,EAAOsB,UAClB5B,MAAK,6BAAwBA,EAAK,cAAUA,GAAU,IACtDE,SAtET,SAAsB+C,GACpByC,EAAgBzC,EAAEC,OAAOjD,QAsElBmD,WAxBT,SAAwBH,GAKR,UAAVA,EAAEI,KAhDR,SAA4BJ,GAA5B,UAAAK,EAAAC,OAAA,mDACEN,EAAEO,iBAEGiC,EAHP,wDAOE9C,GAAc,GAPhB,SAWI+C,EAAgB,IAChB/C,GAAc,GAZlB,WAAAW,EAAA,MAayC+B,EAAkB,CACrD5B,UAAW,CACTC,SAAUwB,IACVtB,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClBhC,MAAOwF,IAETzB,cAAc,GAEhB7B,oBAtBN,cAaUwD,EAbV,OAyBUC,EAAkB/B,KAAKK,MAAMyB,EAAuBtI,KAAK8G,SAzBnE,YAAAb,EAAA,MA2B8CgC,EAAa,CACrD7B,UAAW,CACTC,SAAUmC,IACVjC,oBAAqBC,KAAKC,UAAU,CAClCgC,gBAAiBV,EACjBrB,iBAAkB6B,EAAgBG,aAEpC/B,cAAc,GAEhB7B,oBApCN,iEAuCI6D,QAAQC,IAAR,MAvCJ,yDAiDI7B,CAAanB,IAmBRhD,MAAOwF,EACPpF,SAAUqC,GAAUrC,EACpBK,QAAQ,WACRyE,WAAY,CACVd,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACpB,kBAAC,IAAD,CAAiB9D,UAAWH,EAAOmB,SAAUd,QAASqC,SAOnEF,EACC,kBAAC,GAAD,KACGC,EAAa,IACd,kBAAC,IAAD,CAAWtC,UAAWH,EAAOqB,UAAWhB,QAASqC,KAEjD,U,+PC5NV,IAAMkD,GAAqBjH,UAAO4B,KAChC,gBAAGsF,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,mEAGUD,EAAW,uBAAyB,kBAH9C,+FAMoBC,GAAc,SANlC,wBAOUD,EAAW,OAAS,UAP9B,iEAeInH,GAASC,UAAOC,OAAV,MASC,SAACC,GAAD,OAAWA,EAAMC,YAAc,aAkI7ByC,OACbC,YAAQC,IAAS,CAAEC,KAAM,mBACzBF,YAAQC,IAAS,CAAEC,KAAM,mBAFZH,EA9HK,SAAC,GAYd,IAXLhD,EAWI,EAXJA,SACAwH,EAUI,EAVJA,WACApE,EASI,EATJA,SACAkE,EAQI,EARJA,SAGAG,GAKI,EAPJtG,MAOI,EANJuG,YAMI,EALJD,gBACAE,EAII,EAJJA,eACArE,EAGI,EAHJA,eACAsE,EAEI,EAFJA,SAEI,KADJvJ,WAE6CqF,mBAAS1D,EAASoB,QAD3D,mBACG+E,EADH,KACkB0B,EADlB,OAEgCnE,oBAAS,GAFzC,mBAEGoE,EAFH,KAEeC,EAFf,OAG4BrE,oBAAS,GAHrC,mBAGGsE,EAHH,KAGaC,EAHb,OAIoCvE,oBAAS,GAJ7C,mBAIGwE,EAJH,KAIiBC,EAJjB,OAKgCzE,oBAAS,GALzC,mBAKG6D,EALH,KAKea,EALf,KAOEC,EACJrI,EAASd,UACTc,EAASd,SAASoJ,MAAK,SAACjJ,GAAD,OAAWA,EAAME,SAAWgJ,OACnCF,GAAeA,EAAa7I,UAE9C,IAAK8H,EACH,OACE,kBAACD,GAAD,CAAoBvF,QAAS,kBAAM8F,EAASJ,KACzCrB,GA+BP,GAAI2B,EACF,OACE,kBAACT,GAAD,KACE,kBAAC,EAAD,CACEnG,GAAIsG,EACJrG,MAAM,qBACNC,MAAO+E,EACP9E,SAjC6B,SAAC+C,GACpCyD,EAAoBzD,EAAEC,OAAOjD,QAiCvBE,OA9B+B,oBAAAmD,EAAAC,OAAA,uDACrCuD,GAAY,GADyB,WAAAxD,EAAA,MAG/BgD,EAAe,CACnB7C,UAAW,CACTC,SAAU2D,IACVzD,oBAAqBC,KAAKC,UAAU,CAClC7D,MAAO+E,EACPe,WAAYlH,EAASkB,MAGzBoC,oBAXmC,OAcrCyE,GAAc,GACdE,GAAY,GAfyB,sCA+B/B1G,SAbiB,WACvBwG,GAAc,IAaRvG,SAAUwG,KA6BlB,OAAIE,EAEA,kBAACb,GAAD,CAAoBC,SAAUA,EAAUC,WAAYA,GACjDpB,EACD,kBAAC,EAAD,CACEjE,SA5Ba,oBAAAuC,EAAAC,OAAA,uDACnB0D,GAAc,GADK,oBAAA3D,EAAA,MAIXkD,EAAe,CACnB/C,UAAW,CACTC,SAAU4D,IACV1D,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClB8D,WAAYM,KAGhBlE,oBAZe,sDAejB8E,GAAc,GAfG,wDA6Bb7G,SAVkB,WACxB4G,GAAgB,IAUV3G,SAAU+F,KAOhB,kBAACF,GAAD,CAAoBC,SAAUA,GAC3BnB,EAED,kBAAC,GAAD,CAAQlI,KAAK,SAAS6D,QAAS,kBAAMiG,GAAc,KAAnD,UAGA,kBAAC,GAAD,CAAQ9J,KAAK,SAAS6D,QAAS,kBAAMqG,GAAgB,KAArD,oBCpGSO,GA7DW,SAAC,GAOpB,IANLpF,EAMI,EANJA,eACAnC,EAKI,EALJA,MACAuG,EAII,EAJJA,YACAtE,EAGI,EAHJA,SACA/E,EAEI,EAFJA,WACAsK,EACI,EADJA,UACI,EACsCjF,mBAAS,MAD/C,mBACGkF,EADH,KACkBC,EADlB,QAEeC,sBACwBpF,mBAASrF,IAHhD,mBAGG0K,EAHH,aAIsCrF,mBAAS,IAJ/C,mBAIGsF,EAJH,KAIkBC,EAJlB,KAcEC,EAAe,SAAChI,GACpB2H,EAAiB3H,IAGnB,OACE,6BACE,kBAAC,GAAD,CACEkC,SAAUA,EACVE,eAAgBA,EAEhBoD,qBAAsBsC,EACtBzC,QAASoC,IAKVI,EAAgBzJ,KAAI,SAACU,GAEpB,GAAI2I,IAAc3I,EAASoD,SAEzB,OADsB,IAAlB4F,GAAqBC,EAAiBD,EAAgB,GAExD,kBAACG,GAAD,CACE3E,IAAK4E,eACLpJ,SAAUA,EACVwH,WAAYxH,EAASkB,GACrBoG,SAAUtH,EAASkB,KAAO0H,EAC1BtF,eAAgBA,EAChBnC,MAAOA,EACPuG,YAAaA,EACbE,SAAUsB,EACV9F,SAAUA,EACV/E,WAAYA,S,+PCrC1B,IAAMgJ,GAAqBjH,UAAO4B,KAChC,gBAAGsF,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,mEAGUD,EAAW,uBAAyB,kBAH9C,+FAMoBC,GAAc,SANlC,wBAOUD,EAAW,OAAS,UAP9B,iEAeInH,GAASC,UAAOC,OAAV,MASC,SAACC,GAAD,OAAWA,EAAMC,YAAc,a,IAsI7ByC,IACbC,YAAQC,IAAS,CAAEC,KAAM,mBACzBF,YAAQC,IAAS,CAAEC,KAAM,mBAFZH,EAlIK,SAAC,GAYd,IAXLhD,EAWI,EAXJA,SACAwH,EAUI,EAVJA,WACApE,EASI,EATJA,SACAkE,EAQI,EARJA,SAIAK,GAII,EAPJxG,MAOI,EANJuG,YAMI,EALJD,eAKI,EAJJE,gBACArE,EAGI,EAHJA,eACAsE,EAEI,EAFJA,SACAvJ,EACI,EADJA,WACI,EACyCqF,mBAAS1D,EAASoB,OAD3D,mBACG+E,EADH,KACkB0B,EADlB,OAEgCnE,oBAAS,GAFzC,mBAEGoE,EAFH,KAEeC,EAFf,OAG4BrE,oBAAS,GAHrC,mBAGGsE,EAHH,aAIoCtE,oBAAS,IAJ7C,mBAIGwE,EAJH,KAIiBC,EAJjB,OAKgCzE,oBAAS,GALzC,mBAKG6D,EALH,KAKea,EALf,KAOEC,EACJrI,EAASd,UACTc,EAASd,SAASoJ,MAAK,SAACjJ,GAAD,OAAWA,EAAME,SAAWgJ,OACnCF,GAAeA,EAAa7I,UAE9C,IAAK8H,EACH,OACE,kBAAC,GAAD,CAAoBxF,QAAS,kBAAM8F,EAASJ,KACzCrB,GAKP,IAAMkD,EAA+B,SAACjF,GACpCyD,EAAoBzD,EAAEC,OAAOjD,QAyB/B,GAAI0G,EACF,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,CACE5G,GAAIsG,EACJrG,MAAM,qBACNC,MAAO+E,EACP9E,SAAUgI,EACV/H,OAAQ+H,EACR9H,SAbiB,WACvBwG,GAAc,IAaRvG,SAAUwG,KA6BlB,OAAIE,EAEA,kBAAC,GAAD,CAAoBZ,SAAUA,EAAUC,WAAYA,GACjDpB,EACD,kBAAC,EAAD,CACEjE,SA5Ba,oBAAAuC,EAAAC,OAAA,uDACnB0D,GAAc,GADK,oBAAA3D,EAAA,MAIXkD,EAAe,CACnB/C,UAAW,CACTC,SAAU4D,IACV1D,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClB8D,WAAYM,KAGhBlE,oBAZe,sDAejB8E,GAAc,GAfG,wDA6Bb7G,SAVkB,WACxB4G,GAAgB,IAUV3G,SAAU+F,KAOhB,kBAAC,GAAD,CAAoBD,SAAUA,GAC3BnB,EACD,kBAAC,GAAD,CAAQlI,KAAK,SAAS6D,QAAS,kBAAMiG,GAAc,KAAnD,UAGA,kBAAC,GAAD,CAAQ9J,KAAK,SAAS6D,QAAS,kBAAMqG,GAAgB,KAArD,gBAIA,kBAAC,GAAD,CACEQ,UAAWnB,EACXlE,eAAgBA,EAChBjF,WAAYA,EACZ+E,SAAUA,Q,sCC7KH,YAAC5E,GACd,IAAI8K,EAAa9K,EAAKc,KAAI,SAACL,GAAD,uBACrBA,EADqB,CAExBmE,SAAUnE,EAASC,SAAS,GAAGM,UAAU,GACrCP,EAASC,SAAS,GAAGM,UAAU,GAAG0B,GAClC,UAGFwG,EAAc6B,KAAEC,QAAQF,EAAY,YAExCA,EAAaA,EAAWhK,KAAI,SAACL,GAAD,uBACvBA,EADuB,CAE1BwK,UAAW/B,EAAYzI,EAASiC,KAAO,QAGzC,IAAIwI,EAASC,OAAOC,KAAKlC,GACrBmC,EAAY,GAhBO,WAkBd3I,GACHwI,EAAOxI,IACToI,EAAWhK,KAAI,SAACL,GACVA,EAASmE,UAAYsG,EAAOxI,KAAQjC,EAASmE,UAC/CyG,EAAUC,KAAK7K,OAJvB,IAAK,IAAIiC,KAAMwI,EAAS,EAAfxI,GAUT,MAAO,CAACoI,EAAYO,I,+fCZtB,IAAMxC,GAAqBjH,UAAO4B,KAChC,gBAAGsF,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,8JAOsBA,GAAc,SAPpC,0BAQYD,EAAW,OAAS,UARhC,oKAiBeA,EAAY,OAAW,OAjBtC,kGAwBeA,EAAY,QAAY,OAxBvC,6BA+BInH,GAASC,UAAOC,OAAV,MASC,SAACC,GAAD,OAAWA,EAAMC,YAAc,aAItCwJ,GAAwB3J,UAAO4B,KACnC,gBAAGsF,EAAH,EAAGA,SAAH,EAAaC,WAAb,wOAaaD,EAAY,OAAW,OAbpC,oIAsBUA,EAAY,OAAW,OAtBjC,2CAwBYA,EAAY,OAAW,OAxBnC,6EA6BaA,EAAY,QAAY,OA7BrC,gBAiCI0C,GAAe5J,UAAO4B,IAAV,MAUZxB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,WAAY,CACVC,SAAU,QACVC,UAAW,eA4NToJ,GAAQ,SAARA,EAAS,GAgBR,IAfLR,EAeI,EAfJA,UACAvC,EAcI,EAdJA,WACAgD,EAaI,EAbJA,KACA9G,EAYI,EAZJA,SACAE,EAWI,EAXJA,eACA6G,EAUI,EAVJA,KACA1C,EASI,EATJA,eACAK,EAQI,EARJA,WACAH,EAOI,EAPJA,eACA7F,EAMI,EANJA,QACAsI,EAKI,EALJA,UACA9C,EAII,EAJJA,SACAnG,EAGI,EAHJA,MAEAkJ,GACI,EAFJC,eAEI,EADJD,aACI,EACwC3G,mBAAS,MADjD,mBACmB6G,GADnB,aAE8B7G,oBAAUwG,GAFxC,mBAEGM,EAFH,aAG4B9G,oBAAS,IAHrC,mBAGGsE,EAHH,KAGaC,EAHb,OAIoCvE,oBAAS,GAJ7C,mBAIGwE,EAJH,KAIiBC,EAJjB,OAK8CzE,mBAAS,MALvD,mBAKGyC,EALH,KAKkBsE,EALlB,OAMgC/G,mBAAS,IANzC,mBAMGrF,EANH,KAMeM,EANf,OAO0C+E,oBAAS,GAPnD,mBAOGgH,EAPH,KAOoBC,EAPpB,OAQgCjH,oBAAS,GARzC,mBAQG6D,EARH,KAQea,EARf,QASgC1E,mBAAS2G,GATzC,qBASGO,GATH,MASeC,GATf,MAWWrK,KAEfsK,qBAAU,WACRnM,EAAc8K,GACTW,GACHG,EAAkBrD,KAEnB,CAACY,EAAY4C,EAAiBN,IAoBjC,IAmBMf,GAA+B,SAACjF,GACpCqG,EAAyBrG,EAAEC,OAAOjD,QAWpC,OAAIsJ,EAEA,kBAAC,GAAD,KACE,kBAAC,EAAD,CACExJ,GAAIgG,EACJ/F,MAAM,qBACNC,MAAO+E,EACP9E,SAAUgI,GACV/H,OAzDR,oBAAAmD,EAAAC,OAAA,uDACEuD,GAAY,GADd,WAAAxD,EAAA,MAGQgD,EAAe,CACnB7C,UAAW,CACTC,SAAU2D,IACVzD,oBAAqBC,KAAKC,UAAU,CAClC7D,MAAO+E,EACPe,WAAYkD,KAGhB9G,oBAXJ,OAcEqH,GAAmB,GACnB1C,GAAY,GAfd,sCA0DQ1G,SAjBiB,WACvBoJ,GAAmB,IAiBbnJ,SAAUwG,KAMdE,EAEA,kBAAC,GAAD,CAAoBX,WAAYA,GAC7BpB,EACD,kBAAC,EAAD,CACEjE,SApDa,oBAAAuC,EAAAC,OAAA,uDACnB0D,GAAc,GADK,oBAAA3D,EAAA,MAIXkD,EAAe,CACnB/C,UAAW,CACTC,SAAU4D,IACV1D,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClB8D,WAAYkD,KAGhB9G,oBAZe,sDAejB8E,GAAc,GAfG,wDAqDb7G,SA1BkB,WACxB4G,GAAgB,IA0BV3G,SAAU+F,KAOhB,oCACGlJ,EAAWiB,KAAI,SAACL,GACf,OACE,kBAAC,IAAM8L,SAAP,CAAgBvG,IAAK4E,gBAClB9B,GAAY4C,EACX,kBAAC,GAAD,CAAoB1F,IAAK4E,gBACvB,yBACEtH,QAAS,WAGP,GAFAyI,EAAkBtL,EAASiC,IAC3B2J,GAAc5L,EAASmC,QAClB+I,EACH,OAAO,KAEPrI,KAGJT,SAAUgI,GACV7E,IAAK4E,gBAEL,kBAACY,GAAD,KACG,IACA/K,EAASmC,MACV,6BACE,kBAAC,GAAD,CACEnD,KAAK,SACL6D,QAAS,WACP6I,GAAmB,GACnBJ,EAAkBtL,EAASiC,IAC3BuJ,EAAyBxL,EAASmC,SALtC,UAUA,kBAAC,GAAD,CACEnD,KAAK,SACL6D,QAAS,WACPqG,GAAgB,GAChBoC,EAAkBtL,EAASiC,IAC3BuJ,EAAyBxL,EAASmC,SALtC,mBAcN,kBAAC6I,EAAD,iBACMhL,EADN,CAEEiL,KAAMM,EACNL,MAAM,EACNjD,WAAYjI,EAASiC,GACrBoC,eAAgBA,EAChBmE,eAAgB,kBAAMA,GACtBE,eAAgB,kBAAMA,GACtB7F,QAAUqI,EAAiB,KAAVrI,EACjBsI,UAAWA,EACX9C,SAAUA,EACVnG,MAAOA,MAGT,SAITmG,IAAa6C,EACZ,kBAAC,GAAD,CACE/G,SAAUA,EACVmD,QAAS6D,EACT9G,eAAgBA,EAChBnC,MAAOyJ,KAEP,OAKK5H,OACbC,YAAQC,IAAS,CAAEC,KAAM,mBACzBF,YAAQC,IAAS,CAAEC,KAAM,mBAFZH,EAvZU,SAAnBgI,EAAoB,GAWnB,IAVLhL,EAUI,EAVJA,SACAkH,EASI,EATJA,WACA9D,EAQI,EARJA,SACAE,EAOI,EAPJA,eACAmE,EAMI,EANJA,eACAE,EAKI,EALJA,eACA7F,EAII,EAJJA,QACAuI,EAGI,EAHJA,YACAC,EAEI,EAFJA,eACAnJ,EACI,EADJA,MACI,EACyCuC,mBAAS,IADlD,mBACGyC,EADH,KACkB0B,EADlB,OAEoBnE,oBAAS,GAF7B,mBAEGwG,EAFH,KAESe,EAFT,OAG8BvH,mBAAS,MAHvC,mBAGG0G,EAHH,KAGcc,EAHd,OAIgDxH,mBAAS,MAJzD,mBAIGyH,EAJH,KAIuBC,EAJvB,OAKsC1H,mBAAS,MAL/C,gCAMgCA,oBAAS,IANzC,mBAMGoE,EANH,KAMeC,EANf,OAQ4BrE,oBAAS,GARrC,mBAQGsE,EARH,KAQaC,EARb,OASoCvE,oBAAS,GAT7C,mBASGwE,EATH,KASiBC,EATjB,OAUgCzE,oBAAS,GAVzC,mBAUG6D,EAVH,KAUea,GAVf,QAW4B1E,mBAASvC,GAXrC,qBAWGkK,GAXH,MAWgBC,GAXhB,MAYAC,GAAazC,sBAEXrH,GAASjB,KAEfsK,qBAAU,WACHV,GACHc,EAAahE,KAEd,CAACY,IAqBJ,IAmBMuB,GAA+B,SAACjF,GACpCyD,EAAoBzD,EAAEC,OAAOjD,QAW/B,GAAI0G,EACF,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,CACE5G,GAAIkJ,EACJjJ,MAAM,qBACNC,MAAO+E,EACP9E,SAAUgI,GACV/H,OA1DR,oBAAAmD,EAAAC,OAAA,uDACEuD,GAAY,GADd,WAAAxD,EAAA,MAGQgD,EAAe,CACnB7C,UAAW,CACTC,SAAU2D,IACVzD,oBAAqBC,KAAKC,UAAU,CAClC7D,MAAO+E,EACPe,WAAYkD,KAGhB9G,oBAXJ,OAcEyE,GAAc,GAEdE,GAAY,GAhBd,sCA2DQ1G,SAjBiB,WACvBwG,GAAc,IAiBRvG,SAAUwG,KAMlB,GAAIE,EACF,OACE,kBAAC,GAAD,CAAoBX,WAAYA,GAC7BpB,EACD,kBAAC,EAAD,CACEjE,SApDa,oBAAAuC,EAAAC,OAAA,uDACnB0D,IAAc,GADK,oBAAA3D,EAAA,MAIXkD,EAAe,CACnB/C,UAAW,CACTC,SAAU4D,IACV1D,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClB8D,WAAYkD,KAGhB9G,oBAZe,sDAejB8E,IAAc,GAfG,wDAqDb7G,SA1BkB,WACxB4G,GAAgB,IA0BV3G,SAAU+F,KAmBlB,OAAKvH,EAGH,oCACE,yBAAKwL,IAAKD,GAAY/G,IAAK4E,gBACxBpJ,EAASV,KAAI,SAACL,GAC0B,IAAD,EAAtC,GAAIiI,IAAejI,EAASmE,SAC1B,OACE,kBAAC2G,GAAD,CAAuBvF,IAAK4E,gBAC1B,yBACEtH,QAAS,YArBT,SAACZ,EAAI1C,GACnB,IAAKA,IAASA,EAAKW,OAAQ,OAAO,KAC9B+B,IAAO1C,EAAK,GAAG4E,UACjB6H,GAASf,GAmBKuB,CAAQxM,EAASiC,GAAIjC,EAASwK,WAC9B2B,EAAsBnM,EAASiC,IAC/BgK,EAAajM,EAASiC,KAExBG,SAAU,kBAAMgI,KAEhB,kBAACqC,GAAA,EAAD,CAAY9J,UAAWH,GAAOd,YAA9B,iBAGA,kBAACqJ,GAAD,KACG,IACA/K,EAASmC,MACV,6BACE,kBAAC,GAAD,CACEnD,KAAK,SACL6D,QAAS,WACPiG,GAAc,GACdmD,EAAajM,EAASiC,IACtB2G,EAAoB5I,EAASmC,SALjC,UAUA,kBAAC,GAAD,CACEnD,KAAK,SACL6D,QAAS,WACPqG,GAAgB,GAChB+C,EAAajM,EAASiC,IACtB2G,EAAoB5I,EAASmC,SALjC,mBAaN,kBAAC,GAAD,iBACMnC,GADN,GAEEiL,KAAMA,EACN9G,SAAUA,EACV8D,WAAYjI,EAASiC,GACrBoG,SAAUrI,EAASiC,KAAOkJ,GAL5B,2BAMclD,GANd,+BAOkB5D,GAPlB,+BAQkBmE,GARlB,+BASkBE,GATlB,wBAUW7F,GAVX,0BAWasI,GAXb,+BAYkBE,GAZlB,4BAaeD,GAbf,KAeCpL,EAASwK,UAAUtK,OAClB,kBAAC6L,EAAD,CACExM,KAAMS,EAASwK,UACfjF,IAAK4E,eACL9F,eAAgBA,EAChBmE,eAAgBA,EAChBE,eAAgBA,EAChB7F,QAAS,SAACZ,GAAD,OAAQgK,EAAahK,IAC9BoG,SAAU8C,IAAce,EACxBG,SAAW,kBAAMA,GAASrM,EAASmC,UAEnC,UAMd,kBAAC,GAAD,CACEoD,IAAK4E,eACLhG,SAAUA,EACVmD,QAAS6D,EACT9G,eAAgBA,EAChBnC,MAAOkK,MApFS,OA6RJpB,I,qfCrepB,IAAM0B,GAAuBvL,UAAO4B,KAClC,gBAAGsF,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,2DAEWD,EAAW,IAAM,SAF5B,mEAOGC,EAAc,SAAcD,GAAY,UAAY,UAPvD,wBASUA,EAAW,OAAS,UAT9B,sMAmBaA,EAAY,OAAW,OAnBpC,+HA2BUA,EAAY,OAAW,OA3BjC,2CA6BYA,EAAY,OAAW,OA7BnC,6EAkCaA,EAAY,OAAW,OAlCpC,oBAyCInH,GAASC,UAAOC,OAAV,MASC,SAACC,GAAD,OAAUA,EAAMC,YAAc,aAIrCyJ,GAAe5J,UAAO4B,IAAV,MAUZxB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,WAAY,CACRC,SAAU,QACVC,UAAW,eA0KFmC,WACbC,YAAQC,IAAS,CAAEC,KAAM,mBACzBF,YAAQC,IAAS,CAAEC,KAAM,mBAFZH,EAnKf,YAYI,IAXFhD,EAWC,EAXDA,SACAoD,EAUC,EAVDA,SACAkE,EASC,EATDA,SACAG,EAQC,EARDA,eACAE,EAOC,EAPDA,eACArE,EAMC,EANDA,eACAsE,EAKC,EALDA,SAGAvJ,GAEC,EAHDqJ,YAGC,EAFDrJ,YAEC,EAC4CqF,mBAAS1D,EAASoB,OAD9D,mBACM+E,EADN,KACqBC,EADrB,OAEsC1C,oBAAS,GAF/C,mBAEMoE,EAFN,KAEkB8D,EAFlB,OAGkClI,oBAAS,GAH3C,mBAGMsE,EAHN,KAGgB6D,EAHhB,OAI0CnI,oBAAS,GAJnD,mBAIMwE,EAJN,KAIoB4D,EAJpB,OAKsCpI,oBAAS,GAL/C,mBAKM6D,EALN,KAKkBwE,EALlB,OAQqCrI,mBAAS,IAR9C,mBAQMsI,EARN,KAQmBC,EARnB,OASuCvI,mBAAS,MAThD,mBASMwI,EATN,KASuBC,EATvB,KAWDrB,qBAAU,WAAO,IAAD,EACOsB,GAAa/N,GAA3BiL,EADO,oBAEd2C,EAAe3C,KACd,CAACtJ,IACJ,IACMyB,EAASjB,KAMf,OAAK8G,EAkCDQ,EAEA,kBAAC6D,GAAD,KACE,kBAAC,EAAD,CACEzK,GAAIlB,EAASkB,GACbC,MAAM,kBACNC,MAAO+E,EACP9E,SAjCR,SAAmC+C,GACjCgC,EAAoBhC,EAAEC,OAAOjD,QAiCvBE,OA9BR,oBAAAmD,EAAAC,OAAA,uDACEmH,GAAe,GADjB,WAAApH,EAAA,MAGQgD,EAAe,CACnB7C,UAAW,CACTC,SAAU2D,IACVzD,oBAAqBC,KAAKC,UAAU,CAClC7D,MAAO+E,EACPe,WAAYlH,EAASkB,MAGzBoC,oBAXJ,OAcEsI,GAAiB,GACjBC,GAAe,GAfjB,sCA+BQtK,SAbR,WACEqK,GAAiB,IAaXpK,SAAUwG,KA6BdE,EAEA,kBAACyD,GAAD,CAAsBrE,SAAUA,EAAUC,WAAYA,GACnDpB,EACD,kBAAC,EAAD,CACEjE,SA5BR,oBAAAuC,EAAAC,OAAA,uDACEqH,GAAiB,GADnB,oBAAAtH,EAAA,MAIUkD,EAAe,CACnB/C,UAAW,CACTC,SAAU4D,IACV1D,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClB8D,WAAYlH,EAASkB,MAGzBoC,oBAZN,sDAeIyI,GAAiB,GAfrB,wDA6BQxK,SAVR,WACEuK,GAAmB,IAUbtK,SAAU+F,KAOhB,kBAACoE,GAAD,CAAsBrE,SAAUA,GAE7B,kBAACoE,GAAA,EAAD,CAAY9J,UAAWH,EAAOd,YAA9B,aACD,kBAAC,GAAD,KAAewF,EACX,6BACA,kBAAC,GAAD,CAAQlI,KAAK,SAAS6D,QAAS,kBAAK8J,GAAiB,KAArD,UAGA,kBAAC,GAAD,CAAQ3N,KAAK,SAAS6D,QAAS,kBAAKgK,GAAmB,KAAvD,kBASJ,kBAAC,GAAD,CACE9L,SAAUgM,EACV9E,WAAYlH,EAASkB,GACrBkC,SAAUA,EACVE,eAAgBA,EAChBsE,SApHe,SAAC1G,GAAD,OAAQiL,EAAajL,IAqHpCgL,gBAAiBA,EACjB/K,MAAOgF,KA7GT,kBAACwF,GAAD,CAAsB7J,QAAS,kBAAK8F,EAAS5H,EAASkB,MACnDiF,M,0MC5HT,IAAM4D,GAAwB3J,UAAO4B,IAAV,MASrBqK,IANSjM,UAAOC,OAAV,M,2MAUVtC,MAAQ,CACNoN,mBAAoB,KAEpB9M,WAAY,GACZ2N,YAAa,GACbrF,sBAAuB,G,EAIzB4E,WAAazC,sB,EA4BbwD,YAAc,SAAClI,GACb,IAAMmI,EAAO,EAAKhB,WAAWiB,QAEzBD,GAAQA,IAASnI,EAAEC,SAAWkI,EAAKE,SAASrI,EAAEC,SAChD,EAAKqI,SAAS,CAAEvB,mBAAoB,Q,EAIxCjC,aAAe,SAAChI,GAAD,OAAQ,EAAKwL,SAAS,CAAEvB,mBAAoBjK,K,EAG1DyL,eAAiB,SAAAvL,GAChB,EAAKsL,SAAS,CAAC/F,sBAAuBvF,EAAMjC,U,mFArC5CyN,SAASC,iBAAiB,YAAaC,KAAKR,aAD1B,MAGkBQ,KAAK/O,MAAjCM,EAHU,EAGVA,WAAY2N,EAHF,EAGEA,YACZe,EAAcD,KAAKxM,MAAnByM,UAGR,IAAK1O,EAAWc,SAAW6M,EAAY7M,OAAQ,CAAC,IAAD,EACfiN,GAAaW,GADE,mBACxCzD,EADwC,KAC5BO,EAD4B,KAG7CiD,KAAKJ,SAAS,CACZrO,WAAYwL,EACZmC,YAAa1C,EACb3C,sBAAuB,O,6CAQ3BiG,SAASI,oBAAoB,YAAaF,KAAKR,e,+BAqBvC,IAAD,SACmDQ,KAAKxM,MAAvD2M,EADD,EACCA,SAAUF,EADX,EACWA,UAAWzJ,EADtB,EACsBA,eAAgB4J,EADtC,EACsCA,SACrC/B,EAAuB2B,KAAK/O,MAA5BoN,mBAGDhK,EAAQ2L,KAAKxM,MAAba,MACH8E,EAAoB8G,EAAU5N,OAN3B,EAQoD2N,KAAK/O,MAAxDM,EARD,EAQCA,WAAY2N,EARb,EAQaA,YAAarF,EAR1B,EAQ0BA,sBAR1B,EASQyF,GAAaJ,GATrB,oBAaP,OACE,oCACA,kBAAC,GAAD,CAAuBR,IAAKsB,KAAKvB,WAAYzJ,QAASgL,KAAKR,aAGxDN,EAAY1M,KAAI,SAACU,GAChB,IAAIA,EAASoD,SAEb,OACE,kBAAC,GAAD,CACEoB,IAAK4E,eACLpJ,SAAUA,EACVsH,SAAUtH,EAASkB,KAAOiK,EAC1B+B,SAAUA,EACV9J,SAAU6J,EACV3J,eAAgBA,EAChBsE,SAAU,EAAKsB,aAEfxB,YAAa1H,EAASoD,SACtB/E,WAAYA,EACZgD,SAAU,EAAKsL,qBASvB,kBAAC,GAAD,CACIvJ,SAAU6J,EACV3J,eAAgBA,EAEhBnC,MAAOA,EACP8E,kBAAmBA,EACnB5E,SAAUyL,KAAKH,iBAIhBxF,QAAQC,IAAR,wBAAqCT,GACpCA,GAAyB,EACzB,kBAAC,GAAD,CAAyBnF,UAAU,EAAMkF,qBAAsB,EAAGjD,UAAS,kCAAqCkD,sBAAuBA,EAAuBxF,MAAOA,IACnK,U,GAhHYgM,cAAlBd,GAEGe,YAAcC,KAsHRhB,U,ygBC3Hf,IAAMiB,GAAqBlN,UAAO4B,KAChC,gBAAGsF,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,2DAEWD,EAAW,IAAM,SAF5B,mEAOGC,EAAc,SAAcD,GAAY,UAAY,UAPvD,wBASUA,EAAW,OAAS,UAT9B,sMAmBaA,EAAY,OAAW,OAnBpC,oIA4BUA,EAAY,OAAW,OA5BjC,2CA8BYA,EAAY,OAAW,OA9BnC,6EAmCaA,EAAY,OAAW,OAnCpC,qBAyCInH,GAASC,UAAOC,OAAV,MASC,SAACC,GAAD,OAAWA,EAAMC,YAAc,aAItCyJ,GAAe5J,UAAO4B,IAAV,MAWZxB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,WAAY,CACVC,SAAU,QACVC,UAAW,eAuJAmC,WACbC,YAAQC,IAAS,CAAEC,KAAM,mBACzBF,YAAQC,IAAS,CAAEC,KAAM,mBAFZH,EAlJf,YAUI,IATFjD,EASC,EATDA,OACAqD,EAQC,EARDA,SACAkE,EAOC,EAPDA,SACAG,EAMC,EANDA,eACAE,EAKC,EALDA,eACArE,EAIC,EAJDA,eACAsE,EAGC,EAHDA,SAGC,EACwClE,mBAAS3D,EAAOqB,OADxD,mBACMyE,EADN,KACmBC,EADnB,OAEsCpC,oBAAS,GAF/C,mBAEMoE,EAFN,KAEkB8D,EAFlB,OAGkClI,oBAAS,GAH3C,mBAGMsE,EAHN,KAGgB6D,EAHhB,OAI0CnI,oBAAS,GAJnD,mBAIMwE,EAJN,KAIoB4D,EAJpB,OAKsCpI,oBAAS,GAL/C,mBAKM6D,EALN,KAKkBwE,EALlB,KAQKtK,EAASjB,KAGT6H,EACJtI,EAAOb,UACPa,EAAOb,SAASoJ,MAAK,SAACjJ,GAAD,OAAWA,EAAME,SAAWgJ,OAC7CwE,EAAY1E,EAAeA,EAAa7I,UAAY,GAK1D,OAAK8H,EAkCDQ,EAEA,kBAACwF,GAAD,KACE,kBAAC,EAAD,CACEpM,GAAInB,EAAOmB,GACXC,MAAM,gBACNC,MAAOyE,EACPxE,SAjCR,SAAiC+C,GAC/B0B,EAAkB1B,EAAEC,OAAOjD,QAiCrBE,OA9BR,oBAAAmD,EAAAC,OAAA,uDACEmH,GAAe,GADjB,WAAApH,EAAA,MAGQgD,EAAe,CACnB7C,UAAW,CACTC,SAAU0I,IACVxI,oBAAqBC,KAAKC,UAAU,CAClC7D,MAAOyE,EACPqB,WAAYnH,EAAOmB,MAGvBoC,oBAXJ,OAcEsI,GAAiB,GACjBC,GAAe,GAfjB,sCA+BQtK,SAbR,WACEqK,GAAiB,IAaXpK,SAAUwG,KA6BdE,EAEA,kBAACoF,GAAD,CAAoBhG,SAAUA,EAAUC,WAAYA,GACjD1B,EACD,kBAAC,EAAD,CACE3D,SA5BR,oBAAAuC,EAAAC,OAAA,uDACEqH,GAAiB,GADnB,oBAAAtH,EAAA,MAIUkD,EAAe,CACnB/C,UAAW,CACTC,SAAU2I,IACVzI,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClB8D,WAAYnH,EAAOmB,MAGvBoC,oBAZN,sDAeIyI,GAAiB,GAfrB,wDA6BQxK,SAVR,WACEuK,GAAmB,IAUbtK,SAAU+F,KAOhB,kBAAC+F,GAAD,CAAoBhG,SAAUA,GAE5B,kBAACoE,GAAA,EAAD,CAAY9J,UAAWH,EAAOd,YAA9B,UACA,kBAAC,GAAD,KACGkF,EACD,6BACE,kBAAC,GAAD,CAAQ5H,KAAK,SAAS6D,QAAS,kBAAM8J,GAAiB,KAAtD,UAGA,kBAAC,GAAD,CAAQ3N,KAAK,SAAS6D,QAAS,kBAAMgK,GAAmB,KAAxD,kBAQJ,kBAAC,GAAD,CACEiB,UAAWA,EACXE,SAAUlN,EAAOmB,GACjBC,MAAO0E,EACPvC,eAAgBA,KA1GlB,kBAACgK,GAAD,CAAoBxL,QAAS,kBAAM8F,EAAS7H,EAAOmB,MAChD2E,M,+MCxHT,IAAM4H,GAAsBrN,UAAO4B,IAAV,MA6HV0L,IAxHAtN,UAAOC,OAAV,M,2MAOVtC,MAAQ,CACN4P,iBAAkB,KAElBzH,mBAAoB,G,EAItBqF,WAAazC,sB,EAUbwD,YAAc,SAAClI,GACb,IAAMmI,EAAO,EAAKhB,WAAWiB,QAEzBD,GAAQA,IAASnI,EAAEC,SAAWkI,EAAKE,SAASrI,EAAEC,SAChD,EAAKqI,SAAS,CAAEiB,iBAAkB,Q,EAItCzE,aAAe,SAAChI,GACdiG,QAAQC,IAAR,aAA0BlG,GAE1B,EAAKwL,SAAS,CAAEiB,iBAAkBzM,K,EAIpCyL,eAAiB,SAACvL,GAChB,EAAKsL,SAAS,CAAExG,mBAAoB9E,EAAMjC,U,mFAvB1CyN,SAASC,iBAAiB,YAAaC,KAAKR,e,6CAI5CM,SAASI,oBAAoB,YAAaF,KAAKR,e,+BAuBvC,IAAD,SACoDQ,KAAKxM,MAAxDsN,EADD,EACCA,WAAYC,EADb,EACaA,QAASvK,EADtB,EACsBA,eAAgB4J,EADtC,EACsCA,SACrCS,EAAqBb,KAAK/O,MAA1B4P,iBAIDxM,EAAS2L,KAAKxM,MAAda,MACDyE,EAAkBiI,EAAQ1O,OACxB+G,EAAuB4G,KAAK/O,MAA5BmI,mBAKR,OACE,oCACE,kBAACuH,GAAD,CAAqBjC,IAAKsB,KAAKvB,WAAYzJ,QAASgL,KAAKR,aACtDuB,EAAQvO,KAAI,SAACS,GAAD,OACX,kBAAC,GAAD,CACEyE,IAAK4E,eACLrJ,OAAQA,EACRuH,SAAUvH,EAAOmB,KAAOyM,EACxBT,SAAUA,EACV9J,SAAUwK,EACVtK,eAAgBA,EAChBsE,SAAU,EAAKsB,mBAMrB,kBAAC,GAAD,CACE9F,SAAUwK,EACVtK,eAAgBA,EAEhBsC,gBAAiBA,EACjBvE,SAAUyL,KAAKH,eACfxL,MAAOA,IAIR+E,GAAsB,EACrB,kBAAC,GAAD,CAAsB1E,UAAU,EAAMyE,kBAAmB,EAAGxC,UAAS,8BAAiCyC,mBAAoBA,EAAoB/E,MAAOA,IACnJ,U,GAhFUgM,c,ygBCGtB,IAAMW,GAAuB1N,UAAO4B,KAClC,gBAAGsF,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,8DAGWD,EAAW,OAAS,QAH/B,2FAQGC,EAAc,SAAcD,GAAY,UAAY,UARvD,wBAUUA,EAAW,OAAS,UAV9B,+DAmBInH,GAASC,UAAOC,OAAV,MASC,SAACC,GAAD,OAAWA,EAAMC,YAAc,aAItCyJ,GAAe5J,UAAO4B,IAAV,MAWZxB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,WAAY,CACVC,SAAU,QACVC,UAAW,eAIfiN,GAAqBC,aAAe,CAClC,UAAW,qBAGb5N,GAAO4N,aAAe,CACpB,UAAW,oBAGb/D,GAAa+D,aAAe,CAC1B,UAAW,0BA8IE/K,WACbC,YAAQC,IAAS,CAAEC,KAAM,mBACzBF,YAAQC,IAAS,CAAEC,KAAM,mBAFZH,EAzIf,YAQI,IAPFlD,EAOC,EAPDA,SACAsD,EAMC,EANDA,SACAkE,EAKC,EALDA,SACAG,EAIC,EAJDA,eACAE,EAGC,EAHDA,eACArE,EAEC,EAFDA,eACAsE,EACC,EADDA,SACC,EAC4ClE,mBAAS5D,EAASsB,OAD9D,mBACMuC,EADN,KACqBC,EADrB,OAEsCF,oBAAS,GAF/C,mBAEMoE,EAFN,KAEkB8D,EAFlB,OAGkClI,oBAAS,GAH3C,mBAGMsE,EAHN,KAGgB6D,EAHhB,OAI0CnI,oBAAS,GAJnD,mBAIMwE,EAJN,KAIoB4D,EAJpB,OAKsCpI,oBAAS,GAL/C,mBAKM6D,EALN,KAKkBwE,EALlB,KAOKiC,EACJlO,EAASZ,UACTY,EAASZ,SAASoJ,MAAK,SAACjJ,GAAD,OAAWA,EAAME,SAAW0O,OAC/CJ,EAAUG,EAAaA,EAAWxO,UAAY,GAG9CiC,EAASjB,KAGf,OAAK8G,EAkCDQ,EAEA,kBAACgG,GAAD,KACE,kBAAC,EAAD,CACE5M,GAAIpB,EAASoB,GACbC,MAAM,kBACNC,MAAOuC,EACPtC,SAjCR,SAAmC+C,GACjCR,EAAoBQ,EAAEC,OAAOjD,QAiCvBE,OA9BR,oBAAAmD,EAAAC,OAAA,uDACEmH,GAAe,GADjB,WAAApH,EAAA,MAGQgD,EAAe,CACnB7C,UAAW,CACTC,SAAUqJ,IACVnJ,oBAAqBC,KAAKC,UAAU,CAClC7D,MAAOuC,EACPuD,WAAYpH,EAASoB,MAGzBoC,oBAXJ,OAcEsI,GAAiB,GACjBC,GAAe,GAfjB,sCA+BQtK,SAbR,WACEqK,GAAiB,IAaXpK,SAAUwG,KA6BdE,EAEA,kBAAC4F,GAAD,CAAsBxG,SAAUA,EAAUC,WAAYA,GACnD5D,EACD,kBAAC,EAAD,CACEzB,SA5BR,oBAAAuC,EAAAC,OAAA,uDACEqH,GAAiB,GADnB,oBAAAtH,EAAA,MAIUkD,EAAe,CACnB/C,UAAW,CACTC,SAAUsJ,IACVpJ,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClB8D,WAAYpH,EAASoB,MAGzBoC,oBAZN,sDAeIyI,GAAiB,GAfrB,wDA6BQxK,SAVR,WACEuK,GAAmB,IAUbtK,SAAU+F,KAOhB,kBAACuG,GAAD,CAAsBxG,SAAUA,GAE9B,kBAACoE,GAAA,EAAD,CAAY9J,UAAWH,EAAOd,YAA9B,aACA,kBAAC,GAAD,KACGgD,EACD,6BACA,kBAAC,GAAD,CAAQ1F,KAAK,SAAS6D,QAAS,kBAAM8J,GAAiB,KAAtD,UAGA,kBAAC,GAAD,CAAQ3N,KAAK,SAAS6D,QAAS,kBAAMgK,GAAmB,KAAxD,kBAOF,kBAAC,GAAD,CACE+B,QAASA,EACTD,WAAY9N,EAASoB,GACrBC,MAAOwC,EACPL,eAAgBA,KAzGlB,kBAACwK,GAAD,CAAsBhM,QAAS,kBAAM8F,EAAS9H,EAASoB,MACpDyC,M,mNC1GT,IAAMyK,GAAwBhO,UAAO4B,IAAV,MAMZ5B,UAAOC,OAAV,MAKZ+N,GAAsBL,aAAe,CACnC,UAAW,sB,IAiGEM,G,2MA5FbtQ,MAAQ,CACNuQ,mBAAoB,KACpB9K,sBAAuB,G,EAGzB+H,WAAazC,sB,EAUbwD,YAAc,SAAAlI,GACZ,IAAMmI,EAAO,EAAKhB,WAAWiB,QAG3BD,GACAA,IAASnI,EAAEC,SACVkI,EAAKE,SAASrI,EAAEC,SAEjB,EAAKqI,SAAS,CAAE4B,mBAAoB,Q,EAIxCpF,aAAe,SAAAhI,GAAE,OAAI,EAAKwL,SAAS,CAAE4B,mBAAoBpN,K,EAGzDyL,eAAiB,SAAAvL,GACf,EAAKsL,SAAS,CAAClJ,sBAAuBpC,EAAMjC,U,mFAvB5CyN,SAASC,iBAAiB,YAAaC,KAAKR,e,6CAI5CM,SAASI,oBAAoB,YAAaF,KAAKR,e,+BAsBtC,IAAD,SACgDQ,KAAKxM,MAArDiO,EADA,EACAA,MAAOC,EADP,EACOA,UAAWlL,EADlB,EACkBA,eAAgB4J,EADlC,EACkCA,SAClCoB,EAAuBxB,KAAK/O,MAA5BuQ,mBAIDnN,EAAQ2L,KAAKxM,MAAba,MACDoC,EAAoBiL,EAAUrP,OAC7BqE,EAAyBsJ,KAAK/O,MAA9ByF,sBAMP,OACE,oCACA,kBAAC4K,GAAD,CAAuB5C,IAAKsB,KAAKvB,WAAYzJ,QAASgL,KAAKR,aASvDkC,EAAUlP,KAAI,SAAAQ,GAAQ,OACtB,kBAAC,GAAD,CACE0E,IAAK4E,eACLtJ,SAAWA,EACXwH,SAAWxH,EAASoB,KAAOoN,EAC3BpB,SAAUA,EACV9J,SAAWmL,EACXjL,eAAgBA,EAChBsE,SAAU,EAAKsB,mBAQzB,kBAAC,EAAD,CACQ9F,SAAWmL,EACXjL,eAAgBA,EAEhBC,kBAAmBA,EACnBlC,SAAUyL,KAAKH,eACfxL,MAAOA,IAGbqC,GAAyB,EAAI,kBAAC,GAAD,CAAoBhC,UAAU,EAAMoE,gBAAiB,EACnFnC,UAAS,gCAAmCD,sBAAuBA,EAAuBrC,MAAOA,IAC5F,U,GAvFgBgM,a,gRCVxB,IAAMhL,GAAO/B,UAAO4B,IAAV,MASJ7B,GAASC,UAAOC,OAAV,MA4EG2C,WAAQC,YAAQC,IAAS,CAAEC,KAAM,sBAAjCH,EAxEf,YAMI,IALFI,EAKC,EALDA,SACAqL,EAIC,EAJDA,kBACAnL,EAGC,EAHDA,eAGC,EACkDI,mBAAS,IAD3D,mBACMgL,EADN,KACwBC,EADxB,OAEgCjL,oBAAS,GAFzC,mBAEMG,EAFN,KAEeC,EAFf,KAUD,SAAeyB,EAAanB,GAA5B,SAAAK,EAAAC,OAAA,mDACEN,EAAEO,iBAEG+J,EAHP,wDAOE5K,GAAc,GAPhB,WAAAW,EAAA,MAS0CgK,EAAkB,CACxD7J,UAAW,CACTC,SAAU+J,IACV7J,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClBhC,MAAOsN,IAETvJ,cAAc,GAEhB7B,oBAlBJ,cAqBEqL,EAAuB,IACvB7K,GAAc,GAtBhB,qCAmCA,OACE,kBAAC,GAAD,KACE,2BAAOpC,QAAQ,qBAAf,eAEE,2BACER,GAAG,oBACHjD,KAAK,OACLoD,SA9CR,SAAsB+C,GACpBuK,EAAuBvK,EAAEC,OAAOjD,QA8C1BmD,WAlBR,SAAwBH,GACH,KAAfA,EAAEyK,UACJtJ,EAAanB,IAiBThD,MAAOsN,EACPlN,SAAUqC,KAGd,kBAAC,GAAD,CAAQ5F,KAAK,SAASuD,SAAUqC,EAAS/B,QAASyD,GAC/C1B,EAAU,0BAA4B,0B,+PCzE/C,IAAMiL,GAA0B1O,UAAO4B,KACrC,gBAAGsF,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,mEAGUD,EAAW,uBAAyB,kBAH9C,+FAMoBC,GAAc,SANlC,wBAOUD,EAAW,OAAS,UAP9B,iEAgBInH,GAASC,UAAOC,OAAV,MASC,SAACC,GAAD,OAAWA,EAAMC,YAAc,aAkI7ByC,WACbC,YAAQC,IAAS,CAAEC,KAAM,mBACzBF,YAAQC,IAAS,CAAEC,KAAM,mBAFZH,EA9Hf,YAUI,IATF9C,EASC,EATDA,YACAkD,EAQC,EARDA,SACAkE,EAOC,EAPDA,SACAG,EAMC,EANDA,eACAE,EAKC,EALDA,eACArE,EAIC,EAJDA,eACAsE,EAGC,EAHDA,SAGC,EACkDlE,mBACjDxD,EAAYkB,OAFb,mBACMsN,EADN,KACwBC,EADxB,OAIsCjL,oBAAS,GAJ/C,mBAIMoE,EAJN,KAIkB8D,EAJlB,OAKkClI,oBAAS,GAL3C,mBAKMsE,EALN,KAKgB6D,EALhB,OAM0CnI,oBAAS,GANnD,mBAMMwE,EANN,KAMoB4D,EANpB,OAOsCpI,oBAAS,GAP/C,mBAOM6D,EAPN,KAOkBwE,EAPlB,KAcD,OAAKzE,EAkCDQ,EAEA,kBAACgH,GAAD,KACE,kBAAC,EAAD,CACE5N,GAAIhB,EAAYgB,GAChBC,MAAM,qBACNC,MAAOsN,EACPrN,SAjCR,SAAsC+C,GACpCuK,EAAuBvK,EAAEC,OAAOjD,QAiC1BE,OA9BR,oBAAAmD,EAAAC,OAAA,uDACEmH,GAAe,GADjB,WAAApH,EAAA,MAGQgD,EAAe,CACnB7C,UAAW,CACTC,SAAUkK,IACVhK,oBAAqBC,KAAKC,UAAU,CAClC7D,MAAOsN,EACPxH,WAAYhH,EAAYgB,MAG5BoC,oBAXJ,OAcEsI,GAAiB,GACjBC,GAAe,GAfjB,sCA+BQtK,SAbR,WACEqK,GAAiB,IAaXpK,SAAUwG,KA6BdE,EAEA,kBAAC4G,GAAD,CAAyBxH,SAAUA,EAAUC,WAAYA,GACtDmH,EACD,kBAAC,EAAD,CACExM,SA5BR,oBAAAuC,EAAAC,OAAA,uDACEqH,GAAiB,GADnB,oBAAAtH,EAAA,MAIUkD,EAAe,CACnB/C,UAAW,CACTC,SAAUmK,IACVjK,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClB8D,WAAYhH,EAAYgB,MAG5BoC,oBAZN,sDAeIyI,GAAiB,GAfrB,wDA6BQxK,SAVR,WACEuK,GAAmB,IAUbtK,SAAU+F,KAOhB,kBAACuH,GAAD,CAAyBxH,SAAUA,GAChCoH,EACD,kBAAC,GAAD,CAAQzQ,KAAK,SAAS6D,QAAS,kBAAK8J,GAAiB,KAArD,UAGA,kBAAC,GAAD,CAAQ3N,KAAK,SAAS6D,QAAS,kBAAKgK,GAAmB,KAAvD,iBA1FA,kBAACgD,GAAD,CAAyBhN,QAAS,kBAAK8F,EAAS1H,EAAYgB,MACzDwN,M,sLCjET,IAAMO,GAA2B7O,UAAO4B,IAAV,M,IAEf5B,UAAOC,OAAV,MAMe8M,Y,2DCeZ+B,OArCf,YAA8D,IAI7BC,EAJJC,EAAgC,EAAhCA,MAAOlP,EAAyB,EAAzBA,YAAahB,EAAY,EAAZA,SACzCuC,EAASjB,KAD4C,EAE3B6O,IAAM3L,UAAS,GAFY,mBAEpD4L,EAFoD,KAE1CC,EAF0C,KAQ3D,OACE,yBAAK3N,UAAWH,EAAO+N,MACrB,kBAACC,GAAA,EAAD,CACEH,SAAuB,WAAbA,EACVjO,UARyB8N,EAQO,SARG,SAACO,EAAOC,GAC/CJ,IAAYI,GAAaR,KAQrBvN,UAAWH,EAAOmO,WAElB,kBAACC,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAc,mBACd7O,GAAG,kBACH8O,QAAS,CACPC,QAASxO,EAAOyO,mBAGlB,kBAACC,GAAA,EAAD,CAAYvO,UAAWH,EAAO2O,SAAUhB,GACxC,kBAACe,GAAA,EAAD,CAAYvO,UAAWH,EAAO4O,kBAA9B,gBAIF,kBAACC,GAAA,EAAD,KACE,kBAACH,GAAA,EAAD,KAAajQ,KAGhBhB,IAODsB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8O,KAAM,CACJzO,MAAO,OACPwP,OAAQ,YAGVH,QAAS,CACPxP,SAAUF,EAAM8P,WAAWC,QAAQ,IACnCC,WAAY,OACZC,UAAW,SACXC,WAAY,EACZ/P,UAAW,WAEbwP,iBAAkB,CAChBzP,SAAUF,EAAM8P,WAAWC,QAAQ,IACnC5N,MAAO,WAET+M,UAAW,CACT5O,gBAAiB,UACjBuP,OAAQ,SACRM,OAAQ,OACRC,aAAc,OACdC,QAAS,QAEXb,iBAAkB,CAChBc,QAAS,OACTC,eAAgB,qB,+PCrCpB,IAAMC,GAAkB9Q,UAAO4B,KAC7B,gBAAGsF,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,8GAMoBA,EAAc,SAAYD,GAAY,UAAY,UANtE,wBAOUA,EAAW,OAAS,UAP9B,8BAeInH,GAASC,UAAOC,OAAV,MASC,SAACC,GAAD,OAAWA,EAAMC,YAAc,aAK5C2Q,GAAgBnD,aAAe,CAC7B,UAAW,gBAGb5N,GAAO4N,aAAe,CACpB,UAAW,eAmJE/K,QACbC,YAAQC,IAAS,CAAEC,KAAM,mBACzBF,YAAQC,IAAS,CAAEC,KAAM,mBAFZH,EA9If,YAQI,IAPFnD,EAOC,EAPDA,IACAuD,EAMC,EANDA,SACAkE,EAKC,EALDA,SACAG,EAIC,EAJDA,eACAE,EAGC,EAHDA,eACArE,EAEC,EAFDA,eACAsE,EACC,EADDA,SACC,EACkClE,mBAAS7D,EAAIuB,OAD/C,mBACM+P,EADN,KACgBC,EADhB,OAEsC1N,oBAAS,GAF/C,mBAEMoE,EAFN,KAEkB8D,EAFlB,OAGkClI,oBAAS,GAH3C,mBAGMsE,EAHN,KAGgB6D,EAHhB,OAI0CnI,oBAAS,GAJnD,mBAIMwE,EAJN,KAIoB4D,EAJpB,OAKsCpI,oBAAS,GAL/C,mBAKM6D,EALN,KAKkBwE,EALlB,KASKsF,EACJxR,EAAIX,UACJW,EAAIX,SAASoJ,MAAK,SAACjJ,GAAD,OAAWA,EAAME,SAAW+R,OAC1C9C,EAAY6C,EAAeA,EAAa7R,UAAY,GACpD+R,EACJ1R,EAAIX,UACJW,EAAIX,SAASoJ,MAAK,SAACjJ,GAAD,OAAWA,EAAME,SAAWiS,OAC1CC,EAAeF,EAAkBA,EAAgB/R,UAAY,GAEnE,OAAK8H,EAkCDQ,EAEA,kBAACoJ,GAAD,KACE,kBAAC,EAAD,CACEhQ,GAAIrB,EAAIqB,GACRC,MAAK,qCAAgCgQ,EAAQ,cAAUA,EAAV,qBAC7C/P,MAAO+P,EACP9P,SAjCR,SAA8B+C,GAC5BgN,EAAehN,EAAEC,OAAOjD,QAiClBE,OA9BR,oBAAAmD,EAAAC,OAAA,uDACEmH,GAAe,GADjB,WAAApH,EAAA,MAGQgD,EAAe,CACnB7C,UAAW,CACTC,SAAU6M,IACV3M,oBAAqBC,KAAKC,UAAU,CAClC7D,MAAO+P,EACPjK,WAAYrH,EAAIqB,MAGpBoC,oBAXJ,OAcEsI,GAAiB,GACjBC,GAAe,GAfjB,sCA+BQtK,SAbR,WACEqK,GAAiB,IAaXpK,SAAUwG,KA6BdE,EAEA,kBAACgJ,GAAD,CAAiB5J,SAAUA,EAAUC,WAAYA,GAC9C4J,EACD,kBAAC,EAAD,CACEjP,SA5BR,oBAAAuC,EAAAC,OAAA,uDACEqH,GAAiB,GADnB,oBAAAtH,EAAA,MAIUkD,EAAe,CACnB/C,UAAW,CACTC,SAAU8M,IACV5M,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB9B,EAClB8D,WAAYrH,EAAIqB,MAGpBoC,oBAZN,sDAeIyI,GAAiB,GAfrB,wDA6BQxK,SAVR,WACEuK,GAAmB,IAUbtK,SAAU+F,KAOhB,kBAAC2J,GAAD,CAAiB5J,SAAUA,GAEzB,kBAAC,GAAD,CACE8H,MAAO+B,EACPjR,YAAauR,EAAa,IAAMA,EAAa,GAAGrQ,QAElD,kBAAC,GAAD,CAAQnD,KAAK,SAAS6D,QAAS,kBAAM8J,GAAiB,KAAtD,UAGA,kBAAC,GAAD,CAAQ3N,KAAK,SAAS6D,QAAS,kBAAMgK,GAAmB,KAAxD,gBAIA,kBAAC,GAAD,CACE0C,UAAWA,EACXD,MAAO1O,EAAIqB,GACXC,MAAOgQ,EACP7N,eAAgBA,KAtGlB,kBAAC4N,GAAD,CAAiBpP,QAAS,kBAAM8F,EAAS/H,EAAIqB,MAC1CiQ,O,wZC/ET,IAAMhP,EAAO/B,UAAO4B,IAAV,KASJ7B,EAASC,UAAOC,OAAV,KA6FG2C,IACbC,YAAQC,IAAS,CAAEC,KAAM,cADZH,EAzFf,YAO6B,IANF4O,EAMC,EANDA,WACAC,EAKC,EALDA,UACAvO,EAIC,EAJDA,eAIC,EACWI,mBAAS,IADpB,mBAClByN,EADkB,KACRC,EADQ,OAES1N,oBAAS,GAFlB,mBAElBG,EAFkB,KAETC,EAFS,KAU1B,SAAeyB,EAAanB,GAA5B,SAAAK,EAAAC,OAAA,mDACEN,EAAEO,iBAEGwM,EAHP,wDAOErN,GAAc,GAPhB,WAAAW,EAAA,MAgBkCoN,EAAU,CACxCjN,UAAW,CACTC,SAAUiN,IACV/M,oBAAqBC,KAAKC,UAAU,CAClCC,iBAAkB0M,EAClBxQ,MAAO+P,IAEThM,cAAc,GAEhB7B,oBAzBJ,cAiCE8N,EAAe,IACftN,GAAc,GAlChB,qCA+CA,OACE,kBAAC3B,EAAD,KACE,2BAAOT,QAAQ,aAAf,OAEE,2BACER,GAAG,YACHjD,KAAK,OACLoD,SA1DR,SAAsB+C,GACpBgN,EAAehN,EAAEC,OAAOjD,QA0DlBmD,WAlBR,SAAwBH,GACH,KAAfA,EAAEyK,UACJtJ,EAAanB,IAiBThD,MAAQ+P,EACR3P,SAAUqC,KAGd,kBAAC1D,EAAD,CAAQlC,KAAK,SAAUuD,SAAUqC,EAAU/B,QAASyD,GAEhD1B,EACI,kBACA,mB,sUCrGWzD,UAAO4B,IAAV,KAAtB,IAOM+P,E,2MAGJhU,MAAQ,CACNiU,cAAe,M,EAGjBzG,WAAazC,sB,EAUbwD,YAAc,SAAClI,GACb,IAAMmI,EAAO,EAAKhB,WAAWiB,QAEzBD,GAAQA,IAASnI,EAAEC,SAAWkI,EAAKE,SAASrI,EAAEC,SAChD,EAAKqI,SAAS,CAAEsF,cAAe,Q,EAInC9I,aAAe,SAAChI,GAAD,OAAQ,EAAKwL,SAAS,CAAEsF,cAAe9Q,K,mFAfpD0L,SAASC,iBAAiB,YAAaC,KAAKR,e,6CAI5CM,SAASI,oBAAoB,YAAaF,KAAKR,e,+BAavC,IAAD,OACDsF,EAAa,uCACXI,EAAkBlF,KAAK/O,MAAvBiU,cAEFC,EAAa,CACjBC,gBAAiBN,GAGnB,OACE,kBAAC,IAAD,CACE1Q,GAAIiR,IACJC,kBAAmBxS,IACnByS,MAAO3S,IACPuS,WAAYA,IAEX,YAA+C,IAA5CpO,EAA2C,EAA3CA,QAASyO,EAAkC,EAAlCA,MAAO9T,EAA2B,EAA3BA,KAAM8E,EAAqB,EAArBA,eACxB,GAAIO,EAAS,MAAO,aAEpB,GAAIyO,EAEF,OADAnL,QAAQmL,MAAMA,GACR,UAAN,OAAiBA,EAAMC,eAGzB,IAAMC,EAAOhU,EAAKN,SAASoB,KAAI,SAACmT,GAAD,OAAQ3T,YAAY2T,MAEnD,OACE,oCACE,yBAAK7Q,UAAU,OACb,yBAAKA,UAAU,oBACZ4Q,GACCA,EAAKlT,KAAI,SAACO,EAAK6S,GAAN,OACP,kBAAC,IAAD,CACElO,IAAK4E,eACLhG,SAAUwO,EACV/R,IAAKA,EACLyH,SAAUzH,EAAIqB,KAAO8Q,EACrB1O,eAAgBA,EAChBsE,SAAU,EAAKsB,oBAKzB,qC,GArEKiE,aA8EJwF,sBAAYZ","file":"static/js/16.6356fa59.chunk.js","sourcesContent":["import createDataContext from '../context/createDataContext';\r\n\r\nconst unitDataReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'getUnitData':\r\n      return { unitData: action.payload };\r\n    case 'setStage':\r\n      return { currentStage: action.payload };\r\n    case 'setChildState':\r\n      return { ...state, childState: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst getUnitData = (dispatch) => (data) => {\r\n  dispatch({ type: 'getUnitData', payload: data });\r\n};\r\n\r\nconst setCurrentStage = (dispatch) => (stage) => {\r\n  dispatch({ type: 'setStage', payload: stage });\r\n};\r\n\r\nconst setChildState = (dispatch) => (state) => {\r\n  dispatch({ type: 'setChildState', payload: state });\r\n};\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n  unitDataReducer,\r\n  { getUnitData, setCurrentStage, setChildState },\r\n  {\r\n    unitData: [],\r\n    currentStage: 0,\r\n    childState: [],\r\n  }\r\n);\r\n","export function flattenChildData(element) {\r\n  const flatData = {\r\n    typeId: element.typeId,\r\n    instances: [],\r\n  };\r\n\r\n  if (element.instances && element.instances.length > 0) {\r\n    flatData.instances = element.instances\r\n      .filter((child) => !!child)\r\n      .map((instance) => flattenData(instance));\r\n  }\r\n\r\n  return flatData;\r\n}\r\n\r\nexport function flattenData(element) {\r\n  const flatData = {\r\n    ...element.instance,\r\n    children: [],\r\n  };\r\n\r\n  if (element.children && element.children.length > 0) {\r\n    flatData.children = element.children\r\n      .filter((child) => !!child)\r\n      .map((child) => flattenChildData(child));\r\n  }\r\n\r\n  return flatData;\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nexport const SOURCE_APP_SPEC_QUERY = gql`\r\n  query UNIT(\r\n    $id: ID!\r\n    $typeRelationships: String!\r\n    $parameters: String\r\n  ) {\r\n    unitData(\r\n      unitId: $id\r\n      typeRelationships: $typeRelationships\r\n      parameters: $parameters\r\n    )\r\n    {\r\n        instance {\r\n            id\r\n            value\r\n        }\r\n        children {\r\n            typeId\r\n            instances {\r\n                        \r\n                instance {\r\n                    id\r\n                    value\r\n                }\r\n                \r\n                children {\r\n                    typeId\r\n                    instances {        \r\n                        instance {\r\n                            id\r\n                            value\r\n                        }\r\n                        \r\n                        children {\r\n                            typeId\r\n                            instances {\r\n                                \r\n                                instance {\r\n                                    id\r\n                                    value\r\n                                }\r\n                                \r\n                                children {\r\n                                    typeId\r\n                                    instances {\r\n                                        \r\n                                        instance {\r\n                                            id\r\n                                            value\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                children {\r\n                                    typeId\r\n                                    instances {\r\n                                        \r\n                                        instance {\r\n                                            id\r\n                                            value\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const APP_SPEC_RELATIONSHIPS = {\r\n    app: {\r\n        userType: {\r\n            screen: {\r\n                infoType: {\r\n                    hasParent: null\r\n                }\r\n            }\r\n        },\r\n        description: null\r\n    },\r\n};\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: general, comp: EditInstanceForm\r\n\r\n// ns__custom_start unit: general, comp: EditInstanceForm, loc: beforeImports\r\n\r\n\r\n\r\n// ns__custom_end unit: general, comp: EditInstanceForm, loc: beforeImports\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n// ns__custom_start unit: general, comp: EditInstanceForm, loc: addedImports\r\nimport { TextField, makeStyles } from '@material-ui/core';\r\n// ns__custom_end unit: general, comp: EditInstanceForm, loc: addedImports\r\n\r\n\r\n// ns__custom_start unit: general, comp: EditInstanceForm, loc: styling\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${props => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  titleLabel: {\r\n      fontSize: '.8rem',\r\n      textAlign: 'initial',\r\n\r\n  },\r\n  textArea: {\r\n    width: '90%',\r\n    backgroundColor: 'white'\r\n  }\r\n}));\r\n// ns__custom_end unit: general, comp: EditInstanceForm, loc: styling\r\n\r\nfunction EditInstanceForm({\r\n  id,\r\n  label,\r\n  value,\r\n  onChange,\r\n  onSave,\r\n  onCancel,\r\n  disabled,\r\n}) {\r\n  // ns__custom_start unit: general, comp: EditInstanceForm, loc: beforeReturn\r\n  const styles = useStyles(); \r\n  // ns__custom_end unit: general, comp: EditInstanceForm, loc: beforeReturn\r\n  return (\r\n    <>\r\n     {/* // ns__custom_start unit: general, comp: EditInstanceForm, loc: insideReturn */}\r\n      <label htmlFor={id}>\r\n        \r\n        <TextField \r\n          className={styles.textArea}\r\n          label={label}\r\n          id={id}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n          variant=\"outlined\"\r\n        />        \r\n        \r\n        \r\n      </label>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#00FF00\"\r\n        onClick={onSave}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        hoverColor=\"#FF0000\"\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n      {/* // ns__custom_end unit: general, comp: EditInstanceForm, loc: insideReturn */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditInstanceForm;\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: general, comp: DeleteInstanceMenu\r\n\r\n// ns__custom_start unit: general, comp: DeleteInstanceMenu, loc: beforeImports\r\n\r\n\r\n\r\n// ns__custom_end unit: general, comp: DeleteInstanceMenu, loc: beforeImports\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  color: red;\r\n  margin: 1em;\r\n  padding: 1em;\r\n  border: 1px solid #eeeeee;\r\n`;\r\n\r\nfunction DeleteInstanceMenu({\r\n  onDelete,\r\n  onCancel,\r\n  disabled,\r\n}) {\r\n  return (\r\n    <Container>\r\n      Delete?\r\n      <Button\r\n        type='button'\r\n        hoverColor='#00FF00'\r\n        onClick={onDelete}\r\n        disabled={disabled}\r\n      >\r\n        &#10003;\r\n      </Button>\r\n      <Button\r\n        type='button'\r\n        hoverColor='#FF0000'\r\n        onClick={onCancel}\r\n        disabled={disabled}\r\n      >\r\n        &#10005;\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DeleteInstanceMenu;\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: UserTypeCreationForm\r\n\r\n// ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: beforeImports\r\n// ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: beforeImports\r\n\r\nimport React, { useState } from 'react';\r\nimport { graphql } from '@apollo/react-hoc';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { withNoStack, EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\n\r\n\r\n// ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: addedImports\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles, TextField, InputAdornment } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/Button';\r\nimport { CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID } from '../../../config';\r\n\r\n// ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: styling\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  \r\n  border: none;\r\n  border-radius: 5px;\r\n  \r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  \r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  width: 100%\r\n`;\r\n\r\nconst Input = styled.input`\r\n  :focus,\r\n  textarea:focus,\r\n  select:focus {\r\n    outline: none;\r\n    border: 0;\r\n  }\r\n  border: 0;\r\n  -webkit-appearance: none;\r\n  background-color: inherit;\r\n  padding: 10px 0;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  \r\n\r\n`;\r\n\r\nconst fadeInDown = keyframes`\r\n0% {\r\n  opacity: 0;\r\n  \r\n}\r\n100% {\r\n  opacity: 1;\r\n  \r\n}\r\n`;\r\n\r\nconst CalloutBox = styled.div`\r\n  padding: 1rem;\r\n  animation: ${fadeInDown} 1.5s;\r\n  background-color: #F3E196;\r\n  width: 100%;\r\n  border-radius: 10px;  \r\n  position: relative;\r\n  margin: .5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n\r\n  :after{\r\n    background-color: #F3E196;\r\n    position: absolute;\r\n    width: 30px;\r\n    height: 10px;\r\n    border-top: 0px solid #F3E196;\r\n    border-right: 2px solid #F3E196;\r\n    border-left: 0px solid #F3E196;\r\n    border-bottom: 2px solid #F3E196;\r\n    left: 60%;\r\n    \r\n    content: '';\r\n    transform: rotate(45deg);\r\n    margin-top: -13px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    minWidth: 0,\r\n  },\r\n  customWidth: {\r\n    maxWidth: '500',\r\n    minWidth: '300',\r\n    backgroundColor: 'blue',\r\n  },\r\n  helpIcon: {\r\n    fontSize: '1.5rem',\r\n    color: '#FDCC00',\r\n  },\r\n  closeIcon: {\r\n    color: 'white',\r\n    fontSize: '1.2rem',\r\n  },\r\n  textField: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\n// ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: styling\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction UserTypeCreationForm({\r\n  parentId,\r\n  createUserType,\r\n  refetchQueries,\r\n  // ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: addedPropsForCreationForm\r\n  validateUserTypes,\r\n  onChange,\r\n  label,\r\n  userTypeCreationCount,\r\n  disabled,\r\n  textLabel\r\n  // ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: addedPropsForCreationForm\r\n}) {\r\n  const [userTypeValue, updateUserTypeValue] = useState('');\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  // ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: beginning\r\n  const styles = useStyles();\r\n  const [callout, setCallout] = useState(false);\r\n  const showCalloutBox = callout || validateUserTypes === 0;\r\n  let callOutText= '';\r\n  \r\n  if(userTypeCreationCount < 4){\r\n    callOutText =textLabel\r\n  }else {\r\n    callOutText=`What is the User Type ${label ? `for ${label}` : ''}`;\r\n  }\r\n  // ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: beginning\r\n\r\n  function handleChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!userTypeValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createUserTypeResponse = await createUserType({\r\n      variables: {\r\n        actionId: CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: userTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    const newUserTypeData = JSON.parse(createUserTypeResponse.data.Execute);\r\n\r\n    \r\n    \r\n    \r\n    updateUserTypeValue('');\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    // ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: insideHandleKeyPress\r\n    // if (e.charCode === 13) {\r\n    //   handleSubmit(e);\r\n    // }\r\n    if (e.key === 'Enter') {\r\n      handleSubmit(e);\r\n    }\r\n    // ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: insideHandleKeyPress\r\n  }\r\n  // ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: beforeReturn\r\n  const showCallout = () => {\r\n    setCallout(!callout);\r\n  };\r\n  return (\r\n    <Form>\r\n      {/* ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: insideReturn */}\r\n      <Label htmlFor='userType-value'>\r\n        <TextField \r\n           className={styles.textField}\r\n           label={callOutText}\r\n           value={userTypeValue}\r\n           onChange={(e) => {handleChange(e); onChange(e.target.value)}}\r\n           onKeyPress={handleKeyPress}\r\n           value={userTypeValue}\r\n           disabled={loading||disabled}\r\n           variant=\"outlined\"\r\n           InputProps={{\r\n             endAdornment: (\r\n               <InputAdornment position=\"end\">\r\n                    <HelpOutlineIcon className={styles.helpIcon} onClick={showCallout}/>\r\n               </InputAdornment>\r\n             )\r\n           }}\r\n        />\r\n       \r\n      </Label>\r\n      {showCalloutBox ? (\r\n        <CalloutBox>\r\n          {callOutText}{' '}\r\n          <CloseIcon className={styles.closeIcon} onClick={showCallout} />\r\n        </CalloutBox>\r\n      ) : null}\r\n    {/* ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: insideReturn */}\r\n    </Form>\r\n  );\r\n  // ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: beforeReturn\r\n\r\n  // return (\r\n  //   <Form>\r\n  //     {/* ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: insideReturn */}\r\n  //     <Label htmlFor='userType-value'>\r\n  //       \r\n  //       UserType:\r\n  //       <InputContainer>\r\n  //         <Input\r\n  //           id='userType-value'\r\n  //           type='text'\r\n  //           onChange={handleChange}\r\n  //           onKeyPress={handleKeyPress}\r\n  //           value={userTypeValue}\r\n  //           disabled={loading}\r\n            \r\n  //         />\r\n\r\n  //         <IconButton className={styles.button} onClick={showCallout}>\r\n  //           <HelpOutlineIcon className={styles.helpIcon} />\r\n  //         </IconButton>\r\n  //       </InputContainer>\r\n     \r\n  //       <Button type='submit' disabled={loading} onClick={handleSubmit}>\r\n  //         {loading ? 'Creating UserType...' : 'Create UserType'}\r\n  //       </Button>\r\n  //     </Label>\r\n  //     {showCalloutBox ? (\r\n  //       <CalloutBox>\r\n  //         {callOutText}{' '}\r\n  //         <CloseIcon className={styles.closeIcon} onClick={showCallout} />\r\n  //       </CalloutBox>\r\n  //     ) : null}\r\n  //   {/* ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: insideReturn */}\r\n  //   </Form>\r\n  // );\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: 'createUserType' }))(\r\n  UserTypeCreationForm\r\n);\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: ScreenCreationForm\r\n\r\n// ns__custom_start unit: appSpec, comp: ScreenCreationForm, loc: beforeImports\r\n// ns__custom_end unit: appSpec, comp: ScreenCreationForm, loc: beforeImports\r\n\r\nimport React, { useState } from 'react';\r\nimport { graphql } from '@apollo/react-hoc';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\n\r\n// ns__custom_start unit: appSpec, comp: ScreenCreationForm, loc: addedImports\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles, TextField, InputAdornment } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID } from '../../../config';\r\n\r\n// ns__custom_end unit: appSpec, comp: ScreenCreationForm, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: ScreenCreationForm, loc: styling\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: .8rem 0 .5rem 3.8rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  \r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -31px;\r\n    left: -31px;\r\n    border-left: 2px dashed #a2a5b5;\r\n    width: 1px;\r\n    height: '141%'; \r\n   \r\n  }\r\n\r\n \r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-top: 2px dashed #a2a5b5;\r\n    top:  '44px';\r\n    left: -30px;\r\n    width: '29px'; \r\n  }\r\n\r\n  &:last-child:before {\r\n    top: -76px ;\r\n    height: '116px'; \r\n  }\r\n  \r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  :focus,\r\n  textarea:focus,\r\n  select:focus {\r\n    outline: none;\r\n    border: 0;\r\n  }\r\n  border: 0;\r\n  -webkit-appearance: none;\r\n  background-color: inherit;\r\n  padding: 10px 0;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst fadeInDown = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    \r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    \r\n  }\r\n`;\r\n\r\nconst CalloutBox = styled.div`\r\n  padding: 1rem;\r\n  animation: ${fadeInDown} 1.5s;\r\n  background-color: #F3E196;\r\n  width: inherit;\r\n  border-radius: 10px;  \r\n  position: relative;\r\n  margin: .5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n\r\n  :after{\r\n    background-color: #F3E196;\r\n    position: absolute;\r\n    width: 30px;\r\n    height: 10px;\r\n    border-top: 0px solid #F3E196;\r\n    border-right: 2px solid #F3E196;\r\n    border-left: 0px solid #F3E196;\r\n    border-bottom: 2px solid #F3E196;\r\n    left: 93%;\r\n    \r\n    content: '';\r\n    transform: rotate(45deg);\r\n    margin-top: -13px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    minWidth: 0,\r\n  },\r\n  customWidth: {\r\n    maxWidth: '500',\r\n    minWidth: '300',\r\n    backgroundColor: 'blue',\r\n  },\r\n  helpIcon: {\r\n    fontSize: '1.5rem',\r\n    color: '#FDCC00',\r\n  },\r\n  closeIcon: {\r\n    color: 'white',\r\n    fontSize: '1rem',\r\n  },\r\n  textField: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\n// ns__custom_end unit: appSpec, comp: ScreenCreationForm, loc: styling\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction ScreenCreationForm({\r\n  parentId,\r\n  createScreen,\r\n  refetchQueries,\r\n  // ns__custom_start unit: appSpec, comp: ScreenCreationForm, loc: addedProps\r\n  validateScreens,\r\n  disabled,\r\n  onChange,\r\n  label,\r\n  userTypeCreationCount,\r\n  textLabel,\r\n  \r\n  // ns__custom_end unit: appSpec, comp: ScreenCreationForm, loc: addedProps\r\n}) {\r\n  const [screenValue, updateScreenValue] = useState('');\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  // ns__custom_start unit: appSpec, comp: ScreenCreationForm, loc: beginning\r\n  const styles = useStyles();\r\n  const [callout, setCallout] = useState(false);\r\n  const showCalloutBox = callout || validateScreens === 0;\r\n  let callOutText= '';\r\n  \r\n  if(userTypeCreationCount < 5){\r\n    callOutText =textLabel\r\n  }else {\r\n    callOutText=`What is the Screen name ${label ? `for ${label}` : ''}`;\r\n  }\r\n  // ns__custom_end unit: appSpec, comp: ScreenCreationForm, loc: beginning\r\n\r\n  function handleChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!screenValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createScreenResponse = await createScreen({\r\n      variables: {\r\n        actionId: CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: screenValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateScreenValue('');\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    // ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: insideHandleKeyPress\r\n    // if (e.charCode === 13) {\r\n    //   handleSubmit(e);\r\n    // }\r\n    if (e.key === 'Enter') {\r\n      handleSubmit(e);\r\n    }\r\n    // ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: insideHandleKeyPress\r\n  }\r\n\r\n  // ns__custom_start unit: appSpec, comp: ScreenCreationForm, loc: beforeReturn\r\n  const showCallout = () => {\r\n    setCallout(!callout);\r\n  };\r\n  return (\r\n    <Form>\r\n      <Label htmlFor='screen-value'>\r\n      <TextField \r\n           className={styles.textField}\r\n           label={callOutText}\r\n           value={screenValue}\r\n           onChange={(e) => {handleChange(e); onChange(e.target.value)}}\r\n           onKeyPress={handleKeyPress}\r\n           value={screenValue}\r\n           disabled={disabled||loading}\r\n           variant=\"outlined\"\r\n           InputProps={{\r\n             endAdornment: (\r\n               <InputAdornment position=\"end\">\r\n                    <HelpOutlineIcon className={styles.helpIcon} onClick={showCallout}/>\r\n               </InputAdornment>\r\n             )\r\n           }}\r\n        />\r\n      </Label>\r\n      {showCalloutBox ? (\r\n          <CalloutBox>\r\n            {callOutText}{' '}\r\n            <CloseIcon className={styles.closeIcon} onClick={showCallout} />\r\n          </CalloutBox>\r\n      ) : null}\r\n    </Form>\r\n);\r\n  // ns__custom_end unit: appSpec, comp: ScreenCreationForm, loc: beforeReturn\r\n\r\n  // ns__start_replacement return\r\n  // return (\r\n  //     <Form>\r\n  //       <Label htmlFor='screen-value'>\r\n  //         Screen:\r\n  //         <InputContainer>\r\n  //           <Input\r\n  //               id='screen-value'\r\n  //               type='text'\r\n  //               onChange={handleChange}\r\n  //               onKeyPress={handleKeyPress}\r\n  //               value={screenValue}\r\n  //               disabled={loading}\r\n  //           />\r\n\r\n  //           <IconButton className={styles.button} onClick={showCallout}>\r\n  //             <HelpOutlineIcon className={styles.helpIcon} />\r\n  //           </IconButton>\r\n  //         </InputContainer>\r\n  //         <Button type='submit' disabled={loading} onClick={handleSubmit}>\r\n  //           {loading ? 'Creating Screen...' : 'Create Screen'}\r\n  //         </Button>\r\n  //       </Label>\r\n  //       {showCalloutBox ? (\r\n  //           <CalloutBox>\r\n  //             {callOutText}{' '}\r\n  //             <CloseIcon className={styles.closeIcon} onClick={showCallout} />\r\n  //           </CalloutBox>\r\n  //       ) : null}\r\n  //     </Form>\r\n  // );\r\n  // ns__end_replacement return\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: 'createScreen' }))(\r\n  ScreenCreationForm\r\n);\r\n\r\nScreenCreationForm.propTypes = {\r\n  parentId: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  createScreen: PropTypes.func,\r\n  refetchQueries: PropTypes.array,\r\n  onSelect: PropTypes.func,\r\n  validateScreens: PropTypes.number,\r\n  // ns__custom_start unit: appSpec, comp: ScreenCreationForm, loc: addedPropTypes\r\n  // ns__custom_end unit: appSpec, comp: ScreenCreationForm, loc: addedPropTypes\r\n};\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: InfoTypeCreationForm\r\n\r\n// ns__custom_start unit: appSpec, comp: InfoTypeCreationForm, loc: beforeImports\r\n\r\n// ns__custom_end unit: appSpec, comp: InfoTypeCreationForm, loc: beforeImports\r\n\r\nimport React, { useState } from 'react';\r\nimport { graphql } from '@apollo/react-hoc';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\n\r\n// ns__custom_start unit: appSpec, comp: InfoTypeCreationForm, loc: addedImports\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles, TextField, InputAdornment } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID } from '../../../config';\r\n\r\n// ns__custom_end unit: appSpec, comp: InfoTypeCreationForm, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: InfoTypeCreationForm, loc: styling\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin:  .8rem 0 0 11%;\r\n  border: none;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  width: 100%;\r\n`;\r\nconst Input = styled.input`\r\n  :focus,\r\n  textarea:focus,\r\n  select:focus {\r\n    outline: none;\r\n    border: 0;\r\n  }\r\n  border: 0;\r\n  -webkit-appearance: none;\r\n  background-color: inherit;\r\n  padding: 10px 0;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst fadeInDown = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    \r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    \r\n  }\r\n`;\r\n\r\nconst CalloutBox = styled.div`\r\n  padding: 1rem;\r\n  animation: ${fadeInDown} 1.5s;\r\n  background-color: #F3E196;\r\n  width: inherit;\r\n  border-radius: 10px;  \r\n  position: relative;\r\n  margin: .5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n\r\n  :after{\r\n    background-color: #F3E196;\r\n    position: absolute;\r\n    width: 30px;\r\n    height: 10px;\r\n    border-top: 0px solid #F3E196;\r\n    border-right: 2px solid #F3E196;\r\n    border-left: 0px solid #F3E196;\r\n    border-bottom: 2px solid #F3E196;\r\n    left: 91%;\r\n    \r\n    content: '';\r\n    transform: rotate(45deg);\r\n    margin-top: -13px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    minWidth: 0,\r\n  },\r\n  customWidth: {\r\n    maxWidth: '500',\r\n    minWidth: '300',\r\n    backgroundColor: 'blue',\r\n  },\r\n  helpIcon: {\r\n    fontSize: '1.5rem',\r\n    color: '#FDCC00',\r\n  },\r\n  closeIcon: {\r\n    color: 'white',\r\n    fontSize: '1rem',\r\n  },\r\n  textField: {\r\n    width: '100%'\r\n  }\r\n});\r\n// ns__custom_end unit: appSpec, comp: InfoTypeCreationForm, loc: styling\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction InfoTypeCreationForm({\r\n  parentId,\r\n  createInfoType,\r\n  refetchQueries,\r\n  // ns__custom_start unit: appSpec, comp: InfoTypeCreationForm, loc: addedProps\r\n  validateInfoTypes,\r\n  label,\r\n  disabled,\r\n  infoTypeValueCount,\r\n  textLabel,\r\n  onChange\r\n  // ns__custom_end unit: appSpec, comp: InfoTypeCreationForm, loc: addedProps\r\n}) {\r\n  const [infoTypeValue, updateInfoTypeValue] = useState('');\r\n  const [loading, updateLoading] = useState(false);\r\n\r\n  // ns__custom_start unit: appSpec, comp: InfoTypeCreationForm, loc: beginning\r\n  const styles = useStyles();\r\n  const [callout, setCallout] = useState(false);\r\n  const showCalloutBox = callout || validateInfoTypes === 0;\r\n  let callOutText= '';\r\n  \r\n  if(infoTypeValueCount < 5){\r\n    callOutText =textLabel\r\n  }else {\r\n    callOutText=`What is the Info Type ${label ? `for ${label}` : ''}`;\r\n  }\r\n  // ns__custom_end unit: appSpec, comp: InfoTypeCreationForm, loc: beginning\r\n\r\n  function handleChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n    onChange(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!infoTypeValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createInfoTypeResponse = await createInfoType({\r\n      variables: {\r\n        actionId: CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: infoTypeValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateInfoTypeValue('');\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    // ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: insideHandleKeyPress\r\n    // if (e.charCode === 13) {\r\n    //   handleSubmit(e);\r\n    // }\r\n    if (e.key === 'Enter') {\r\n      handleSubmit(e);\r\n    }\r\n    // ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: insideHandleKeyPress\r\n  }\r\n\r\n  // ns__custom_start unit: appSpec, comp: InfoTypeCreationForm, loc: beforeReturn\r\n  const showCallout = () => {\r\n    setCallout(!callout);\r\n  };\r\n  return (\r\n    <Form>\r\n      <Label htmlFor='infoType-value'>\r\n        <TextField\r\n          className={styles.textField}\r\n          label={callOutText}\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={infoTypeValue}\r\n          disabled={disabled || loading}\r\n          variant='outlined'\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <HelpOutlineIcon\r\n                  className={styles.helpIcon}\r\n                  onClick={showCallout}\r\n                />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Label>\r\n\r\n      {showCalloutBox ? (\r\n        <CalloutBox>\r\n          {callOutText}{' '}\r\n          <CloseIcon className={styles.closeIcon} onClick={showCallout} />\r\n        </CalloutBox>\r\n      ) : null}\r\n    </Form>\r\n  );\r\n  // ns__custom_end unit: appSpec, comp: InfoTypeCreationForm, loc: beforeReturn\r\n\r\n  // ns__start_replacement return\r\n  // return (\r\n  //   <Form>\r\n  //     <Label htmlFor='infoType-value'>\r\n  //       {label}\r\n  //       <TextField\r\n  //          className={styles.textField}\r\n  //          label=\"Info Type\"\r\n  //          value={label}\r\n  //          onChange={handleChange}\r\n  //          onKeyPress={handleKeyPress}\r\n  //          value={label}\r\n  //          disabled={loading}\r\n  //          variant=\"outlined\"\r\n  //          InputProps={{\r\n  //            endAdornment: (\r\n  //              <InputAdornment position=\"end\">\r\n  //                   <HelpOutlineIcon className={styles.helpIcon} onClick={showCallout}/>\r\n  //              </InputAdornment>\r\n  //            )\r\n  //          }}\r\n  //       />\r\n  //       <InputContainer>\r\n  //         <Input\r\n  //           id='infoType-value'\r\n  //           type='text'\r\n  //           onChange={handleChange}\r\n  //           onKeyPress={handleKeyPress}\r\n  //           value={infoTypeValue}\r\n  //           disabled={loading}\r\n  //         />\r\n  //         <IconButton className={styles.button} onClick={showCallout}>\r\n  //           <HelpOutlineIcon className={styles.helpIcon} />\r\n  //         </IconButton>\r\n  //       </InputContainer>\r\n  //       <Button type='submit' disabled={loading} onClick={handleSubmit}>\r\n  //         {loading ? 'Creating InfoType...' : 'Create InfoType'}\r\n  //       </Button>\r\n  //     </Label>\r\n\r\n  //     {showCalloutBox ? (\r\n  //       <CalloutBox>\r\n  //         {callOutText}{' '}\r\n  //         <CloseIcon className={styles.closeIcon} onClick={showCallout} />\r\n  //       </CalloutBox>\r\n  //     ) : null}\r\n  //   </Form>\r\n  // );\r\n  // ns__end_replacement return\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: 'createInfoType' }))(\r\n  InfoTypeCreationForm\r\n);\r\n\r\nInfoTypeCreationForm.propTypes = {\r\n  parentId: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  validateInfoTypes: PropTypes.number,\r\n  createInfoType: PropTypes.func,\r\n  refetchQueries: PropTypes.array,\r\n  onSelect: PropTypes.func,\r\n  app: PropTypes.shape({\r\n    children: PropTypes.array,\r\n    id: PropTypes.string,\r\n  }),\r\n  infoType: PropTypes.shape({\r\n    value: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n\r\n  // ns__custom_start unit: appSpec, comp: InfoTypeCreationForm, loc: addedPropTypes\r\n  // ns__custom_end unit: appSpec, comp: InfoTypeCreationForm, loc: addedPropTypes\r\n};\r\n","import React, { useState } from 'react';\r\nimport { graphql } from '@apollo/react-hoc';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\n\r\n// ns__custom_start unit: appSpec, comp: Sub_Info_TypeCreationForm, loc: addedImports\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles, TextField, InputAdornment } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/Button';\r\nimport {\r\n  CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n} from '../../config';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ns__custom_end unit: appSpec, comp: Sub_Info_TypeCreationForm, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: Sub_Info_TypeCreationForm, loc: styling\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  border: none;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  width: 100%\r\n`;\r\n\r\nconst Input = styled.input`\r\n  :focus,\r\n  textarea:focus,\r\n  select:focus {\r\n    outline: none;\r\n    border: 0;\r\n  }\r\n  border: 0;\r\n  -webkit-appearance: none;\r\n  background-color: inherit;\r\n  padding: 10px 0;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst fadeInDown = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    \r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    \r\n  }\r\n`;\r\n\r\nconst CalloutBox = styled.div`\r\n  padding: 1rem;\r\n  animation: ${fadeInDown} 1.5s;\r\n  background-color: #F3E196;\r\n  width: inherit;\r\n  border-radius: 10px;  \r\n  position: relative;\r\n  margin: .5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n\r\n  :after{\r\n    background-color: #F3E196;\r\n    position: absolute;\r\n    width: 30px;\r\n    height: 10px;\r\n    border-top: 0px solid #F3E196;\r\n    border-right: 2px solid #F3E196;\r\n    border-left: 0px solid #F3E196;\r\n    border-bottom: 2px solid #F3E196;\r\n    left: 81%;\r\n    \r\n    content: '';\r\n    transform: rotate(45deg);\r\n    margin-top: -13px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    minWidth: 0,\r\n  },\r\n  customWidth: {\r\n    maxWidth: '500',\r\n    minWidth: '300',\r\n    backgroundColor: 'blue',\r\n  },\r\n  helpIcon: {\r\n    fontSize: '1.5rem',\r\n    color: '#FDCC00',\r\n  },\r\n  closeIcon: {\r\n    color: 'white',\r\n    fontSize: '1rem',\r\n  },\r\n  textField: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\n// ns__custom_end unit: appSpec, comp: Sub_Info_TypeCreationForm, loc: styling\r\n\r\nconst SubInfoTypeCreationForm = ({\r\n  childId,\r\n  parentId,\r\n  createSubInfoType,\r\n  refetchQueries,\r\n  saveInstance,\r\n  // ns__custom_start unit: appSpec, comp: Sub_Info_Type_Creation, loc: addedPropsForCreationForm\r\n  validateSubInfoTypes,\r\n  label,\r\n  disabled,\r\n  subInfoTypeValueCount,\r\n  textLabel\r\n  // ns__custom_end unit: appSpec, comp: Sub_Info_Type_Creation, loc: addedPropsForCreationForm\r\n}) => {\r\n  const [subInfoValue, setSubInfoValue] = useState('');\r\n  const [loading, updateLoading] = useState(false);\r\n  const styles = useStyles();\r\n  const [callout, setCallout] = useState(false);\r\n  const showCalloutBox = callout || validateSubInfoTypes === 0;\r\n  \r\n\r\n  // ns__custom_start unit: appSpec, comp: Sub_Info_Type_Creation, loc: beginning\r\n  let callOutText= '';\r\n  \r\n  if(subInfoTypeValueCount < 5){\r\n    callOutText =textLabel\r\n  }else {\r\n    callOutText=`What is the sub Info Type ${label ? `for ${label}` : ''}`;\r\n  }\r\n  // ns__custom_end unit: appSpec, comp: Sub_Info_Type_Creation, loc: beginning\r\n  function handleChange(e) {\r\n    setSubInfoValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!subInfoValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    try {\r\n      // const newInfoTypeData = JSON.parse(createSubInfoResponse.data.Execute);\r\n      setSubInfoValue('');\r\n      updateLoading(false);\r\n      const createInfoTypeResponse = await createSubInfoType({\r\n        variables: {\r\n          actionId: CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            value: subInfoValue,\r\n          }),\r\n          unrestricted: false,\r\n        },\r\n        refetchQueries,\r\n      });\r\n\r\n      const newInfoTypeData = JSON.parse(createInfoTypeResponse.data.Execute);\r\n      \r\n      const createChildInfoTypeResponse = await saveInstance({\r\n        variables: {\r\n          actionId: ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            childInstanceId: childId,\r\n            parentInstanceId: newInfoTypeData.instanceId,\r\n          }),\r\n          unrestricted: false,\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    // ns__custom_start unit: appSpec, comp: UserTypeCreationForm, loc: insideHandleKeyPress\r\n    // if (e.charCode === 13) {\r\n    //   handleSubmit(e);\r\n    // }\r\n    if (e.key === 'Enter') {\r\n      handleSubmit(e);\r\n    }\r\n    // ns__custom_end unit: appSpec, comp: UserTypeCreationForm, loc: insideHandleKeyPress\r\n  }\r\n\r\n  // ns__custom_start unit: appSpec, comp: Sub_Info_Type_Creation, loc: beforeReturn*/\r\n  const showCallout = () => {\r\n    setCallout(!callout);\r\n  };\r\n  return (\r\n    <Form>\r\n      {/* // ns__custom_start unit: appSpec, comp: Sub_Info_Type_Creation, loc: insideReturn */}\r\n      <Label htmlFor='screen-value'>\r\n     \r\n        <TextField \r\n           className={styles.textField}\r\n           label={`New Sub Info Type  ${label ? `for ${label}` : ''}`}\r\n           onChange={handleChange}\r\n           onKeyPress={handleKeyPress}\r\n           value={subInfoValue}\r\n           disabled={loading|| disabled}\r\n           variant=\"outlined\"\r\n           InputProps={{\r\n             endAdornment: (\r\n               <InputAdornment position=\"end\">\r\n                    <HelpOutlineIcon className={styles.helpIcon} onClick={showCallout}/>\r\n               </InputAdornment>\r\n             )\r\n           }}\r\n        />\r\n        \r\n      </Label>\r\n      {showCalloutBox ? (\r\n        <CalloutBox>\r\n          {callOutText}{' '}\r\n          <CloseIcon className={styles.closeIcon} onClick={showCallout} />\r\n        </CalloutBox>\r\n      ) : null}\r\n      {/* // ns__custom_end unit: appSpec, comp: Sub_Info_Type_Creation, loc: insideReturn */}\r\n    </Form>\r\n  );\r\n  // ns__custom_end unit: appSpec, comp: Sub_Info_Type_Creation, loc: beforeReturn*/\r\n\r\n  // return (\r\n  //   <Form>\r\n  //     {/* // ns__custom_start unit: appSpec, comp: Sub_Info_Type_Creation, loc: insideReturn */}\r\n  //     <Label htmlFor='screen-value'>\r\n  //       Sub Info Type:\r\n  //       <InputContainer>\r\n  //         <Input\r\n  //           type='text'\r\n  //           onChange={handleChange}\r\n  //           onKeyPress={handleKeyPress}\r\n  //           value={subInfoValue}\r\n  //           disabled={loading}\r\n  //         />\r\n\r\n  //         <IconButton className={styles.button} onClick={showCallout}>\r\n  //           <HelpOutlineIcon className={styles.helpIcon} />\r\n  //         </IconButton>\r\n  //       </InputContainer>\r\n  //       <Button type='submit' disabled={loading} onClick={handleSubmit}>\r\n  //         {loading ? 'Creating Sub Info Type...' : 'Create Sub Info Type'}\r\n  //       </Button>\r\n  //     </Label>\r\n  //     {showCalloutBox ? (\r\n  //       <CalloutBox>\r\n  //         {callOutText}{' '}\r\n  //         <CloseIcon className={styles.closeIcon} onClick={showCallout} />\r\n  //       </CalloutBox>\r\n  //     ) : null}\r\n  //     {/* // ns__custom_end unit: appSpec, comp: Sub_Info_Type_Creation, loc: insideReturn */}\r\n  //   </Form>\r\n  // );\r\n};\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'createSubInfoType' }),\r\n  graphql(EXECUTE, { name: 'saveInstance' })\r\n)(SubInfoTypeCreationForm);","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\nimport { graphql } from '@apollo/react-hoc';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n  CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_INFO_TYPE_ID,\r\n} from '../../config';\r\n\r\nimport EditInstanceForm from '../../components/EditInstanceForm';\r\nimport DeleteInstanceMenu from '../../components/DeleteInstanceMenu';\r\n\r\n// ns__custom_start unit: appSpec, comp: SubInfoChildType, loc: addedImports\r\nimport SubInfoChildTypes from '../SubInfoChildTypes';\r\n// ns__custom_end unit: appSpec, comp: SubInfoChildType, loc: addedImports\r\n\r\nconst SubInfoTypeWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? '1px solid aquamarine' : '1px solid white'};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && 'tomato'};\r\n  cursor: ${selected ? 'auto' : 'pointer'};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst SubInfoType = ({\r\n  infoType,\r\n  infoTypeId,\r\n  parentId,\r\n  selected,\r\n  label,\r\n  hasParentId,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n  childState\r\n}) => {\r\n  const [infoTypeValue, setSubInfoTypeValue] = useState(infoType.value);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  const infoTypeData =\r\n    infoType.children &&\r\n    infoType.children.find((child) => child.typeId === TYPE_INFO_TYPE_ID);\r\n  const infoTypes = infoTypeData ? infoTypeData.instances : [];\r\n\r\n  if (!selected) {\r\n    return (\r\n      <SubInfoTypeWrapper onClick={() => onSelect(infoTypeId)}>\r\n        {infoTypeValue}\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n  const handleSubInfoTypeValueChange = (e) => {\r\n    setSubInfoTypeValue(e.target.value);\r\n  };\r\n\r\n  const handleSubInfoInfoTypeValueSave = async () => {\r\n    setIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: infoType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    setIsEditMode(false);\r\n    setIsSaving(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setIsEditMode(false);\r\n  };\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <SubInfoTypeWrapper>\r\n        <EditInstanceForm\r\n          id={infoTypeId}\r\n          label='SubInfoType Value:'\r\n          value={infoTypeValue}\r\n          onChange={handleSubInfoTypeValueChange}\r\n          onSave={handleSubInfoInfoTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    setIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: infoTypeId,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  const handleCanelDelete = () => {\r\n    setIsDeleteMode(false);\r\n  };\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <SubInfoTypeWrapper selected={selected} isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCanelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n    return (\r\n    <SubInfoTypeWrapper selected={selected}>\r\n      {infoTypeValue}\r\n      \r\n      <Button type='button' onClick={() => setIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type='button' onClick={() => setIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      \r\n    </SubInfoTypeWrapper>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'updateInstance' }),\r\n  graphql(EXECUTE, { name: 'deleteInstance' })\r\n)(SubInfoType);\r\n","import React, { useState, createRef } from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { v4 } from 'uuid';\r\nimport SubInfoTypeCreationForm from '../SubInfoTypeCreationForm';\r\nimport SubChildInfoType from '../SubChildInfoType';\r\n\r\nconst SubInfoChildTypes = ({\r\n  refetchQueries,\r\n  label,\r\n  hasParentId,\r\n  parentId,\r\n  childState,\r\n  subInfoId,\r\n}) => {\r\n  const [subInfoTypeID, setSubInfoTypeID] = useState(null);\r\n  const wrapperRef = createRef();\r\n  const [subInfoTypeData, setInfoTypeData] = useState(childState);\r\n  const [validateCount, setvalidateCount] = useState(0);\r\n\r\n  const handleClick = (e) => {\r\n    const node = wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      setSubInfoTypeID(null);\r\n    }\r\n  };\r\n\r\n  const handleSelect = (id) => {\r\n    setSubInfoTypeID(id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SubInfoTypeCreationForm\r\n        parentId={parentId}\r\n        refetchQueries={refetchQueries}\r\n        /* // ns__custom_start unit: appSpec, comp: SubInfoChildTypes, loc: addedPropsForCreationForm */\r\n        validateSubInfoTypes={validateCount}\r\n        childId={subInfoId}\r\n\r\n        /* // ns__custom_end unit: appSpec, comp: SubInfoChildTypes, loc: addedPropsForCreationForm */\r\n      />\r\n\r\n      {subInfoTypeData.map((infoType) => {\r\n        \r\n        if (subInfoId === infoType.parentId) {\r\n          if (validateCount === 0) setvalidateCount(validateCount + 1);\r\n          return (\r\n            <SubChildInfoType\r\n              key={v4()}\r\n              infoType={infoType}\r\n              infoTypeId={infoType.id}\r\n              selected={infoType.id === subInfoTypeID}\r\n              refetchQueries={refetchQueries}\r\n              label={label}\r\n              hasParentId={hasParentId}\r\n              onSelect={handleSelect}\r\n              parentId={parentId}\r\n              childState={childState}\r\n            />\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubInfoChildTypes;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\nimport { graphql } from '@apollo/react-hoc';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  ADD_HAS_PARENT_FOR_PARENT_ACTION_ID,\r\n  CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_INFO_TYPE_ID,\r\n} from '../../config';\r\n\r\nimport EditInstanceForm from '../../components/EditInstanceForm';\r\nimport DeleteInstanceMenu from '../../components/DeleteInstanceMenu';\r\n\r\n// ns__custom_start unit: appSpec, comp: SubInfoType, loc: addedImports\r\nimport SubInfoChildTypes from '../SubInfoChildTypes';\r\n// ns__custom_end unit: appSpec, comp: SubInfoType, loc: addedImports\r\n\r\nconst SubInfoTypeWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? '1px solid aquamarine' : '1px solid white'};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && 'tomato'};\r\n  cursor: ${selected ? 'auto' : 'pointer'};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst SubInfoType = ({\r\n  infoType,\r\n  infoTypeId,\r\n  parentId,\r\n  selected,\r\n  label,\r\n  hasParentId,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n  childState,\r\n}) => {\r\n  const [infoTypeValue, setSubInfoTypeValue] = useState(infoType.value);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  const infoTypeData =\r\n    infoType.children &&\r\n    infoType.children.find((child) => child.typeId === TYPE_INFO_TYPE_ID);\r\n  const infoTypes = infoTypeData ? infoTypeData.instances : [];\r\n\r\n  if (!selected) {\r\n    return (\r\n      <SubInfoTypeWrapper onClick={() => onSelect(infoTypeId)}>\r\n        {infoTypeValue}\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n  const handleSubInfoTypeValueChange = (e) => {\r\n    setSubInfoTypeValue(e.target.value);\r\n  };\r\n\r\n  const handleSubInfoInfoTypeValueSave = async () => {\r\n    setIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: infoType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    setIsEditMode(false);\r\n    setIsSaving(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setIsEditMode(false);\r\n  };\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <SubInfoTypeWrapper>\r\n        <EditInstanceForm\r\n          id={infoTypeId}\r\n          label='SubInfoType Value:'\r\n          value={infoTypeValue}\r\n          onChange={handleSubInfoTypeValueChange}\r\n          onSave={handleSubInfoTypeValueChange}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    setIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: infoTypeId,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  const handleCanelDelete = () => {\r\n    setIsDeleteMode(false);\r\n  };\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <SubInfoTypeWrapper selected={selected} isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCanelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SubInfoTypeWrapper selected={selected}>\r\n      {infoTypeValue}\r\n      <Button type='button' onClick={() => setIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type='button' onClick={() => setIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <SubInfoChildTypes\r\n        subInfoId={infoTypeId}\r\n        refetchQueries={refetchQueries}\r\n        childState={childState}\r\n        parentId={parentId}\r\n      />\r\n    </SubInfoTypeWrapper>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'updateInstance' }),\r\n  graphql(EXECUTE, { name: 'deleteInstance' })\r\n)(SubInfoType);\r\n","import _ from 'lodash';\r\n\r\nexport default (data) => {\r\n  let parentData = data.map((instance) => ({\r\n    ...instance,\r\n    parentId: instance.children[0].instances[0]\r\n      ? instance.children[0].instances[0].id\r\n      : null,\r\n  }));\r\n\r\n  let hasParentId = _.groupBy(parentData, 'parentId');\r\n\r\n  parentData = parentData.map((instance) => ({\r\n    ...instance,\r\n    _children: hasParentId[instance.id] || [],\r\n  }));\r\n\r\n  let prData = Object.keys(hasParentId);\r\n  let childData = [];\r\n\r\n  for (let id in prData) {\r\n    if (prData[id]) {\r\n      parentData.map((instance) => {\r\n        if (instance.parentId && prData[id] === instance.parentId) {\r\n          childData.push(instance);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return [parentData, childData];\r\n};\r\n","import React, { useState, useEffect, createRef } from 'react';\r\nimport SubInfoTypeCreationForm from '../SubInfoTypeCreationForm';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\nimport { graphql } from '@apollo/react-hoc';\r\nimport { v4 } from 'uuid';\r\n\r\nimport EditInstanceForm from '../../components/EditInstanceForm';\r\nimport DeleteInstanceMenu from '../../components/DeleteInstanceMenu';\r\n\r\nimport {\r\n  UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n} from '../../config';\r\n\r\nimport { InputLabel, makeStyles } from '@material-ui/core';\r\n\r\nconst SubInfoTypeWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n    margin: .5rem 0 .5rem 2.5rem;\r\n    padding: .5em;\r\n    position: relative;\r\n    \r\n    border-radius: 10px;\r\n    \r\n    background-color: ${isDeleting && 'tomato'};\r\n    cursor: ${selected ? 'auto' : 'pointer'};\r\n\r\n    &:before {\r\n      content: \"•\";\r\n      position: absolute;\r\n      top: 41px;\r\n      left: -10px;\r\n      \r\n      width: 1px;\r\n      height: ${(selected && '109%') || '141%'}; \r\n     \r\n    }\r\n  \r\n  \r\n    &:last-child:before {\r\n      top: -11px ;\r\n      height: ${(selected && '133px') || '55px'}; \r\n    }\r\n  \r\n   \r\n  `\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst InfoTypesStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  \r\n  margin: 15px 0 0 7%;\r\n  position: relative;\r\n\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -16px;\r\n    left: -31px;\r\n    border-left: 2px dashed #a2a5b5;\r\n    width: 1px;\r\n    height: ${(selected && '109%') || '115%'}; \r\n   \r\n  }\r\n\r\n \r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-top: 2px dashed #a2a5b5;\r\n    top: ${(selected && '57px') || '44px'};\r\n    left: -30px;\r\n    width: ${(selected && '30px') || '29px'}; \r\n  }\r\n\r\n  &:last-child:before {\r\n    top: -11px ;\r\n    height: ${(selected && '133px') || '55px'}; \r\n  }\r\n`);\r\n\r\nconst TitleWrapper = styled.div`\r\n  background: #d2ecef;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  text-align: initial;\r\n  text-transfor: capitalize;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  titleLabel: {\r\n    fontSize: '.8rem',\r\n    textAlign: 'initial',\r\n  },\r\n}));\r\n// ns__custom_end unit: appSpec, comp: SubInfoType, loc: styling\r\n\r\nconst SubInfoComponent = ({\r\n  infoType,\r\n  instanceId,\r\n  parentId,\r\n  refetchQueries,\r\n  updateInstance,\r\n  deleteInstance,\r\n  onClick,\r\n  parentLabel,\r\n  setParentLabel,\r\n  label\r\n}) => {\r\n  const [infoTypeValue, setSubInfoTypeValue] = useState('');\r\n  const [show, setShow] = useState(false);\r\n  const [currentId, setCurrentId] = useState(null);\r\n  const [selectedInfoTypeId, setselectedInfoTypeId] = useState(null);\r\n  const [subInfoTypeID, setSubInfoTypeID] = useState(null);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [labelParent, setLabel] = useState(label)\r\n  let wrapperRef = createRef();\r\n\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (!currentId) {\r\n      setCurrentId(instanceId);\r\n    }\r\n  }, [isEditMode]);\r\n\r\n  async function handleInfoTypeValueSave() {\r\n    setIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: currentId,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    setIsEditMode(false);\r\n\r\n    setIsSaving(false);\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    setIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: currentId,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  const handleSubInfoTypeValueChange = (e) => {\r\n    setSubInfoTypeValue(e.target.value);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setIsEditMode(false);\r\n  };\r\n\r\n  const handleCanelDelete = () => {\r\n    setIsDeleteMode(false);\r\n  };\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <SubInfoTypeWrapper>\r\n        <EditInstanceForm\r\n          id={currentId}\r\n          label='SubInfoType Value:'\r\n          value={infoTypeValue}\r\n          onChange={handleSubInfoTypeValueChange}\r\n          onSave={handleInfoTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <SubInfoTypeWrapper isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCanelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n  //\r\n\r\n  const checkID = (id, data) => {\r\n    if (!data || !data.length) return null;\r\n    if (id === data[0].parentId) {\r\n      setShow(!show);\r\n    }\r\n  };\r\n\r\n  const handleSelect = (id) => {\r\n    setSubInfoTypeID(id);\r\n  };\r\n\r\n  if (!infoType) return null;\r\n\r\n  return (\r\n    <>\r\n      <div ref={wrapperRef} key={v4()}>\r\n        {infoType.map((instance) => {\r\n          if (instanceId === instance.parentId) {\r\n            return (\r\n              <InfoTypesStyleWrapper key={v4()}>\r\n                <div\r\n                  onClick={() => {\r\n                    checkID(instance.id, instance._children);\r\n                    setselectedInfoTypeId(instance.id);\r\n                    setCurrentId(instance.id);\r\n                  }}\r\n                  onChange={() => handleSubInfoTypeValueChange}\r\n                >\r\n                  <InputLabel className={styles.titleLabel}>\r\n                    Sub Info Type\r\n                  </InputLabel>\r\n                  <TitleWrapper>\r\n                    {' '}\r\n                    {instance.value}\r\n                    <div>\r\n                      <Button\r\n                        type='button'\r\n                        onClick={() => {\r\n                          setIsEditMode(true);\r\n                          setCurrentId(instance.id);\r\n                          setSubInfoTypeValue(instance.value);\r\n                        }}\r\n                      >\r\n                        &#9998;\r\n                      </Button>\r\n                      <Button\r\n                        type='button'\r\n                        onClick={() => {\r\n                          setIsDeleteMode(true);\r\n                          setCurrentId(instance.id);\r\n                          setSubInfoTypeValue(instance.value);\r\n                        }}\r\n                      >\r\n                        &#128465;\r\n                      </Button>\r\n                    </div>\r\n                  </TitleWrapper>\r\n                </div>\r\n                <Child\r\n                  {...instance}\r\n                  show={show}\r\n                  parentId={parentId}\r\n                  instanceId={instance.id}\r\n                  selected={instance.id === currentId}\r\n                  instanceId={instanceId}\r\n                  refetchQueries={refetchQueries}\r\n                  updateInstance={updateInstance}\r\n                  deleteInstance={deleteInstance}\r\n                  onClick={onClick}\r\n                  currentId={currentId}\r\n                  setParentLabel={setParentLabel}\r\n                  parentLabel={parentLabel}\r\n                />\r\n                {instance._children.length ? (\r\n                  <SubInfoComponent\r\n                    data={instance._children}\r\n                    key={v4()}\r\n                    refetchQueries={refetchQueries}\r\n                    updateInstance={updateInstance}\r\n                    deleteInstance={deleteInstance}\r\n                    onClick={(id) => setCurrentId(id)}\r\n                    selected={currentId === selectedInfoTypeId}\r\n                    setLabel={ () => setLabel(instance.value)}\r\n                  />\r\n                ) : null}\r\n              </InfoTypesStyleWrapper>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <SubInfoTypeCreationForm\r\n        key={v4()}\r\n        parentId={parentId}\r\n        childId={currentId}\r\n        refetchQueries={refetchQueries}\r\n        label={labelParent}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Child = ({\r\n  _children,\r\n  instanceId,\r\n  show,\r\n  parentId,\r\n  refetchQueries,\r\n  last,\r\n  updateInstance,\r\n  isEditMode,\r\n  deleteInstance,\r\n  onClick,\r\n  currentId,\r\n  selected,\r\n  label,\r\n  setParentLabel,\r\n  parentLabel\r\n}) => {\r\n  const [currentChildId, setChildCurrentId] = useState(null);\r\n  const [showChild, setshowChild] = useState(!show);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\r\n  const [infoTypeValue, setChildSubInfoTypeValue] = useState(null);\r\n  const [childState, setChildState] = useState([]);\r\n  const [isChildEditMode, setIsChildEditMode] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [labelValue, setLabelValue] = useState(parentLabel);\r\n\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    setChildState(_children);\r\n    if (!currentId) {\r\n      setChildCurrentId(instanceId);\r\n    }\r\n  }, [isEditMode, isChildEditMode, currentId]);\r\n\r\n  async function handleInfoTypeValueSave() {\r\n    setIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: currentId,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    setIsChildEditMode(false);\r\n    setIsSaving(false);\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    setIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: currentId,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  const handleSubInfoTypeValueChange = (e) => {\r\n    setChildSubInfoTypeValue(e.target.value);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setIsChildEditMode(false);\r\n  };\r\n\r\n  const handleCanelDelete = () => {\r\n    setIsDeleteMode(false);\r\n  };\r\n\r\n  if (isChildEditMode) {\r\n    return (\r\n      <SubInfoTypeWrapper>\r\n        <EditInstanceForm\r\n          id={instanceId}\r\n          label='SubInfoType Value:'\r\n          value={infoTypeValue}\r\n          onChange={handleSubInfoTypeValueChange}\r\n          onSave={handleInfoTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <SubInfoTypeWrapper isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCanelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </SubInfoTypeWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {childState.map((instance) => {\r\n        return (\r\n          <React.Fragment key={v4()}>\r\n            {selected && show ? (\r\n              <SubInfoTypeWrapper key={v4()}>\r\n                <div\r\n                  onClick={() => {\r\n                    setChildCurrentId(instance.id);\r\n                    setLabelValue(instance.value);\r\n                    if (!last) {\r\n                      return null;\r\n                    } else {\r\n                      onClick();\r\n                    }\r\n                  }}\r\n                  onChange={handleSubInfoTypeValueChange}\r\n                  key={v4()}\r\n                >\r\n                  <TitleWrapper>\r\n                    {' '}\r\n                    {instance.value}\r\n                    <div>\r\n                      <Button\r\n                        type='button'\r\n                        onClick={() => {\r\n                          setIsChildEditMode(true);\r\n                          setChildCurrentId(instance.id);\r\n                          setChildSubInfoTypeValue(instance.value);\r\n                        }}\r\n                      >\r\n                        &#9998;\r\n                      </Button>\r\n                      <Button\r\n                        type='button'\r\n                        onClick={() => {\r\n                          setIsDeleteMode(true);\r\n                          setChildCurrentId(instance.id);\r\n                          setChildSubInfoTypeValue(instance.value);\r\n                        }}\r\n                      >\r\n                        &#128465;\r\n                      </Button>\r\n                    </div>\r\n                  </TitleWrapper>\r\n                </div>\r\n\r\n                <Child\r\n                  {...instance}\r\n                  show={showChild}\r\n                  last={true}\r\n                  instanceId={instance.id}\r\n                  refetchQueries={refetchQueries}\r\n                  updateInstance={() => updateInstance}\r\n                  deleteInstance={() => deleteInstance}\r\n                  onClick={!last ? onClick : null}\r\n                  currentId={currentId}\r\n                  selected={selected}\r\n                  label={label}\r\n                />\r\n              </SubInfoTypeWrapper>\r\n            ) : null}\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n      {selected && !last ? (\r\n        <SubInfoTypeCreationForm\r\n          parentId={parentId}\r\n          childId={currentId}\r\n          refetchQueries={refetchQueries}\r\n          label={labelValue}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'updateInstance' }),\r\n  graphql(EXECUTE, { name: 'deleteInstance' })\r\n)(SubInfoComponent, Child);\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: InfoType\r\n\r\n// ns__custom_start unit: appSpec, comp: InfoType, loc: beforeImports\r\n'use strict';\r\n// ns__custom_end unit: appSpec, comp: InfoType, loc: beforeImports\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\nimport { graphql } from '@apollo/react-hoc';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n} from '../../../config';\r\n\r\nimport EditInstanceForm from '../../EditInstanceForm';\r\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\r\n\r\n// ns__custom_start unit: appSpec, comp: InfoType, loc: addedImports\r\nimport SubInfoTypes from '../../../custom/SubInfoTypes';\r\nimport InfoTypeCreationForm from '../InfoTypeCreationForm';\r\nimport { v4 } from 'uuid';\r\nimport { useContext, useEffect } from 'react';\r\nimport { Context as UnitDataContext } from '../../../custom/UnitDataContext';\r\nimport getChildData from '../../../custom/getChildData';\r\nimport SubInfoComponent from '../../../custom/SubInfoTypesRecursive';\r\nimport { InputLabel, makeStyles } from '@material-ui/core';\r\n\r\n// ns__custom_end unit: appSpec, comp: InfoType, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: InfoType, loc: styling\r\n// add styling here\r\nconst InfoTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) =>`\r\n  margin: 2rem 0 .5rem 1rem;\r\n  padding: ${selected ? '0' : '1.5rem'};\r\n  \r\n  border-radius: 10px;\r\n  \r\n  background-color: ${\r\n    (isDeleting && 'tomato') || (selected && 'white') || '#D2ECEF'\r\n  };\r\n  cursor: ${selected ? 'auto' : 'pointer'};\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -2rem;\r\n    left: -2rem;\r\n    border-left: 2px dashed #a2a5b5;\r\n    width: 1px;\r\n    height: ${(selected && '116%') || '140%'}; \r\n  }\r\n\r\n \r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-top: 2px dashed #a2a5b5;\r\n    top: ${(selected && '62px') || '37px'};\r\n    left: -30px;\r\n    width: ${(selected && '30px') || '29px'}; \r\n  }\r\n\r\n  &:last-child:before {\r\n    top: -32px ;\r\n    height: ${(selected && '94px') || '71px'}; \r\n  }\r\n  \r\n`\r\n);\r\n\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) =>props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  background: #D2ECEF;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  text-align: initial;\r\n  text-transfor: capitalize;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  titleLabel: {\r\n      fontSize: '.8rem',\r\n      textAlign: 'initial',\r\n\r\n  }\r\n}))\r\n\r\n// ns__custom_end unit: appSpec, comp: InfoType, loc: styling\r\n\r\nfunction InfoType({\r\n  infoType,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n  // ns__custom_start unit: appSpec, comp: InfoType, loc: addedProps\r\n  hasParentId,\r\n  childState,\r\n  // ns__custom_end unit: appSpec, comp: InfoType, loc: addedProps\r\n}) {\r\n  const [infoTypeValue, updateInfoTypeValue] = useState(infoType.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  // ns__custom_start unit: appSpec, comp: InfoType, loc: beginning\r\n  const [parentState, setParentState] = useState([]);\r\n  const [selectSubInfoId, setSubInfoId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const [parentData] = getChildData(childState);\r\n    setParentState(parentData);\r\n  }, [infoType]);\r\n  const handleSelect = (id) => setSubInfoId(id);\r\n  const styles = useStyles();\r\n  // ns__custom_end unit: appSpec, comp: InfoType, loc: beginning\r\n\r\n  // ns__custom_start unit: appSpec, comp: InfoType, loc: beforeReturn\r\n  // ns__custom_end unit: appSpec, comp: InfoType, loc: beforeReturn\r\n\r\n  if (!selected) {\r\n    return (\r\n      <InfoTypeStyleWrapper onClick={() =>onSelect(infoType.id)}>\r\n        {infoTypeValue}\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  function handleInfoTypeValueChange(e) {\r\n    updateInfoTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleInfoTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: infoTypeValue,\r\n          instanceId: infoType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={infoType.id}\r\n          label='InfoType Value:'\r\n          value={infoTypeValue}\r\n          onChange={handleInfoTypeValueChange}\r\n          onSave={handleInfoTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: infoType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <InfoTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {infoTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </InfoTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <InfoTypeStyleWrapper selected={selected}>\r\n       {/* // ns__custom_start unit: appSpec, comp: InfoType, loc: insideReturn */}\r\n       <InputLabel className={styles.titleLabel}>Info Type</InputLabel>\r\n      <TitleWrapper>{infoTypeValue}\r\n          <div>\r\n          <Button type='button' onClick={() =>updateIsEditMode(true)}>\r\n            &#9998;\r\n          </Button>\r\n          <Button type='button' onClick={() =>updateIsDeleteMode(true)}>\r\n            &#128465;\r\n          </Button>\r\n          </div>\r\n      </TitleWrapper>\r\n       {/* // ns__custom_end unit: appSpec, comp: InfoType, loc: insideReturn */}\r\n      \r\n\r\n      {/* // ns__custom_start unit: appSpec, comp: InfoType, loc: renderEnding */}\r\n      <SubInfoComponent\r\n        infoType={parentState}\r\n        instanceId={infoType.id}\r\n        parentId={parentId}\r\n        refetchQueries={refetchQueries}\r\n        onSelect={handleSelect}\r\n        selectSubInfoId={selectSubInfoId}\r\n        label={infoTypeValue}\r\n      />\r\n\r\n      {/* <SubInfoTypes\r\n        subInfoTypes={infoType._children}\r\n        infoTypeId={infoType.id}\r\n        refetchQueries={refetchQueries}\r\n        label='Sub Info Type'\r\n        hasParentId={hasParentId}\r\n        parentId={parentId}\r\n        childState={childState}\r\n      /> */}\r\n\r\n      {/* // ns__custom_end unit: appSpec, comp: InfoType, loc: renderEnding */}\r\n    </InfoTypeStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'updateInstance' }),\r\n  graphql(EXECUTE, { name: 'deleteInstance' })\r\n)(InfoType);\r\n\r\nInfoType.propTypes = {\r\n  app: PropTypes.object,\r\n  parentId: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  updateInstance: PropTypes.func,\r\n  deleteInstance: PropTypes.func,\r\n  refetchQueries: PropTypes.array,\r\n  onSelect: PropTypes.func,\r\n  app: PropTypes.shape({\r\n    children: PropTypes.array,\r\n    id: PropTypes.string,\r\n  }),\r\n  infoType: PropTypes.shape({\r\n    value: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  // ns__custom_start unit: appSpec, comp: InfoType, loc: addedPropTypes\r\n  // ns__custom_end unit: appSpec, comp: InfoType, loc: addedPropTypes\r\n};\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: InfoTypes\r\n\r\n// ns__custom_start unit: appSpec, comp: InfoTypes, loc: beforeImports\r\n'use strict';\r\n// ns__custom_end unit: appSpec, comp: InfoTypes, loc: beforeImports\r\n\r\nimport React, { Component, createRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { v4 } from 'uuid';\r\n\r\nimport InfoTypeCreationForm from '../InfoTypeCreationForm';\r\nimport InfoType from '../InfoType';\r\nimport _ from 'lodash';\r\n\r\n// ns__custom_start unit: appSpec, comp: InfoTypes, loc: addedImports\r\nimport getChildData from '../../../custom/getChildData';\r\nimport { Context as UnitDataContext } from '../../../custom/UnitDataContext';\r\nimport SubInfoTypeCreationForm from '../../../custom/SubInfoTypeCreationForm';\r\n\r\n// ns__custom_end unit: appSpec, comp: InfoTypes, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nconst InfoTypesStyleWrapper = styled.div`\r\n  margin: 0 0 0 7%`;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// ns__custom_end unit: appSpec, comp: InfoTypes, loc: styling\r\n\r\nclass InfoTypes extends Component {\r\n  // ns__custom_start unit: appSpec, comp: InfoTypes, loc: beginning\r\n  static contextType = UnitDataContext;\r\n  // ns__custom_end unit: appSpec, comp: InfoTypes, loc: beginning\r\n  state = {\r\n    selectedInfoTypeId: null,\r\n    // ns__custom_start unit: appSpec, comp: InfoTypes, loc: addedState\r\n    childState: [],\r\n    parentState: [],\r\n    subInfoTypeValueCount: 0\r\n    // ns__custom_end unit: appSpec, comp: InfoTypes, loc: addedState\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClick);\r\n    // ns__custom_start unit: appSpec, comp: InfoTypes, loc: componentDidMount\r\n    const { childState, parentState } = this.state;\r\n    const { infoTypes } = this.props;\r\n    \r\n\r\n    if (!childState.length || !parentState.length) {\r\n      let [parentData, childData] = getChildData(infoTypes);\r\n\r\n      this.setState({\r\n        childState: childData,\r\n        parentState: parentData,\r\n        subInfoTypeValueCount: 0\r\n      });\r\n    }\r\n\r\n    // ns__custom_end unit: appSpec, comp: InfoTypes, loc: componentDidMount\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClick);\r\n    // ns__custom_start unit: appSpec, comp: InfoTypes, loc: componentWillUnmount\r\n    // ns__custom_end unit: appSpec, comp: InfoTypes, loc: componentWillUnmount\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedInfoTypeId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedInfoTypeId: id });\r\n\r\n   /* ns__custom_start unit: appSpec, comp: InfoTypes, loc: beforeRender */\r\n   onChangeHelper = value => {\r\n    this.setState({subInfoTypeValueCount: value.length})}\r\n    \r\n    /* ns__custom_end unit: appSpec, comp: InfoTypes, loc: beforeRender */\r\n\r\n  render() {\r\n    const { screenId, infoTypes, refetchQueries, onUpdate } = this.props;\r\n    const { selectedInfoTypeId } = this.state;\r\n\r\n    /* ns__custom_start unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    const {label} =this.props;\r\n    let validateInfoTypes = infoTypes.length;\r\n    \r\n    const { childState, parentState, subInfoTypeValueCount } = this.state;\r\n    const [data] = getChildData(parentState);\r\n\r\n    /* ns__custom_end unit: appSpec, comp: InfoTypes, loc: renderBeginning */\r\n    // ns__start_section return\r\n    return (\r\n      <>\r\n      <InfoTypesStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\r\n        \r\n        {/* ns__custom_start unit: appSpec, comp: InfoTypes, loc: addedValidation */}\r\n        {parentState.map((infoType) => {\r\n          if (infoType.parentId) return;\r\n        {/* ns__custom_end unit: appSpec, comp: InfoTypes, loc: addedValidation */}\r\n          return (\r\n            <InfoType\r\n              key={v4()}\r\n              infoType={infoType}\r\n              selected={infoType.id === selectedInfoTypeId}\r\n              onUpdate={onUpdate}\r\n              parentId={screenId}\r\n              refetchQueries={refetchQueries}\r\n              onSelect={this.handleSelect}\r\n              /* ns__custom_start unit: appSpec, comp: InfoTypes, loc: addedPropsForChildren */\r\n              hasParentId={infoType.parentId}\r\n              childState={childState}\r\n              onChange={this.onChangeHelper}\r\n              /* ns__custom_end unit: appSpec, comp: InfoTypes, loc: addedPropsForChildren */\r\n            />\r\n          );\r\n        })}\r\n      \r\n        {/* ns__custom_start unit: appSpec, comp: InfoTypes, loc: renderEnding */}\r\n        {/* ns__custom_end unit: appSpec, comp: InfoTypes, loc: renderEnding */}\r\n      </InfoTypesStyleWrapper>\r\n      <InfoTypeCreationForm\r\n          parentId={screenId}\r\n          refetchQueries={refetchQueries}\r\n          // ns__custom_start unit: appSpec, comp: InfoTypes, loc: addedPropsForCreationForm\r\n          label={label}\r\n          validateInfoTypes={validateInfoTypes}\r\n          onChange={this.onChangeHelper}\r\n          /* ns__custom_start unit: appSpec, comp: InfoTypes, loc: addedPropsForCreationForm */\r\n          /* ns__custom_end unit: appSpec, comp: InfoTypes, loc: addedPropsForCreationForm */\r\n        />\r\n        {console.log(`subInfoTypeValueCount`, subInfoTypeValueCount)}\r\n         {subInfoTypeValueCount >= 3 ? (\r\n          <SubInfoTypeCreationForm disabled={true} validateSubInfoTypes={0} textLabel={`What is the sub Info Type fo...`} subInfoTypeValueCount={subInfoTypeValueCount} label={label}/>\r\n        ) : null}\r\n      \r\n      </>\r\n    );\r\n    // ns__end_section return\r\n  }\r\n}\r\n\r\nexport default InfoTypes;\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: Screen\r\n\r\n// ns__custom_start unit: appSpec, comp: Screen, loc: beforeImports\r\n// ns__custom_end unit: appSpec, comp: Screen, loc: beforeImports\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\nimport { graphql } from '@apollo/react-hoc';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_INFO_TYPE_ID,\r\n} from '../../../config';\r\n\r\nimport EditInstanceForm from '../../EditInstanceForm';\r\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\r\n\r\nimport InfoTypes from '../InfoTypes';\r\n\r\n// ns__custom_start unit: appSpec, comp: Screen, loc: addedImports\r\nimport { InputLabel, makeStyles } from '@material-ui/core';\r\n// ns__custom_end unit: appSpec, comp: Screen, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: Screen, loc: styling\r\n// add styling here\r\nconst ScreenStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2rem 0 .5rem 1rem;\r\n  padding: ${selected ? '0' : '1.5rem'};\r\n  \r\n  border-radius: 10px;\r\n  \r\n  background-color: ${\r\n    (isDeleting && 'tomato') || (selected && 'white') || '#D2ECEF'\r\n  };\r\n  cursor: ${selected ? 'auto' : 'pointer'};\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -31px;\r\n    left: -31px;\r\n    border-left: 2px dashed #a2a5b5;\r\n    width: 1px;\r\n    height: ${(selected && '109%') || '141%'}; \r\n   \r\n  }\r\n\r\n \r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-top: 2px dashed #a2a5b5;\r\n    top: ${(selected && '57px') || '44px'};\r\n    left: -30px;\r\n    width: ${(selected && '30px') || '29px'}; \r\n  }\r\n\r\n  &:last-child:before {\r\n    top: -33px ;\r\n    height: ${(selected && '90px') || '77px'}; \r\n  }\r\n   \r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  background: #d2ecef;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  text-align: initial;\r\n  text-transfor: capitalize;\r\n  margin-top: 8px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  titleLabel: {\r\n    fontSize: '.8rem',\r\n    textAlign: 'initial',\r\n  },\r\n}));\r\n// ns__custom_end unit: appSpec, comp: Screen, loc: styling\r\n\r\nfunction Screen({\r\n  screen,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n  // ns__custom_start unit: appSpec, comp: Screen, loc: addedProps\r\n  // ns__custom_end unit: appSpec, comp: Screen, loc: addedProps\r\n}) {\r\n  const [screenValue, updateScreenValue] = useState(screen.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  // ns__custom_start unit: appSpec, comp: Screen, loc: beginning\r\n  const styles = useStyles();\r\n  // ns__custom_end unit: appSpec, comp: Screen, loc: beginning\r\n\r\n  const infoTypeData =\r\n    screen.children &&\r\n    screen.children.find((child) => child.typeId === TYPE_INFO_TYPE_ID);\r\n  const infoTypes = infoTypeData ? infoTypeData.instances : [];\r\n\r\n  // ns__custom_start unit: appSpec, comp: Screen, loc: beforeReturn\r\n  // ns__custom_end unit: appSpec, comp: Screen, loc: beforeReturn\r\n\r\n  if (!selected) {\r\n    return (\r\n      <ScreenStyleWrapper onClick={() => onSelect(screen.id)}>\r\n        {screenValue}\r\n      </ScreenStyleWrapper>\r\n    );\r\n  }\r\n\r\n  function handleScreenValueChange(e) {\r\n    updateScreenValue(e.target.value);\r\n  }\r\n\r\n  async function handleScreenValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: screenValue,\r\n          instanceId: screen.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <ScreenStyleWrapper>\r\n        <EditInstanceForm\r\n          id={screen.id}\r\n          label='Screen Value:'\r\n          value={screenValue}\r\n          onChange={handleScreenValueChange}\r\n          onSave={handleScreenValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </ScreenStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: screen.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <ScreenStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {screenValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </ScreenStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScreenStyleWrapper selected={selected}>\r\n      {/* ns__custom_start unit: appSpec, comp: Screen, loc: insideReturn */}\r\n      <InputLabel className={styles.titleLabel}>Screen</InputLabel>\r\n      <TitleWrapper>\r\n        {screenValue}\r\n        <div>\r\n          <Button type='button' onClick={() => updateIsEditMode(true)}>\r\n          &#9998;\r\n          </Button>\r\n          <Button type='button' onClick={() => updateIsDeleteMode(true)}>\r\n          &#128465;\r\n          </Button>\r\n        </div>\r\n      </TitleWrapper>\r\n      {/* ns__custom_end unit: appSpec, comp: Screen, loc: insideReturn */}\r\n      \r\n\r\n      <InfoTypes\r\n        infoTypes={infoTypes}\r\n        screenId={screen.id}\r\n        label={screenValue}\r\n        refetchQueries={refetchQueries}\r\n      />\r\n\r\n      {/* ns__custom_start unit: appSpec, comp: Screen, loc: renderEnding */}\r\n      {/* ns__custom_end unit: appSpec, comp: Screen, loc: renderEnding */}\r\n    </ScreenStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'updateInstance' }),\r\n  graphql(EXECUTE, { name: 'deleteInstance' })\r\n)(Screen);\r\n\r\nScreen.propTypes = {\r\n  parentId: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  updateInstance: PropTypes.func,\r\n  deleteInstance: PropTypes.func,\r\n  refetchQueries: PropTypes.array,\r\n  onSelect: PropTypes.func,\r\n  app: PropTypes.shape({\r\n    children: PropTypes.array,\r\n    id: PropTypes.string,\r\n  }),\r\n  screen: PropTypes.shape({\r\n    value: PropTypes.string,\r\n    id: PropTypes.string,\r\n    children: PropTypes.array,\r\n  }),\r\n  // ns__custom_start unit: appSpec, comp: Screen, loc: addedPropTypes\r\n  // ns__custom_end unit: appSpec, comp: Screen, loc: addedPropTypes\r\n};\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: Screens\r\n\r\n// ns__custom_start unit: appSpec, comp: Screens, loc: beforeImports\r\n// ns__custom_end unit: appSpec, comp: Screens, loc: beforeImports\r\n\r\nimport React, { Component, createRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { v4 } from 'uuid';\r\n\r\nimport ScreenCreationForm from '../ScreenCreationForm';\r\nimport Screen from '../Screen';\r\nimport InfoTypeCreationForm from '../InfoTypeCreationForm';\r\n\r\n// ns__custom_start unit: appSpec, comp: Screens, loc: styling\r\n\r\nconst ScreensStyleWrapper = styled.div`\r\n  margin: 0 0 0 7%;\r\n\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// ns__custom_end unit: appSpec, comp: Screens, loc: styling\r\n\r\nclass Screens extends Component {\r\n  state = {\r\n    selectedScreenId: null,\r\n    // ns__custom_start unit: appSpec, comp: Screens, loc: addedState\r\n    infoTypeValueCount: 0,\r\n    // ns__custom_end unit: appSpec, comp: Screens, loc: addedState\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedScreenId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => {\r\n    console.log(`id screens`, id);\r\n\r\n    this.setState({ selectedScreenId: id });\r\n  };\r\n\r\n  // ns__custom_start unit: appSpec, comp: UserTypes, loc: beforeRender\r\n  onChangeHelper = (value) => {\r\n    this.setState({ infoTypeValueCount: value.length });\r\n  };\r\n  // ns__custom_end unit: appSpec, comp: UserTypes, loc: beforeRender\r\n\r\n  render() {\r\n    const { userTypeId, screens, refetchQueries, onUpdate  } = this.props;\r\n    const { selectedScreenId } = this.state;\r\n\r\n\r\n    // ns__custom_start unit: appSpec, comp: UserTypes, loc: beginning\r\n    const {label} = this.props;\r\n    const validateScreens = screens.length;\r\n    const { infoTypeValueCount } = this.state;\r\n    \r\n    // ns__custom_end unit: appSpec, comp: UserTypes, loc: beginning\r\n\r\n    // ns__custom_start unit: appSpec, comp: Screens, loc: renderBeginning\r\n    return (\r\n      <>\r\n        <ScreensStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\r\n          {screens.map((screen) => (\r\n            <Screen\r\n              key={v4()}\r\n              screen={screen}\r\n              selected={screen.id === selectedScreenId}\r\n              onUpdate={onUpdate}\r\n              parentId={userTypeId}\r\n              refetchQueries={refetchQueries}\r\n              onSelect={this.handleSelect}\r\n            />\r\n          ))}\r\n          {/* ns__custom_start unit: appSpec, comp: Screens, loc: renderEnding */}\r\n          {/* ns__custom_end unit: appSpec, comp: Screens, loc: renderEnding */}\r\n        </ScreensStyleWrapper>\r\n        <ScreenCreationForm\r\n          parentId={userTypeId}\r\n          refetchQueries={refetchQueries}\r\n          /* ns__custom_start unit: appSpec, comp: Screens, loc: addedProps */\r\n          validateScreens={validateScreens}\r\n          onChange={this.onChangeHelper}\r\n          label={label}\r\n          /* ns__custom_end unit: appSpec, comp: Screens, loc: addedProps */\r\n        />\r\n        \r\n        {infoTypeValueCount >= 3 ? (\r\n          <InfoTypeCreationForm disabled={true} validateInfoTypes={0} textLabel={`What is the Info Type fo...`} infoTypeValueCount={infoTypeValueCount} label={label}/>\r\n        ) : null}\r\n      </>\r\n    );\r\n    // ns__custom_end unit: appSpec, comp: Screens, loc: renderBeginning\r\n\r\n    // return (\r\n    //   <>\r\n    //     <ScreensStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\r\n    //       {screens.map((screen) => (\r\n    //         <Screen\r\n    //           key={v4()}\r\n    //           screen={screen}\r\n    //           selected={screen.id === selectedScreenId}\r\n    //           onUpdate={onUpdate}\r\n    //           parentId={userTypeId}\r\n    //           refetchQueries={refetchQueries}\r\n    //           onSelect={this.handleSelect}\r\n    //         />\r\n    //       ))}\r\n    //       {/* ns__custom_start unit: appSpec, comp: Screens, loc: renderEnding */}\r\n    //       {/* ns__custom_end unit: appSpec, comp: Screens, loc: renderEnding */}\r\n    //     </ScreensStyleWrapper>\r\n    //     <ScreenCreationForm\r\n    //       parentId={userTypeId}\r\n    //       refetchQueries={refetchQueries}\r\n    //       /* ns__custom_start unit: appSpec, comp: Screens, loc: addedProps */\r\n    //       validateScreens={validateScreens}\r\n    //       /* ns__custom_end unit: appSpec, comp: Screens, loc: addedProps */\r\n    //     />\r\n    //   </>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default Screens;\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: UserType\r\n\r\n// ns__custom_start unit: appSpec, comp: UserType, loc: beforeImports\r\n// ns__custom_end unit: appSpec, comp: UserType, loc: beforeImports\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\nimport { graphql } from '@apollo/react-hoc';\r\n\r\nimport {\r\n  UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_SCREEN_ID,\r\n} from '../../../config';\r\n\r\nimport EditInstanceForm from '../../EditInstanceForm';\r\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\r\n\r\nimport Screens from '../Screens';\r\n\r\n// ns__custom_start unit: appSpec, comp: UserType, loc: addedImports\r\nimport { InputLabel, makeStyles } from '@material-ui/core';\r\n\r\n// ns__custom_end unit: appSpec, comp: UserType, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: UserType, loc: styling\r\n// add styling here\r\nconst UserTypeStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2rem 0 2rem 1rem;\r\n  \r\n  padding: ${selected ? '12px' : '1.5em'};\r\n  \r\n  border-radius: 10px;\r\n  border: 1px solid black;\r\n  background-color: ${\r\n    (isDeleting && 'tomato') || (selected && 'white') || '#D2ECEF'\r\n  };\r\n  cursor: ${selected ? 'auto' : 'pointer'};\r\n  position: relative;\r\n  width: inherit; \r\n\r\n  \r\n  \r\n`\r\n);\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  background: #d2ecef;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  text-align: initial;\r\n  text-transfor: capitalize;\r\n  margin-top: 8px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  titleLabel: {\r\n    fontSize: '.8rem',\r\n    textAlign: 'initial',\r\n  },\r\n}));\r\n\r\nUserTypeStyleWrapper.defaultProps = {\r\n  'data-id': 'userType__wrapper',\r\n};\r\n\r\nButton.defaultProps = {\r\n  'data-id': 'userType__button',\r\n};\r\n\r\nTitleWrapper.defaultProps = {\r\n  'data-id': 'userType__titleWrapper',\r\n};\r\n\r\n// ns__custom_end unit: appSpec, comp: UserType, loc: styling\r\n\r\nfunction UserType({\r\n  userType,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [userTypeValue, updateUserTypeValue] = useState(userType.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n\r\n  const screenData =\r\n    userType.children &&\r\n    userType.children.find((child) => child.typeId === TYPE_SCREEN_ID);\r\n  const screens = screenData ? screenData.instances : [];\r\n\r\n  // ns__custom_start unit: appSpec, comp: UserType, loc: beginning\r\n  const styles = useStyles();\r\n  // ns__custom_end unit: appSpec, comp: UserType, loc: beginning\r\n\r\n  if (!selected) {\r\n    return (\r\n      <UserTypeStyleWrapper onClick={() => onSelect(userType.id)}>\r\n        {userTypeValue}\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  function handleUserTypeValueChange(e) {\r\n    updateUserTypeValue(e.target.value);\r\n  }\r\n\r\n  async function handleUserTypeValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: userTypeValue,\r\n          instanceId: userType.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <UserTypeStyleWrapper>\r\n        <EditInstanceForm\r\n          id={userType.id}\r\n          label='UserType Value:'\r\n          value={userTypeValue}\r\n          onChange={handleUserTypeValueChange}\r\n          onSave={handleUserTypeValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: userType.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <UserTypeStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {userTypeValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </UserTypeStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <UserTypeStyleWrapper selected={selected}>\r\n      {/* // ns__custom_end unit: appSpec, comp: UserType, loc: insideReturn */}\r\n      <InputLabel className={styles.titleLabel}>User Type</InputLabel>\r\n      <TitleWrapper>\r\n        {userTypeValue}\r\n        <div>\r\n        <Button type='button' onClick={() => updateIsEditMode(true)}>\r\n          &#9998;\r\n        </Button>\r\n        <Button type='button' onClick={() => updateIsDeleteMode(true)}>\r\n          &#128465;\r\n        </Button>\r\n        </div>\r\n      </TitleWrapper>\r\n      {/* // ns__custom_end unit: appSpec, comp: UserType, loc: insideReturn */}\r\n\r\n      <Screens\r\n        screens={screens}\r\n        userTypeId={userType.id}\r\n        label={userTypeValue}\r\n        refetchQueries={refetchQueries}\r\n      />\r\n    </UserTypeStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'updateInstance' }),\r\n  graphql(EXECUTE, { name: 'deleteInstance' })\r\n)(UserType);\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: UserTypes\r\n\r\n// ns__custom_start unit: appSpec, comp: UserTypes, loc: beforeImports\r\n// ns__custom_end unit: appSpec, comp: UserTypes, loc: beforeImports\r\n\r\nimport React, { Component, createRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { v4 } from 'uuid';\r\n\r\nimport UserTypeCreationForm from '../UserTypeCreationForm';\r\nimport UserType from '../UserType';\r\nimport ScreenCreationForm from '../ScreenCreationForm';\r\n\r\n// ns__custom_start unit: appSpec, comp: UserTypes, loc: styling\r\n\r\nconst UserTypesStyleWrapper = styled.div`\r\n\r\n\r\npadding-right: .5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nUserTypesStyleWrapper.defaultProps = {\r\n  \"data-id\": \"userTypes__wrapper\"\r\n}\r\n// ns__custom_end unit: appSpec, comp: UserTypes, loc: styling\r\n\r\nclass UserTypes extends Component {\r\n  state = {\r\n    selectedUserTypeId: null,\r\n    userTypeCreationCount: 0\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClick);\r\n  }\r\n\r\n  handleClick = e => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (\r\n      node &&\r\n      node !== e.target &&\r\n      !node.contains(e.target)\r\n    ) {\r\n      this.setState({ selectedUserTypeId: null });\r\n    }\r\n  }\r\n\r\n  handleSelect = id => this.setState({ selectedUserTypeId: id });\r\n\r\n  // ns__custom_start unit: appSpec, comp: UserTypes, loc: beforeRender\r\n  onChangeHelper = value => {\r\n    this.setState({userTypeCreationCount: value.length})}\r\n  // ns__custom_end unit: appSpec, comp: UserTypes, loc: beforeRender\r\n\r\n  render () {\r\n    const { appId, userTypes, refetchQueries, onUpdate  } = this.props;\r\n    const { selectedUserTypeId } = this.state;\r\n\r\n\r\n    // ns__custom_start unit: appSpec, comp: UserTypes, loc: beforeReturn\r\n    const {label} =this.props;\r\n    const validateUserTypes = userTypes.length\r\n    const {userTypeCreationCount} = this.state;\r\n    // ns__custom_end unit: appSpec, comp: UserTypes, loc: beforeReturn\r\n\r\n    // ns__custom_start unit: appSpec, comp: UserTypes, loc: renderBeginning\r\n    // ns__custom_end unit: appSpec, comp: UserTypes, loc: renderBeginning\r\n\r\n    return (\r\n      <>\r\n      <UserTypesStyleWrapper ref={this.wrapperRef} onClick={this.handleClick}>\r\n        {/* <UserTypeCreationForm\r\n          parentId={ appId }\r\n          refetchQueries={refetchQueries}\r\n          // ns__custom_start unit: appSpec, comp: UserTypes, loc: addedPropsForCreationForm \r\n          validateUserTypes={validateUserTypes}\r\n          // ns__custom_start unit: appSpec, comp: UserTypes, loc: addedPropsForCreationForm \r\n        /> */}\r\n\r\n        { userTypes.map(userType => (\r\n          <UserType\r\n            key={v4()}\r\n            userType={ userType }\r\n            selected={ userType.id === selectedUserTypeId }\r\n            onUpdate={onUpdate}\r\n            parentId={ appId }\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n          />\r\n        )) }\r\n  {/* ns__custom_start unit: appSpec, comp: UserTypes, loc: renderEnding */}\r\n \r\n  {/* ns__custom_end unit: appSpec, comp: UserTypes, loc: renderEnding */}\r\n\r\n  </UserTypesStyleWrapper>\r\n  <UserTypeCreationForm\r\n          parentId={ appId }\r\n          refetchQueries={refetchQueries}\r\n          // ns__custom_start unit: appSpec, comp: UserTypes, loc: addedPropsForCreationForm \r\n          validateUserTypes={validateUserTypes}\r\n          onChange={this.onChangeHelper}\r\n          label={label}\r\n          // ns__custom_start unit: appSpec, comp: UserTypes, loc: addedPropsForCreationForm \r\n        />\r\n   {userTypeCreationCount >= 3 ? <ScreenCreationForm disabled={true} validateScreens={0}\r\n   textLabel={`What is the Screen name fo...`} userTypeCreationCount={userTypeCreationCount} label={label}\r\n   /> : null}   \r\n  </>\r\n  )\r\n  }\r\n}\r\n\r\nexport default UserTypes;\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: DescriptionCreationForm\r\n\r\n// ns__custom_start unit: appSpec, comp: DescriptionCreationForm, loc: beforeImports\r\n\r\n\r\n\r\n// ns__custom_end unit: appSpec, comp: DescriptionCreationForm, loc: beforeImports\r\nimport React, { useState } from 'react';\r\nimport { graphql } from '@apollo/react-hoc';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID } from '../../../config';\r\n\r\n// ns__custom_start unit: appSpec, comp: DescriptionCreationForm, loc: addedImports\r\n// ns__custom_end unit: appSpec, comp: DescriptionCreationForm, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: DescriptionCreationForm, loc: styling\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n`;\r\n// ns__custom_end unit: appSpec, comp: DescriptionCreationForm, loc: styling\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction DescriptionCreationForm({\r\n  parentId,\r\n  createDescription,\r\n  refetchQueries,\r\n  // ns__custom_start unit: appSpec, comp: DescriptionCreationForm, loc: addedPropsForCreationForm\r\n  // ns__custom_end unit: appSpec, comp: DescriptionCreationForm, loc: addedPropsForCreationForm\r\n}) {\r\n  const [descriptionValue, updateDescriptionValue] = useState('');\r\n  const [loading, updateLoading] = useState(false);\r\n  // ns__custom_start unit: appSpec, comp: DescriptionCreationForm, loc: beginning\r\n  // ns__custom_end unit: appSpec, comp: DescriptionCreationForm, loc: beginning\r\n\r\n  function handleChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!descriptionValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n    const createDescriptionResponse = await createDescription({\r\n      variables: {\r\n        actionId: CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: parentId,\r\n          value: descriptionValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateDescriptionValue('');\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  // ns__custom_start unit: appSpec, comp: DescriptionCreationForm, loc: beforeReturn\r\n  // ns__custom_end unit: appSpec, comp: DescriptionCreationForm, loc: beforeReturn\r\n\r\n  // ns__start_section return\r\n  return (\r\n    <Form>\r\n      <label htmlFor='description-value'>\r\n        Description:\r\n        <input\r\n          id='description-value'\r\n          type='text'\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={descriptionValue}\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type='submit' disabled={loading} onClick={handleSubmit}>\r\n        {loading ? 'Creating Description...' : 'Create Description'}\r\n      </Button>\r\n    </Form>\r\n  );\r\n  // ns__end_section return\r\n}\r\n\r\nexport default compose(graphql(EXECUTE, { name: 'createDescription' }))(\r\n  DescriptionCreationForm\r\n);\r\n\r\nDescriptionCreationForm.propTypes = {\r\n  parentId: PropTypes.string,\r\n  refetchQueries: PropTypes.array,\r\n  createDescription: PropTypes.func,\r\n  // ns__custom_start unit: appSpec, comp: DescriptionCreationForm, loc: addedPropTypes\r\n  // ns__custom_end unit: appSpec, comp: DescriptionCreationForm, loc: addedPropTypes\r\n};\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: Description\r\n\r\n// ns__custom_start unit: appSpec, comp: Description, loc: beforeImports\r\n'use strict';\r\n// ns__custom_end unit: appSpec, comp: Description, loc: beforeImports\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\nimport { graphql } from '@apollo/react-hoc';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n} from '../../../config';\r\n\r\nimport EditInstanceForm from '../../EditInstanceForm';\r\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\r\n\r\n// ns__custom_start unit: appSpec, comp: Description, loc: addedImports\r\n// ns__custom_end unit: appSpec, comp: Description, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: Description, loc: styling\r\n// add styling here\r\nconst DescriptionStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) =>`\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  border: ${selected ? '1px solid aquamarine' : '1px solid white'};\r\n  border-radius: 10px;\r\n  box-shadow: 5px 5px 10px #888888;\r\n  background-color: ${isDeleting && 'tomato'};\r\n  cursor: ${selected ? 'auto' : 'pointer'};\r\n\r\n  &:hover {\r\n    border: 1px solid aquamarine;\r\n  }\r\n`\r\n);\r\n// ns__custom_end unit: appSpec, comp: Description, loc: styling\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\nfunction Description({\r\n  description,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n  // ns__custom_start unit: appSpec, comp: Description, loc: addedProps\r\n  // ns__custom_end unit: appSpec, comp: Description, loc: addedProps\r\n}) {\r\n  const [descriptionValue, updateDescriptionValue] = useState(\r\n    description.value\r\n  );\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n  // ns__custom_start unit: appSpec, comp: Description, loc: beginning\r\n  // ns__custom_end unit: appSpec, comp: Description, loc: beginning\r\n\r\n  // ns__custom_start unit: appSpec, comp: Description, loc: beforeReturn\r\n  // ns__custom_end unit: appSpec, comp: Description, loc: beforeReturn\r\n\r\n  if (!selected) {\r\n    return (\r\n      <DescriptionStyleWrapper onClick={() =>onSelect(description.id)}>\r\n        {descriptionValue}\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  function handleDescriptionValueChange(e) {\r\n    updateDescriptionValue(e.target.value);\r\n  }\r\n\r\n  async function handleDescriptionValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: descriptionValue,\r\n          instanceId: description.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <DescriptionStyleWrapper>\r\n        <EditInstanceForm\r\n          id={description.id}\r\n          label='Description Value:'\r\n          value={descriptionValue}\r\n          onChange={handleDescriptionValueChange}\r\n          onSave={handleDescriptionValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: description.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <DescriptionStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {descriptionValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </DescriptionStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DescriptionStyleWrapper selected={selected}>\r\n      {descriptionValue}\r\n      <Button type='button' onClick={() =>updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type='button' onClick={() =>updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      {/* ns__custom_start unit: appSpec, comp: Description, loc: renderEnding */}\r\n      {/* ns__custom_end unit: appSpec, comp: Description, loc: renderEnding */}\r\n    </DescriptionStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'updateInstance' }),\r\n  graphql(EXECUTE, { name: 'deleteInstance' })\r\n)(Description);\r\n\r\nDescription.propTypes = {\r\n  description: PropTypes.object,\r\n  parentId: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  updateInstance: PropTypes.func,\r\n  deleteInstance: PropTypes.func,\r\n  refetchQueries: PropTypes.array,\r\n  onSelect: PropTypes.func,\r\n  app: PropTypes.shape({\r\n    children: PropTypes.array,\r\n    id: PropTypes.string,\r\n  }),\r\n  description: PropTypes.shape({\r\n    value: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  // ns__custom_start unit: appSpec, comp: Description, loc: addedPropTypes\r\n  // ns__custom_end unit: appSpec, comp: Description, loc: addedPropTypes\r\n};\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: Descriptions\r\n\r\n// ns__custom_start unit: appSpec, comp: Descriptions, loc: beforeImports\r\n'use strict';\r\n// ns__custom_end unit: appSpec, comp: Descriptions, loc: beforeImports\r\n\r\nimport React, { Component, createRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { v4 } from 'uuid';\r\n\r\nimport DescriptionCreationForm from '../DescriptionCreationForm';\r\nimport Description from '../Description';\r\n\r\n// ns__custom_start unit: appSpec, comp: Descriptions, loc: addedImports\r\n// ns__custom_end unit: appSpec, comp: Descriptions, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nconst DescriptionsStyleWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n// ns__custom_end unit: appSpec, comp: Descriptions, loc: styling\r\n\r\nclass Descriptions extends Component {\r\n  // ns__custom_start unit: appSpec, comp: Descriptions, loc: beginning\r\n  // ns__custom_end unit: appSpec, comp: Descriptions, loc: beginning\r\n\r\n  state = {\r\n    selectedDescriptionId: null,\r\n    // ns__custom_start unit: appSpec, comp: Descriptions, loc: addedState\r\n    // ns__custom_end unit: appSpec, comp: Descriptions, loc: addedState\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClick);\r\n    // ns__custom_start unit: appSpec, comp: Descriptions, loc: componentDidMount\r\n    // ns__custom_end unit: appSpec, comp: Descriptions, loc: componentDidMount\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClick);\r\n    // ns__custom_start unit: appSpec, comp: Descriptions, loc: componentWillUnmount\r\n    // ns__custom_end unit: appSpec, comp: Descriptions, loc: componentWillUnmount\r\n  }\r\n\r\n  handleClick = (e) =>{\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedDescriptionId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) =>this.setState({ selectedDescriptionId: id });\r\n\r\n  render() {\r\n    const { appId, descriptions, refetchQueries, onUpdate } = this.props;\r\n    const { selectedDescriptionId } = this.state;\r\n\r\n    // ns__custom_start unit: appSpec, comp: Descriptions, loc: renderBeginning\r\n    // ns__custom_end unit: appSpec, comp: Descriptions, loc: renderBeginning\r\n\r\n    return (\r\n      <DescriptionsStyleWrapper\r\n        ref={this.wrapperRef}\r\n        onClick={this.handleClick}\r\n      >\r\n        <DescriptionCreationForm\r\n          parentId={appId}\r\n          refetchQueries={refetchQueries}\r\n          // ns__custom_start unit: appSpec, comp: Descriptions, loc: addedPropsForCreationForm\r\n          // ns__custom_end unit: appSpec, comp: Descriptions, loc: addedPropsForCreationForm\r\n        />\r\n\r\n        {descriptions.map((description) =>(\r\n          <Description\r\n            key={v4()}\r\n            description={description}\r\n            selected={description.id === selectedDescriptionId}\r\n            onUpdate={onUpdate}\r\n            parentId={appId}\r\n            refetchQueries={refetchQueries}\r\n            onSelect={this.handleSelect}\r\n            // ns__custom_start unit: appSpec, comp: Descriptions, loc: addedPropsForChildren\r\n            // ns__custom_end unit: appSpec, comp: Descriptions, loc: addedPropsForChildren\r\n          />\r\n        ))}\r\n        {/* ns__custom_start unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n        {/* ns__custom_end unit: appSpec, comp: Descriptions, loc: renderEnding */}\r\n      </DescriptionsStyleWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Descriptions;\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nfunction AppTitleAccordion({ title, description, children }) {\r\n  const styles = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <Accordion\r\n        expanded={expanded === 'panel1'}\r\n        onChange={handleAccordionChange('panel1')}\r\n        className={styles.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls='panel1bh-content'\r\n          id='panel1bh-header'\r\n          classes={{\r\n            content: styles.accordionSummary,\r\n          }}\r\n        >\r\n          <Typography className={styles.heading}>{title}</Typography>\r\n          <Typography className={styles.secondaryHeading}>\r\n            DESCRIPTION\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>{description}</Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppTitleAccordion;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    margin: '1.2rem 0',\r\n    \r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: 'Bold',\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    textAlign: 'initial'\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: '#26ABBC',\r\n  },\r\n  accordion: {\r\n    backgroundColor: '#D2ECEF',\r\n    margin: '1rem 0',\r\n    border: 'none',\r\n    borderRadius: '10px',\r\n    padding: '10px'\r\n  },\r\n  accordionSummary: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n\r\n// ns__file unit: appSpec, comp: App\r\n\r\n// ns__custom_start unit: appSpec, comp: App, loc: beforeImports\r\n'use strict';\r\n// ns__custom_end unit: appSpec, comp: App, loc: beforeImports\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\nimport { graphql } from '@apollo/react-hoc';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n  TYPE_USER_TYPE_ID,\r\n  TYPE_DESCRIPTION_ID,\r\n} from '../../../config';\r\n\r\nimport EditInstanceForm from '../../EditInstanceForm';\r\nimport DeleteInstanceMenu from '../../DeleteInstanceMenu';\r\n\r\nimport UserTypes from '../UserTypes';\r\nimport Descriptions from '../Descriptions';\r\nimport AppTitleAccordion from '../../../custom/AppTitleAccordion';\r\n\r\n// ns__custom_start unit: appSpec, comp: App, loc: addedImports\r\n// ns__custom_end unit: appSpec, comp: App, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: App, loc: styling\r\n// add styling here\r\nconst AppStyleWrapper = styled.div(\r\n  ({ selected, isDeleting }) => `\r\n  margin: 2em 1em;\r\n  padding: 1.5em;\r\n  \r\n  border-radius: 10px;\r\n  \r\n  background-color: ${isDeleting && 'tomato' || selected && 'white' ||  '#D2ECEF'};\r\n  cursor: ${selected ? 'auto' : 'pointer'};\r\n  width: 50%;\r\n\r\n \r\n`\r\n);\r\n\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  padding: 0;\r\n  color: #bbbbbb;\r\n  transition: color 0.5s ease;\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || '#000000'};\r\n  }\r\n`;\r\n\r\n\r\nAppStyleWrapper.defaultProps = {\r\n  \"data-id\": \"App__wrapper\"\r\n}\r\n\r\nButton.defaultProps = {\r\n  \"data-id\": \"App__button\"\r\n}\r\n\r\n// ns__custom_end unit: appSpec, comp: App, loc: styling\r\n\r\nfunction App({\r\n  app,\r\n  parentId,\r\n  selected,\r\n  updateInstance,\r\n  deleteInstance,\r\n  refetchQueries,\r\n  onSelect,\r\n}) {\r\n  const [appValue, updateAppValue] = useState(app.value);\r\n  const [isEditMode, updateIsEditMode] = useState(false);\r\n  const [isSaving, updateIsSaving] = useState(false);\r\n  const [isDeleteMode, updateIsDeleteMode] = useState(false);\r\n  const [isDeleting, updateIsDeleting] = useState(false);\r\n  // ns__custom_start unit: appSpec, comp: App, loc: beginning\r\n  // ns__custom_end unit: appSpec, comp: App, loc: beginning\r\n\r\n  const userTypeData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_USER_TYPE_ID);\r\n  const userTypes = userTypeData ? userTypeData.instances : [];\r\n  const descriptionData =\r\n    app.children &&\r\n    app.children.find((child) => child.typeId === TYPE_DESCRIPTION_ID);\r\n  const descriptions = descriptionData ? descriptionData.instances : [];\r\n\r\n  if (!selected) {\r\n    return (\r\n      <AppStyleWrapper onClick={() => onSelect(app.id)}>\r\n        {appValue}\r\n      </AppStyleWrapper>\r\n    );\r\n  }\r\n\r\n  function handleAppValueChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n\r\n  async function handleAppValueSave() {\r\n    updateIsSaving(true);\r\n\r\n    await updateInstance({\r\n      variables: {\r\n        actionId: UPDATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          value: appValue,\r\n          instanceId: app.id,\r\n        }),\r\n      },\r\n      refetchQueries,\r\n    });\r\n\r\n    updateIsEditMode(false);\r\n    updateIsSaving(false);\r\n  }\r\n\r\n  function handleCancelEdit() {\r\n    updateIsEditMode(false);\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <AppStyleWrapper>\r\n        <EditInstanceForm\r\n          id={app.id}\r\n          label={`What's the preferred title ${appValue ? `for ${appValue}?` : `off you App?`}`}\r\n          value={appValue}\r\n          onChange={handleAppValueChange}\r\n          onSave={handleAppValueSave}\r\n          onCancel={handleCancelEdit}\r\n          disabled={isSaving}\r\n        />\r\n      </AppStyleWrapper>\r\n    );\r\n  }\r\n\r\n  async function handleDelete() {\r\n    updateIsDeleting(true);\r\n\r\n    try {\r\n      await deleteInstance({\r\n        variables: {\r\n          actionId: DELETE_APP_FOR_APP_SPEC_ACTION_ID,\r\n          executionParameters: JSON.stringify({\r\n            parentInstanceId: parentId,\r\n            instanceId: app.id,\r\n          }),\r\n        },\r\n        refetchQueries,\r\n      });\r\n    } catch (e) {\r\n      updateIsDeleting(false);\r\n    }\r\n  }\r\n\r\n  function handleCancelDelete() {\r\n    updateIsDeleteMode(false);\r\n  }\r\n\r\n  if (isDeleteMode) {\r\n    return (\r\n      <AppStyleWrapper selected={selected} isDeleting={isDeleting}>\r\n        {appValue}\r\n        <DeleteInstanceMenu\r\n          onDelete={handleDelete}\r\n          onCancel={handleCancelDelete}\r\n          disabled={isDeleting}\r\n        />\r\n      </AppStyleWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppStyleWrapper selected={selected}>\r\n\r\n      <AppTitleAccordion \r\n        title={appValue}\r\n        description={descriptions[0] && descriptions[0].value}\r\n      />\r\n      <Button type='button' onClick={() => updateIsEditMode(true)}>\r\n        &#9998;\r\n      </Button>\r\n      <Button type='button' onClick={() => updateIsDeleteMode(true)}>\r\n        &#128465;\r\n      </Button>\r\n\r\n      <UserTypes\r\n        userTypes={userTypes}\r\n        appId={app.id}\r\n        label={appValue}\r\n        refetchQueries={refetchQueries}\r\n      />\r\n      {/* <Descriptions\r\n        descriptions={descriptions}\r\n        appId={app.id}\r\n        label='Description?'\r\n        refetchQueries={refetchQueries}\r\n      /> */}\r\n    </AppStyleWrapper>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'updateInstance' }),\r\n  graphql(EXECUTE, { name: 'deleteInstance' })\r\n)(App);\r\n\r\nApp.propTypes = {\r\n  app: PropTypes.object,\r\n  parentId: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  updateInstance: PropTypes.func,\r\n  deleteInstance: PropTypes.func,\r\n  refetchQueries: PropTypes.array,\r\n  app: PropTypes.shape({\r\n    children: PropTypes.array,\r\n    id: PropTypes.string,\r\n  }),\r\n  // ns__custom_start unit: appSpec, comp: App, loc: addedPropTypes\r\n  // ns__custom_end unit: appSpec, comp: App, loc: addedPropTypes\r\n};\r\n","/*\r\n  This file has been partially generated!\r\n  To permit updates to the generated portions of this code in the future,\r\n  please follow all rules at https://docs.google.com/document/d/1vYGEyX2Gnvd_VwAcWGv6Ie37oa2vXNL7wtl7oUyyJcw/edit?usp=sharing\r\n */\r\n// ns__file unit: appSpec, comp: AppCreationForm\r\n\r\n// ns__custom_start unit: appSpec, comp: AppCreationForm, loc: beforeImports\r\n\r\n\r\n\r\n// ns__custom_end unit: appSpec, comp: AppCreationForm, loc: beforeImports\r\n\r\nimport React, { useState } from 'react';\r\nimport { graphql } from '@apollo/react-hoc';\r\nimport styled from 'styled-components';\r\nimport { EXECUTE } from '@nostack/no-stack';\r\nimport compose from '@shopify/react-compose';\r\n\r\nimport { CREATE_APP_FOR_APP_SPEC_ACTION_ID\r\n } from '../../../config';\r\n\r\n// ns__custom_start unit: appSpec, comp: AppCreationForm, loc: addedImports\r\n// ns__custom_end unit: appSpec, comp: AppCreationForm, loc: addedImports\r\n\r\n// ns__custom_start unit: appSpec, comp: AppCreationForm, loc: styling\r\n// change styling here\r\nconst Form = styled.div`\r\n  margin: 2em;\r\n  padding: 1.5em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #F5F5F5;\r\n`;\r\n// ns__custom_end unit: appSpec, comp: AppCreationForm, loc: styling\r\n\r\nconst Button = styled.button`\r\n  margin-left: 1em;\r\n`;\r\n\r\nfunction AppCreationForm({\r\n                           customerId,\r\n                           createApp,\r\n                           refetchQueries,\r\n// ns__custom_start unit: appSpec, comp: AppCreationForm, loc: addedProps\r\n// ns__custom_end unit: appSpec, comp: AppCreationForm, loc: addedProps\r\n\r\n                         }) {\r\n  const [ appValue, updateAppValue ] = useState('');\r\n  const [ loading, updateLoading ] = useState(false);\r\n  // ns__custom_start unit: appSpec, comp: AppCreationForm, loc: beginning\r\n  // ns__custom_end unit: appSpec, comp: AppCreationForm, loc: beginning\r\n\r\n  function handleChange(e) {\r\n    updateAppValue(e.target.value);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!appValue) {\r\n      return;\r\n    }\r\n\r\n    updateLoading(true);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const createAppResponse = await createApp({\r\n      variables: {\r\n        actionId: CREATE_APP_FOR_APP_SPEC_ACTION_ID,\r\n        executionParameters: JSON.stringify({\r\n          parentInstanceId: customerId,\r\n          value: appValue,\r\n        }),\r\n        unrestricted: false,\r\n      },\r\n      refetchQueries\r\n    });\r\n\r\n    // const newAppData = JSON.parse(createAppResponse.data.Execute);\r\n\r\n    \r\n\r\n\r\n    updateAppValue('');\r\n    updateLoading(false);\r\n  }\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.charCode === 13) {\r\n      handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  // ns__custom_start unit: appSpec, comp: AppCreationForm, loc: beforeReturn\r\n  // ns__custom_end unit: appSpec, comp: AppCreationForm, loc: beforeReturn\r\n\r\n  // ns__start_section return\r\n  return (\r\n    <Form>\r\n      <label htmlFor='app-value'>\r\n        App:\r\n        <input\r\n          id='app-value'\r\n          type='text'\r\n          onChange={handleChange}\r\n          onKeyPress={handleKeyPress}\r\n          value={ appValue }\r\n          disabled={loading}\r\n        />\r\n      </label>\r\n      <Button type='submit'  disabled={loading}  onClick={handleSubmit}>\r\n        {\r\n          loading\r\n            ? 'Creating App...'\r\n            : 'Create App'\r\n        }\r\n      </Button>\r\n    </Form>\r\n  );\r\n  // ns__end_section return\r\n}\r\n\r\nexport default compose(\r\n  graphql(EXECUTE, { name: 'createApp' }),\r\n  \r\n  \r\n  \r\n)(AppCreationForm);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { Unit } from \"@nostack/no-stack\";\r\nimport styled from \"styled-components\";\r\nimport { v4 } from \"uuid\";\r\nimport { withNoStack } from \"@nostack/no-stack\";\r\n\r\nimport { flattenData } from \"../../flattenData\";\r\n\r\nimport AppCreationForm from \"../AppSpec/AppCreationForm\";\r\nimport App from \"../AppSpec/App\";\r\n\r\nimport { SOURCE_APP_SPEC_ID } from \"../../config\";\r\nimport {\r\n  APP_SPEC_RELATIONSHIPS,\r\n  SOURCE_APP_SPEC_QUERY,\r\n} from \"../source-props/appSpec\";\r\n\r\n// np__added_start unit: appSpec, comp: Apps, loc: styling\r\n\r\n// add styling here\r\nconst AppsStyleWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n// np__added_end unit: appSpec, comp: Apps, loc: styling\r\n\r\nclass Apps extends Component {\r\n  // np__added_start unit: appSpec, comp: Apps, loc: beginning\r\n  // np__added_end unit: appSpec, comp: Apps, loc: beginning\r\n  state = {\r\n    selectedAppId: null,\r\n  };\r\n\r\n  wrapperRef = createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClick);\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const node = this.wrapperRef.current;\r\n\r\n    if (node && node !== e.target && !node.contains(e.target)) {\r\n      this.setState({ selectedAppId: null });\r\n    }\r\n  };\r\n\r\n  handleSelect = (id) => this.setState({ selectedAppId: id });\r\n\r\n  render() {\r\n    const customerId = \"2ea51c4a-c072-4797-9de7-4bec0fc11db3\";\r\n    const { selectedAppId } = this.state;\r\n\r\n    const parameters = {\r\n      currentCustomer: customerId,\r\n    };\r\n\r\n    return (\r\n      <Unit\r\n        id={SOURCE_APP_SPEC_ID}\r\n        typeRelationships={APP_SPEC_RELATIONSHIPS}\r\n        query={SOURCE_APP_SPEC_QUERY}\r\n        parameters={parameters}\r\n      >\r\n        {({ loading, error, data, refetchQueries }) => {\r\n          if (loading) return \"Loading...\";\r\n\r\n          if (error) {\r\n            console.error(error);\r\n            return `Error: ${error.graphQLErrors}`;\r\n          }\r\n\r\n          const apps = data.unitData.map((el) => flattenData(el));\r\n\r\n          return (\r\n            <>\r\n              <div className=\"box\">\r\n                <div className=\"flex flex-column\">\r\n                  {apps &&\r\n                    apps.map((app, i) => (\r\n                      <App\r\n                        key={v4()}\r\n                        parentId={customerId}\r\n                        app={app}\r\n                        selected={app.id === selectedAppId}\r\n                        refetchQueries={refetchQueries}\r\n                        onSelect={this.handleSelect}\r\n                      />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n            </>\r\n          );\r\n        }}\r\n      </Unit>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withNoStack(Apps);\r\n"],"sourceRoot":""}